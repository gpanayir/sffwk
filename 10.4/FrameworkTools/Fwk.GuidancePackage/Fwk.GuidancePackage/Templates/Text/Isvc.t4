<#@ template language="C#" #>

<#@ property processor="PropertyProcessor" name="RootNamespace" #>
<#@ property processor="PropertyProcessor" name="projectname" #>
<#@ property processor="PropertyProcessor" name="servicename" #>
<#@ property processor="PropertyProcessor" name="developer" #>
<#@ property processor="PropertyProcessor" name="date" #>
<#@ assembly name="System.dll" #>
<#@ import namespace="System" #>
	
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Fwk 10.0 Code Generator.
//     Runtime Version: 10.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//</auto-generated>
//   Author: <#= developer #> 
//   Date:  <#= date #>
// ==============================================================================


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Fwk.Bases;
using System.Xml.Serialization;
using <#= RootNamespace #>.Common.BE;

namespace <#= RootNamespace #>.Common.ISVC.<#= servicename #>
{
    
    #region [Request]
    [Serializable]
    public class <#= servicename #>Req : Request<Params>/// If you hasn´t any returns value you can use : Request<DummyContract> and remove Params class
    {
        public <#= servicename #>Req()
        {
            base.ServiceName = "<#= servicename #>Service";
        }
    }

     #region [BussinesData]
    [XmlInclude(typeof(Params)), Serializable]
    public class Params : Entity
    {

    }
    
    #endregion
    #endregion

    #region [Response]
    [Serializable]
    public class <#= servicename #>Res: Response<Result> ///  If you hasn´t any returns value you can use : Request<DummyContract> and remove Params class
    {
    }

    #region [BussinesData]

    [XmlInclude(typeof(Result)), Serializable]
    public class Result : Entity
    {
     

    }

    #endregion
    #endregion
}
