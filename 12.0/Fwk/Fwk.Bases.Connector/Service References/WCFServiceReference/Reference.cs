//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fwk.Bases.Connector.WCFServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFServiceReference.IFwkService")]
    public interface IFwkService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/ExecuteService", ReplyAction="http://tempuri.org/IFwkService/ExecuteServiceResponse")]
        Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceResponse ExecuteService(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFwkService/ExecuteService", ReplyAction="http://tempuri.org/IFwkService/ExecuteServiceResponse")]
        System.IAsyncResult BeginExecuteService(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceRequest request, System.AsyncCallback callback, object asyncState);
        
        Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceResponse EndExecuteService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/GetServiceConfiguration", ReplyAction="http://tempuri.org/IFwkService/GetServiceConfigurationResponse")]
        Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationResponse GetServiceConfiguration(Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFwkService/GetServiceConfiguration", ReplyAction="http://tempuri.org/IFwkService/GetServiceConfigurationResponse")]
        System.IAsyncResult BeginGetServiceConfiguration(Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationRequest request, System.AsyncCallback callback, object asyncState);
        
        Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationResponse EndGetServiceConfiguration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/GetServicesList", ReplyAction="http://tempuri.org/IFwkService/GetServicesListResponse")]
        Fwk.Bases.Connector.WCFServiceReference.GetServicesListResponse GetServicesList(Fwk.Bases.Connector.WCFServiceReference.GetServicesListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFwkService/GetServicesList", ReplyAction="http://tempuri.org/IFwkService/GetServicesListResponse")]
        System.IAsyncResult BeginGetServicesList(Fwk.Bases.Connector.WCFServiceReference.GetServicesListRequest request, System.AsyncCallback callback, object asyncState);
        
        Fwk.Bases.Connector.WCFServiceReference.GetServicesListResponse EndGetServicesList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/RetriveDispatcherInfo", ReplyAction="http://tempuri.org/IFwkService/RetriveDispatcherInfoResponse")]
        Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoResponse RetriveDispatcherInfo(Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFwkService/RetriveDispatcherInfo", ReplyAction="http://tempuri.org/IFwkService/RetriveDispatcherInfoResponse")]
        System.IAsyncResult BeginRetriveDispatcherInfo(Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoResponse EndRetriveDispatcherInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/GetAllApplicationsId", ReplyAction="http://tempuri.org/IFwkService/GetAllApplicationsIdResponse")]
        Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdResponse GetAllApplicationsId(Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFwkService/GetAllApplicationsId", ReplyAction="http://tempuri.org/IFwkService/GetAllApplicationsIdResponse")]
        System.IAsyncResult BeginGetAllApplicationsId(Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdRequest request, System.AsyncCallback callback, object asyncState);
        
        Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdResponse EndGetAllApplicationsId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/GetProviderInfo", ReplyAction="http://tempuri.org/IFwkService/GetProviderInfoResponse")]
        Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoResponse GetProviderInfo(Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFwkService/GetProviderInfo", ReplyAction="http://tempuri.org/IFwkService/GetProviderInfoResponse")]
        System.IAsyncResult BeginGetProviderInfo(Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoResponse EndGetProviderInfo(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteService", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteServiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string providerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string jsonRequets;
        
        public ExecuteServiceRequest() {
        }
        
        public ExecuteServiceRequest(string providerName, string serviceName, string jsonRequets) {
            this.providerName = providerName;
            this.serviceName = serviceName;
            this.jsonRequets = jsonRequets;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteServiceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteServiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ExecuteServiceResult;
        
        public ExecuteServiceResponse() {
        }
        
        public ExecuteServiceResponse(string ExecuteServiceResult) {
            this.ExecuteServiceResult = ExecuteServiceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceConfiguration", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetServiceConfigurationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string providerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceName;
        
        public GetServiceConfigurationRequest() {
        }
        
        public GetServiceConfigurationRequest(string providerName, string serviceName) {
            this.providerName = providerName;
            this.serviceName = serviceName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceConfigurationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetServiceConfigurationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetServiceConfigurationResult;
        
        public GetServiceConfigurationResponse() {
        }
        
        public GetServiceConfigurationResponse(string GetServiceConfigurationResult) {
            this.GetServiceConfigurationResult = GetServiceConfigurationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServicesList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetServicesListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string providerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool ViewAsXml;
        
        public GetServicesListRequest() {
        }
        
        public GetServicesListRequest(string providerName, bool ViewAsXml) {
            this.providerName = providerName;
            this.ViewAsXml = ViewAsXml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServicesListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetServicesListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetServicesListResult;
        
        public GetServicesListResponse() {
        }
        
        public GetServicesListResponse(string GetServicesListResult) {
            this.GetServicesListResult = GetServicesListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetriveDispatcherInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RetriveDispatcherInfoRequest {
        
        public RetriveDispatcherInfoRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetriveDispatcherInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RetriveDispatcherInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Fwk.ConfigSection.DispatcherInfo RetriveDispatcherInfoResult;
        
        public RetriveDispatcherInfoResponse() {
        }
        
        public RetriveDispatcherInfoResponse(Fwk.ConfigSection.DispatcherInfo RetriveDispatcherInfoResult) {
            this.RetriveDispatcherInfoResult = RetriveDispatcherInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllApplicationsId", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllApplicationsIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string providerName;
        
        public GetAllApplicationsIdRequest() {
        }
        
        public GetAllApplicationsIdRequest(string providerName) {
            this.providerName = providerName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllApplicationsIdResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllApplicationsIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] GetAllApplicationsIdResult;
        
        public GetAllApplicationsIdResponse() {
        }
        
        public GetAllApplicationsIdResponse(string[] GetAllApplicationsIdResult) {
            this.GetAllApplicationsIdResult = GetAllApplicationsIdResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProviderInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetProviderInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string providerName;
        
        public GetProviderInfoRequest() {
        }
        
        public GetProviderInfoRequest(string providerName) {
            this.providerName = providerName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProviderInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetProviderInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Fwk.ConfigSection.MetadataProvider GetProviderInfoResult;
        
        public GetProviderInfoResponse() {
        }
        
        public GetProviderInfoResponse(Fwk.ConfigSection.MetadataProvider GetProviderInfoResult) {
            this.GetProviderInfoResult = GetProviderInfoResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFwkServiceChannel : Fwk.Bases.Connector.WCFServiceReference.IFwkService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecuteServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecuteServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServiceConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServiceConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServicesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServicesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.GetServicesListResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Fwk.Bases.Connector.WCFServiceReference.GetServicesListResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetriveDispatcherInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetriveDispatcherInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllApplicationsIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllApplicationsIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProviderInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProviderInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FwkServiceClient : System.ServiceModel.ClientBase<Fwk.Bases.Connector.WCFServiceReference.IFwkService>, Fwk.Bases.Connector.WCFServiceReference.IFwkService {
        
        private BeginOperationDelegate onBeginExecuteServiceDelegate;
        
        private EndOperationDelegate onEndExecuteServiceDelegate;
        
        private System.Threading.SendOrPostCallback onExecuteServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServiceConfigurationDelegate;
        
        private EndOperationDelegate onEndGetServiceConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onGetServiceConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServicesListDelegate;
        
        private EndOperationDelegate onEndGetServicesListDelegate;
        
        private System.Threading.SendOrPostCallback onGetServicesListCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetriveDispatcherInfoDelegate;
        
        private EndOperationDelegate onEndRetriveDispatcherInfoDelegate;
        
        private System.Threading.SendOrPostCallback onRetriveDispatcherInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllApplicationsIdDelegate;
        
        private EndOperationDelegate onEndGetAllApplicationsIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllApplicationsIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProviderInfoDelegate;
        
        private EndOperationDelegate onEndGetProviderInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetProviderInfoCompletedDelegate;
        
        public FwkServiceClient() {
        }
        
        public FwkServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FwkServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FwkServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FwkServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<ExecuteServiceCompletedEventArgs> ExecuteServiceCompleted;
        
        public event System.EventHandler<GetServiceConfigurationCompletedEventArgs> GetServiceConfigurationCompleted;
        
        public event System.EventHandler<GetServicesListCompletedEventArgs> GetServicesListCompleted;
        
        public event System.EventHandler<RetriveDispatcherInfoCompletedEventArgs> RetriveDispatcherInfoCompleted;
        
        public event System.EventHandler<GetAllApplicationsIdCompletedEventArgs> GetAllApplicationsIdCompleted;
        
        public event System.EventHandler<GetProviderInfoCompletedEventArgs> GetProviderInfoCompleted;
        
        public Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceResponse ExecuteService(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceRequest request) {
            return base.Channel.ExecuteService(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExecuteService(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecuteService(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceResponse EndExecuteService(System.IAsyncResult result) {
            return base.Channel.EndExecuteService(result);
        }
        
        private System.IAsyncResult OnBeginExecuteService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceRequest request = ((Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceRequest)(inValues[0]));
            return this.BeginExecuteService(request, callback, asyncState);
        }
        
        private object[] OnEndExecuteService(System.IAsyncResult result) {
            Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceResponse retVal = this.EndExecuteService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExecuteServiceCompleted(object state) {
            if ((this.ExecuteServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteServiceCompleted(this, new ExecuteServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecuteServiceAsync(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceRequest request) {
            this.ExecuteServiceAsync(request, null);
        }
        
        public void ExecuteServiceAsync(Fwk.Bases.Connector.WCFServiceReference.ExecuteServiceRequest request, object userState) {
            if ((this.onBeginExecuteServiceDelegate == null)) {
                this.onBeginExecuteServiceDelegate = new BeginOperationDelegate(this.OnBeginExecuteService);
            }
            if ((this.onEndExecuteServiceDelegate == null)) {
                this.onEndExecuteServiceDelegate = new EndOperationDelegate(this.OnEndExecuteService);
            }
            if ((this.onExecuteServiceCompletedDelegate == null)) {
                this.onExecuteServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteServiceCompleted);
            }
            base.InvokeAsync(this.onBeginExecuteServiceDelegate, new object[] {
                        request}, this.onEndExecuteServiceDelegate, this.onExecuteServiceCompletedDelegate, userState);
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationResponse GetServiceConfiguration(Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationRequest request) {
            return base.Channel.GetServiceConfiguration(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetServiceConfiguration(Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServiceConfiguration(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationResponse EndGetServiceConfiguration(System.IAsyncResult result) {
            return base.Channel.EndGetServiceConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginGetServiceConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationRequest request = ((Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationRequest)(inValues[0]));
            return this.BeginGetServiceConfiguration(request, callback, asyncState);
        }
        
        private object[] OnEndGetServiceConfiguration(System.IAsyncResult result) {
            Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationResponse retVal = this.EndGetServiceConfiguration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServiceConfigurationCompleted(object state) {
            if ((this.GetServiceConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServiceConfigurationCompleted(this, new GetServiceConfigurationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServiceConfigurationAsync(Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationRequest request) {
            this.GetServiceConfigurationAsync(request, null);
        }
        
        public void GetServiceConfigurationAsync(Fwk.Bases.Connector.WCFServiceReference.GetServiceConfigurationRequest request, object userState) {
            if ((this.onBeginGetServiceConfigurationDelegate == null)) {
                this.onBeginGetServiceConfigurationDelegate = new BeginOperationDelegate(this.OnBeginGetServiceConfiguration);
            }
            if ((this.onEndGetServiceConfigurationDelegate == null)) {
                this.onEndGetServiceConfigurationDelegate = new EndOperationDelegate(this.OnEndGetServiceConfiguration);
            }
            if ((this.onGetServiceConfigurationCompletedDelegate == null)) {
                this.onGetServiceConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServiceConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginGetServiceConfigurationDelegate, new object[] {
                        request}, this.onEndGetServiceConfigurationDelegate, this.onGetServiceConfigurationCompletedDelegate, userState);
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.GetServicesListResponse GetServicesList(Fwk.Bases.Connector.WCFServiceReference.GetServicesListRequest request) {
            return base.Channel.GetServicesList(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetServicesList(Fwk.Bases.Connector.WCFServiceReference.GetServicesListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServicesList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Fwk.Bases.Connector.WCFServiceReference.GetServicesListResponse EndGetServicesList(System.IAsyncResult result) {
            return base.Channel.EndGetServicesList(result);
        }
        
        private System.IAsyncResult OnBeginGetServicesList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Fwk.Bases.Connector.WCFServiceReference.GetServicesListRequest request = ((Fwk.Bases.Connector.WCFServiceReference.GetServicesListRequest)(inValues[0]));
            return this.BeginGetServicesList(request, callback, asyncState);
        }
        
        private object[] OnEndGetServicesList(System.IAsyncResult result) {
            Fwk.Bases.Connector.WCFServiceReference.GetServicesListResponse retVal = this.EndGetServicesList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServicesListCompleted(object state) {
            if ((this.GetServicesListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServicesListCompleted(this, new GetServicesListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServicesListAsync(Fwk.Bases.Connector.WCFServiceReference.GetServicesListRequest request) {
            this.GetServicesListAsync(request, null);
        }
        
        public void GetServicesListAsync(Fwk.Bases.Connector.WCFServiceReference.GetServicesListRequest request, object userState) {
            if ((this.onBeginGetServicesListDelegate == null)) {
                this.onBeginGetServicesListDelegate = new BeginOperationDelegate(this.OnBeginGetServicesList);
            }
            if ((this.onEndGetServicesListDelegate == null)) {
                this.onEndGetServicesListDelegate = new EndOperationDelegate(this.OnEndGetServicesList);
            }
            if ((this.onGetServicesListCompletedDelegate == null)) {
                this.onGetServicesListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServicesListCompleted);
            }
            base.InvokeAsync(this.onBeginGetServicesListDelegate, new object[] {
                        request}, this.onEndGetServicesListDelegate, this.onGetServicesListCompletedDelegate, userState);
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoResponse RetriveDispatcherInfo(Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoRequest request) {
            return base.Channel.RetriveDispatcherInfo(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRetriveDispatcherInfo(Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetriveDispatcherInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoResponse EndRetriveDispatcherInfo(System.IAsyncResult result) {
            return base.Channel.EndRetriveDispatcherInfo(result);
        }
        
        private System.IAsyncResult OnBeginRetriveDispatcherInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoRequest request = ((Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoRequest)(inValues[0]));
            return this.BeginRetriveDispatcherInfo(request, callback, asyncState);
        }
        
        private object[] OnEndRetriveDispatcherInfo(System.IAsyncResult result) {
            Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoResponse retVal = this.EndRetriveDispatcherInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetriveDispatcherInfoCompleted(object state) {
            if ((this.RetriveDispatcherInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetriveDispatcherInfoCompleted(this, new RetriveDispatcherInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetriveDispatcherInfoAsync(Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoRequest request) {
            this.RetriveDispatcherInfoAsync(request, null);
        }
        
        public void RetriveDispatcherInfoAsync(Fwk.Bases.Connector.WCFServiceReference.RetriveDispatcherInfoRequest request, object userState) {
            if ((this.onBeginRetriveDispatcherInfoDelegate == null)) {
                this.onBeginRetriveDispatcherInfoDelegate = new BeginOperationDelegate(this.OnBeginRetriveDispatcherInfo);
            }
            if ((this.onEndRetriveDispatcherInfoDelegate == null)) {
                this.onEndRetriveDispatcherInfoDelegate = new EndOperationDelegate(this.OnEndRetriveDispatcherInfo);
            }
            if ((this.onRetriveDispatcherInfoCompletedDelegate == null)) {
                this.onRetriveDispatcherInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetriveDispatcherInfoCompleted);
            }
            base.InvokeAsync(this.onBeginRetriveDispatcherInfoDelegate, new object[] {
                        request}, this.onEndRetriveDispatcherInfoDelegate, this.onRetriveDispatcherInfoCompletedDelegate, userState);
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdResponse GetAllApplicationsId(Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdRequest request) {
            return base.Channel.GetAllApplicationsId(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllApplicationsId(Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllApplicationsId(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdResponse EndGetAllApplicationsId(System.IAsyncResult result) {
            return base.Channel.EndGetAllApplicationsId(result);
        }
        
        private System.IAsyncResult OnBeginGetAllApplicationsId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdRequest request = ((Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdRequest)(inValues[0]));
            return this.BeginGetAllApplicationsId(request, callback, asyncState);
        }
        
        private object[] OnEndGetAllApplicationsId(System.IAsyncResult result) {
            Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdResponse retVal = this.EndGetAllApplicationsId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllApplicationsIdCompleted(object state) {
            if ((this.GetAllApplicationsIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllApplicationsIdCompleted(this, new GetAllApplicationsIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllApplicationsIdAsync(Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdRequest request) {
            this.GetAllApplicationsIdAsync(request, null);
        }
        
        public void GetAllApplicationsIdAsync(Fwk.Bases.Connector.WCFServiceReference.GetAllApplicationsIdRequest request, object userState) {
            if ((this.onBeginGetAllApplicationsIdDelegate == null)) {
                this.onBeginGetAllApplicationsIdDelegate = new BeginOperationDelegate(this.OnBeginGetAllApplicationsId);
            }
            if ((this.onEndGetAllApplicationsIdDelegate == null)) {
                this.onEndGetAllApplicationsIdDelegate = new EndOperationDelegate(this.OnEndGetAllApplicationsId);
            }
            if ((this.onGetAllApplicationsIdCompletedDelegate == null)) {
                this.onGetAllApplicationsIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllApplicationsIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllApplicationsIdDelegate, new object[] {
                        request}, this.onEndGetAllApplicationsIdDelegate, this.onGetAllApplicationsIdCompletedDelegate, userState);
        }
        
        public Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoResponse GetProviderInfo(Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoRequest request) {
            return base.Channel.GetProviderInfo(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProviderInfo(Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProviderInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoResponse EndGetProviderInfo(System.IAsyncResult result) {
            return base.Channel.EndGetProviderInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetProviderInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoRequest request = ((Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoRequest)(inValues[0]));
            return this.BeginGetProviderInfo(request, callback, asyncState);
        }
        
        private object[] OnEndGetProviderInfo(System.IAsyncResult result) {
            Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoResponse retVal = this.EndGetProviderInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProviderInfoCompleted(object state) {
            if ((this.GetProviderInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProviderInfoCompleted(this, new GetProviderInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProviderInfoAsync(Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoRequest request) {
            this.GetProviderInfoAsync(request, null);
        }
        
        public void GetProviderInfoAsync(Fwk.Bases.Connector.WCFServiceReference.GetProviderInfoRequest request, object userState) {
            if ((this.onBeginGetProviderInfoDelegate == null)) {
                this.onBeginGetProviderInfoDelegate = new BeginOperationDelegate(this.OnBeginGetProviderInfo);
            }
            if ((this.onEndGetProviderInfoDelegate == null)) {
                this.onEndGetProviderInfoDelegate = new EndOperationDelegate(this.OnEndGetProviderInfo);
            }
            if ((this.onGetProviderInfoCompletedDelegate == null)) {
                this.onGetProviderInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProviderInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetProviderInfoDelegate, new object[] {
                        request}, this.onEndGetProviderInfoDelegate, this.onGetProviderInfoCompletedDelegate, userState);
        }
    }
}
