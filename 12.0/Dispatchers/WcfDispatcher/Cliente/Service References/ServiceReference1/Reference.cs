//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cliente.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IFwkService")]
    public interface IFwkService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFwkService/ExecuteService", ReplyAction="http://tempuri.org/IFwkService/ExecuteServiceResponse")]
        Cliente.ServiceReference1.ExecuteServiceResponse ExecuteService(Cliente.ServiceReference1.ExecuteServiceRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteService", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteServiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string providerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string jsonRequets;
        
        public ExecuteServiceRequest() {
        }
        
        public ExecuteServiceRequest(string providerName, string serviceName, string jsonRequets) {
            this.providerName = providerName;
            this.serviceName = serviceName;
            this.jsonRequets = jsonRequets;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteServiceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteServiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ExecuteServiceResult;
        
        public ExecuteServiceResponse() {
        }
        
        public ExecuteServiceResponse(string ExecuteServiceResult) {
            this.ExecuteServiceResult = ExecuteServiceResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFwkServiceChannel : Cliente.ServiceReference1.IFwkService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FwkServiceClient : System.ServiceModel.ClientBase<Cliente.ServiceReference1.IFwkService>, Cliente.ServiceReference1.IFwkService {
        
        public FwkServiceClient() {
        }
        
        public FwkServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FwkServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FwkServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FwkServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Cliente.ServiceReference1.ExecuteServiceResponse ExecuteService(Cliente.ServiceReference1.ExecuteServiceRequest request) {
            return base.Channel.ExecuteService(request);
        }
    }
}
