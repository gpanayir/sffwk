<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fwk.Bases</name>
    </assembly>
    <members>
        <member name="T:Fwk.HelperFunctions.MoneyFunctions">
            <summary>
            Funciones de valores monetarios.
            </summary>
            <Date>12-05-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.MoneyFunctions.ConversionGet(System.Single,System.Single)">
            <summary>
            Devuelve el valor monetario convertido a
            otro tipo de cambio.
            </summary>
            <param name="pChangeValue">El valor del tipo de cambio.</param>
            <param name="pAmount">El monto a convertir.</param>
            <returns>Valor monetario.</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.MoneyFunctions.FormatCurrencyView(System.String)">
            <summary>
            Quita los puntos, 
            </summary>
            <param name="pExpresion">Expresion a evaluar.</param>
            <returns>Un string con el campo money formateado.</returns>
            <Date>12-07-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.MoneyFunctions.FormatCurrency(System.String)">
            <summary>
            
            </summary>
            <param name="pExpression">Expresion a formatear.</param>
            <returns>Texto con valor currency formateado.</returns>
            <Date>12-07-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.MoneyFunctions.FormatCurrency(System.Double)">
            <summary>
            
            </summary>
            <param name="pExpression">Expresion a formatear.</param>
            <returns>Texto con valor currency formateado.</returns>
            <Date>12-07-2009</Date>
            <Author>moviedo - </Author>
        </member>
        <member name="T:Fwk.Logging.Targets.Target">
            <summary>
            Representa genéricamente los destinos de la escritura
            de los logs de eventos. 
            Es la clase base de los destinos.
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="T:Fwk.Logging.Targets.ITarget">
            <summary>
            Interfaz comun a todos los <see cref="T:Fwk.Logging.Targets.Target"/> de logueo del fwk.-
            </summary>
        </member>
        <member name="M:Fwk.Logging.Targets.ITarget.SearchByParam(Fwk.Logging.Event)">
            <summary>
            Busca eventos bajo los parametros indicadosdesde el origen de datos 
            que puede ser un Xml o una bas d edatos .-
            No es aplicable a eventos provenientes de visor de evento
            </summary>
            <param name="pEvent">Event como parametro de filtros</param>
            <returns>Lista de eventos</returns>
        </member>
        <member name="M:Fwk.Logging.Targets.ITarget.Write(Fwk.Logging.Event)">
            <summary>
            
            </summary>
            <param name="pEvent"></param>
        </member>
        <member name="M:Fwk.Logging.Targets.ITarget.SearchByParam(Fwk.Logging.Event,System.DateTime)">
            <summary>
            Busca eventos bajo los parametros indicadosdesde el origen de datos 
            que puede ser un Xml o una bas d edatos .-
            No es aplicable a eventos provenientes de visor de evento
            </summary>
            <param name="pEvent">Event como parametro de filtros</param>
            <param name="pEndDate">Fecha limite de fin de busqueda</param>
            <returns>Lista de eventos</returns>
        </member>
        <member name="M:Fwk.Logging.Targets.ITarget.Remove(System.Collections.Generic.List{System.String})">
            <summary>
            Elimina del origen de logueo una lista de eventos por medio de su guid
            </summary>
            <param name="eventIdList">Lista de guids de los eventos a eliminar</param>
        </member>
        <member name="M:Fwk.Logging.Targets.ITarget.Remove(System.Collections.Generic.List{System.Guid})">
            <summary>
            Elimina del origen de logueo una lista de eventos por medio de su guid
            </summary>
            <param name="eventIdList">Lista de guids de los eventos a eliminar</param>
        </member>
        <member name="P:Fwk.Logging.Targets.ITarget.Type">
            <summary>
            Tipo de evento
            </summary>
            <returns><see cref="T:Fwk.Logging.Targets.TargetType"/></returns>
        </member>
        <member name="M:Fwk.Logging.Targets.Target.Write(Fwk.Logging.Event)">
            <summary>
            método que escribe el log del evento sobre el
            destino.
            </summary>
            <param name="pEvent">Evento a loguear.</param>
        </member>
        <member name="M:Fwk.Logging.Targets.Target.SearchByParam(Fwk.Logging.Event)">
            <summary>
            Busca eventos bajo los parametros indicadosdesde el origen de datos 
            que puede ser un Xml o una bas d edatos .-
            No es aplicable a eventos provenientes de visor de evento
            </summary>
            <param name="pEvent">Event como parametro de filtros</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Logging.Targets.Target.SearchByParam(Fwk.Logging.Event,System.DateTime)">
            <summary>
            Busca eventos bajo los parametros indicadosdesde el origen de datos 
            que puede ser un Xml o una bas d edatos .-
            No es aplicable a eventos provenientes de visor de evento
            </summary>
            <param name="pEvent">Event como parametro de filtros</param>
            <param name="pEndDate">Fecha limite de fin de busqueda</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Logging.Targets.Target.Remove(System.Collections.Generic.List{System.String})">
            <summary>
            Elimina del origen de logueo una lista de eventos por medio de su guid
            </summary>
            <param name="eventIdList">Lista de guids de los eventos a eliminar</param>
        </member>
        <member name="M:Fwk.Logging.Targets.Target.Remove(System.Collections.Generic.List{System.Guid})">
            <summary>
            Elimina del origen de logueo una lista de eventos por medio de su guid
            </summary>
            <param name="eventIdList">Lista de guids de los eventos a eliminar</param>
        </member>
        <member name="M:Fwk.Logging.Targets.Target.TargetFactory(Fwk.Logging.Targets.TargetType,System.String)">
            <summary>
            Fabrica de Itargets . Crea un ITarget sin basarce en archivo de configuración.-
            </summary>
            <param name="targetType"></param>
            <param name="key">Clave del Target. La clave sera ademas utiliza como 
            Si es DatabaseTarget --> CnnStringName
            Si es TargetType     --> FileName
            Si es Xml            --> FileName
            </param>
            <returns></returns>
        </member>
        <member name="P:Fwk.Logging.Targets.Target.Type">
            <summary>
            Tipo de destino.
            </summary>
        </member>
        <member name="P:Fwk.Logging.Targets.Target.FileName">
            <summary>
            Nombre de archivo sobre el cual se escribirá 
            el log del evento.
            </summary>
        </member>
        <member name="T:Fwk.Logging.Event">
            <summary>
            Clase que modela el evento a loguear.
            </summary>
            <date>200609/02</date>
            <author>moviedo</author>
        </member>
        <member name="T:Fwk.Bases.Entity">
             <summary>
             Clase base abstracta que define comportamiento para las clses tipo Entidad.-
             Las clases tipo entidad no tienen comportamiento de negocio solo los comportamientos
             heredados de su clase base.-
             </summary>
             <example>
             <para>El siguiente ejemplo muestra un clase que hereda de la base Entity</para>
             <code>
             <![CDATA[
                [XmlInclude(typeof(Cliente)), Serializable]
                public class Cliente : Entity
                {
                    #region [Private Members]
                    private System.Int32? _IdCliente;
                    private System.Int64? _CUIT;
                    private System.String _RazonSocial;
                    #endregion
                    #region [Properties]
            
                    #region [IdCliente]
                    [XmlElement(ElementName = "IdCliente", DataType = "int")]
                    public int? IdCliente
                    {
                        get { return _IdCliente; }
                        set { _IdCliente = value; }
                    }
                    #endregion
            
                    #region [CUIT]
            
                    public Int64? CUIT
                    {
                        get { return _CUIT; }
                        set { _CUIT = value; }
                    }
                    #endregion
            
                    #region [RazonSocial]
                    [XmlElement(ElementName = "RazonSocial", DataType = "string")]
                    public String RazonSocial
                    {
                        get { return _RazonSocial; }
                        set { _RazonSocial = value; }
                    }
                    #endregion
            
                    #region [NombreFantasia]
                    [XmlElement(ElementName = "NombreFantasia", DataType = "string")]
                    public String NombreFantasia
                    {
                        get { return _NombreFantasia; }
                        set { _NombreFantasia = value; }
                    }
                    #endregion
            
                    #endregion
            
                   #region [Methods]
                    /// <summary>
                    /// Metodo estatico que retorna un objeto Cliente apartir de un xml.-
                    /// </summary>
                    /// <param name="pXml">String con el xml</param>
                    /// <returns>Clientes</returns>
                    public static Cliente GetClientesFromXml(String pXml)
                    {
                        return (Cliente)Entity.GetObjectFromXml(typeof(Cliente), pXml);
                    }
                    #endregion
                }
                #endregion
             }
             ]]>
             </code> 
             <code>
             <![CDATA[
              [XmlRoot("ClienteList"), SerializableAttribute]
            public class ClienteList : Entities<Cliente>
            {
                 #region [Methods]
                    /// <summary>
              /// Metodo estatico que retorna un objeto ClienteList apartir de un xml.-
                    /// </summary>
                   /// <param name="pXml">String con el xml</param>
                   /// <returns>ClienteList</returns>
                  public static ClienteList GetClienteListFromXml(String pXml)
                  {
                      return (ClienteList)Entity.GetObjectFromXml(typeof(ClienteList), pXml);
                  }
                  #endregion
               }
             ]]>
             </code>
            </example>
             <Author>Marcelo .F. Oviedo</Author> 
        </member>
        <member name="T:Fwk.Bases.IEntity">
            <summary>
            Define la interfaz de todas las Entidades tipo coleccion y escalares.
            Es decir la interfaz de las Entities y las Entity
            </summary>
        </member>
        <member name="T:Fwk.Bases.IBaseEntity">
            <summary>
            Define la interfaz de todas las Entidades tipo coleccion y escalares.
            Es decir la interfaz de las Entities y las Entity
            </summary>
        </member>
        <member name="M:Fwk.Bases.IBaseEntity.GetXml">
            <summary>
            Obtine un xml producto de la serializacion de la coleccion Entities.-
            </summary>
            <returns>string con el xml de la serializacion</returns>
        </member>
        <member name="M:Fwk.Bases.IBaseEntity.SetXml(System.String)">
            <summary>
            Rellena la clase con los valores del XML 
            <param name="pXmlData">Xml con el que se crea el objeto</param>
            </summary>
        </member>
        <member name="M:Fwk.Bases.IEntity.GetDataSet">
            <summary>
             Obtiene un System.DataSet 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entity.SetHistory">
            <summary>
            Establece una marca de historia con los valores actuales de la clase
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.Bases.Entity.AddHistory(System.String,System.Object)" -->
        <member name="M:Fwk.Bases.Entity.CanUndo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.Entity.CanRedo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.Entity.Redo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.Entity.Undo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.Entity.GetDataSet">
            <summary>
            Obtiene un System.DataSet .-
            </summary>
            <returns>DataSet</returns>
        </member>
        <member name="M:Fwk.Bases.Entity.GetXml">
            <summary>
            Obtine un xml producto de la serializacion de la clase FacturaBE
            </summary>
            <returns>string con el xml de la serializacion</returns>
        </member>
        <member name="M:Fwk.Bases.Entity.GetObjectFromXml(System.Type,System.String)">
            <summary>
            Metodo estatico que deserializa on objeto y retorna el xmls correspondiente
            </summary>
            <param name="pType">Tipo de objeto a deserializar</param>
            <param name="pXMLData">Xml con el que se crea el objeto</param>
            <returns>object que hereda de Entity</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.Bases.Entity.SetXml(System.String)" -->
        <member name="M:Fwk.Bases.Entity.GetFromXml``1(System.String)">
            <summary>
            Retorna un objeto a partir de la instancia estatica
            </summary>
            <typeparam name="T">Tipo de entidad que se decee retornar este es un type gennerico ya que el metodo esta definido en la clase base</typeparam>
            <param name="pXmlData">Xml del objeto que se decea retornar</param>
            <returns>Entidad  </returns>
        </member>
        <member name="M:Fwk.Bases.Entity.Clone``1">
            <summary>
            Crea una copia espejo de la clase.-
            </summary>
            <typeparam name="TEntity">Tipo de Entity que implementa IEntity </typeparam>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entity.Clone">
            <summary>
            Crea una copia espejo de la clase.-
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entity.System#ICloneable#Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entity.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Fwk.Bases.Entity.ToString(System.Object)">
            <summary>
            Give a string representation of a object, with use of reflection.
            </summary>
            <param name="o">O.</param>
            <returns></returns>
        </member>
        <member name="P:Fwk.Bases.Entity.EntityState">
            <summary>
            Retorna el estado de modificacion actual de la clase 
            </summary>
        </member>
        <member name="M:Fwk.Logging.Event.#ctor">
            <summary>
            Constructor de Event que inicializa todos los atributos como nulos o empty 
            Valor por defecto:  
             Id es autogenerado
            </summary>
        </member>
        <member name="M:Fwk.Logging.Event.#ctor(Fwk.Logging.EventType,System.String,System.String)">
            <summary>
            Constructor de Event.
            Valor por defecto:     
              Id es autogenerado 
              Machine = Environment.MachineName;
              UserLoginName = Environment.UserName;
              LogDate = DateTime.Now;
            </summary>
            <param name="pType">Tipo de evento.</param>
            <param name="pSource">Origen del evento.</param>
            <param name="pMessage">Mensaje descriptivo del evento.</param>
        </member>
        <member name="M:Fwk.Logging.Event.#ctor(Fwk.Logging.EventType,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor de Event.
            Valor por defecto:     
              Id es autogenerado
              LogDate = DateTime.Now;
            </summary>
            <param name="pType">Tipo de evento.</param>
            <param name="pSource">Origen del evento.</param>
            <param name="pMessage">Mensaje descriptivo del evento.</param>
            <param name="pMachine">Equipo donde se origina el evento.</param>
            <param name="pUserName">Usuario que origina el evento.</param>
        </member>
        <member name="M:Fwk.Logging.Event.#ctor(Fwk.Logging.EventType,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Constructor de Event. 
            Valor por defecto:     
              Id es autogenerado
              LogDate = DateTime.Now;
            </summary>
            <param name="pType">Tipo de evento.</param>
            <param name="pSource">Origen del evento.</param>
            <param name="pMessage">Mensaje descriptivo del evento.</param>
            <param name="pMachine">Equipo donde se origina el evento.</param>
            <param name="pUserName">Usuario que origina el evento.</param>
            <param name="appId">Identificador de la aplicación que genera el log</param>
        </member>
        <member name="M:Fwk.Logging.Event.ToString">
            <summary>
            Recopila la información de todos los atributos y 
            genera una cadena de texto con ella.
            </summary>
            <returns>Cadena de texto.</returns>
        </member>
        <member name="P:Fwk.Logging.Event.Message">
            <summary>
            Mensaje descriptivo del evento.
            </summary>
        </member>
        <member name="P:Fwk.Logging.Event.LogDate">
            <summary>
            Fecha y hora en la que se produce el evento.
            </summary>
        </member>
        <member name="P:Fwk.Logging.Event.Machine">
            <summary>
            Equipo donde se origina el evento.
            </summary>
        </member>
        <member name="P:Fwk.Logging.Event.User">
            <summary>
            Usuario que origina el evento.
            </summary>
        </member>
        <member name="P:Fwk.Logging.Event.Id">
            <summary>
            Identificador único del evento.
            </summary>
        </member>
        <member name="P:Fwk.Logging.Event.LogType">
            <summary>
            Tipo de evento.
            </summary>
        </member>
        <member name="P:Fwk.Logging.Event.Source">
            <summary>
            Origen del evento.
            </summary>
        </member>
        <member name="P:Fwk.Logging.Event.AppId">
            <summary>
            Identificador de la aplicacion o sistema qhe genera el log.-
            </summary>
        </member>
        <member name="T:Fwk.Logging.Events">
            <summary>
            Lista de eventos logs
            </summary>
        </member>
        <member name="T:Fwk.Bases.Entities`1">
            <summary>
            Clase base que define el comportamiento general de todas las clases tipo Entidad.-
            </summary>
            <typeparam name="T">Tipo generico que hereda de la clase Entity y que hacepta la clase coleccion en cuestion.-</typeparam>
            <Author>Marcelo .F. Oviedo</Author>
        </member>
        <member name="M:Fwk.Bases.Entities`1.GetXml">
            <summary>
            Obtine un xml producto de la serializacion de la coleccion Entities.-
            </summary>
            <returns>string con el xml de la serializacion</returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.GetDataSet">
            <summary>
            Obtiene un System.DataSet producto de la deserializacion del objeto.-
            </summary>
            <returns>System.DataSet</returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.GetObjectFromXml(System.Type,System.String)">
            <summary>
            Metodo estatico que deserializa un objeto a partir del xml correspondiente 
            al esquema del objeto.-
            </summary>
            <param name="pType">Tipo de objeto a deserializar</param>
            <param name="pXmlData">Xml con el que se crea el objeto</param>
            <returns>object que hereda de Entities</returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.GetFromXml``1(System.String)">
            <summary>
            Retorna un objeto a partir de la instancia estatica
            </summary>
            <typeparam name="TEntities">Tipo de entidad que se decee retornar este es un type gennerico ya que el metodo esta definido en la clase base</typeparam>
            <param name="pXmlData">Xml del objeto que se decea retornar</param>
            <returns>Entidad  </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.Bases.Entities`1.SetXml(System.String)" -->
        <member name="M:Fwk.Bases.Entities`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.Entities`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Fwk.Bases.Entities`1.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:Fwk.Bases.Entities`1.ToList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.ToIList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.Exists(Fwk.Bases.SearchEntityArg[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.Exists(Fwk.Bases.SearchEntityArg)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.Exists(System.Collections.Generic.List{Fwk.Bases.SearchEntityArg})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.Find(Fwk.Bases.SearchEntityArg[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.Find(Fwk.Bases.SearchEntityArg)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.Find(System.Collections.Generic.List{Fwk.Bases.SearchEntityArg})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindIndex(Fwk.Bases.SearchEntityArg[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindIndex(Fwk.Bases.SearchEntityArg)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindIndex(System.Collections.Generic.List{Fwk.Bases.SearchEntityArg})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindIndex(Fwk.Bases.SearchEntityArg[],System.Int32)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindIndex(Fwk.Bases.SearchEntityArg,System.Int32)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindIndex(System.Collections.Generic.List{Fwk.Bases.SearchEntityArg},System.Int32)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindIndex(Fwk.Bases.SearchEntityArg[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindIndex(Fwk.Bases.SearchEntityArg,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindIndex(System.Collections.Generic.List{Fwk.Bases.SearchEntityArg},System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindLast(Fwk.Bases.SearchEntityArg[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindLast(Fwk.Bases.SearchEntityArg)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindLast(System.Collections.Generic.List{Fwk.Bases.SearchEntityArg})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindLastIndex(Fwk.Bases.SearchEntityArg[],System.Int32)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindLastIndex(Fwk.Bases.SearchEntityArg,System.Int32)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindLastIndex(System.Collections.Generic.List{Fwk.Bases.SearchEntityArg},System.Int32)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindLastIndex(Fwk.Bases.SearchEntityArg[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindLastIndex(Fwk.Bases.SearchEntityArg,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindLastIndex(System.Collections.Generic.List{Fwk.Bases.SearchEntityArg},System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="startIndex"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.TrueForAll(Fwk.Bases.SearchEntityArg[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.TrueForAll(Fwk.Bases.SearchEntityArg)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.TrueForAll(System.Collections.Generic.List{Fwk.Bases.SearchEntityArg})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindAll(Fwk.Bases.SearchEntityArg)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindAll(System.Collections.Generic.List{Fwk.Bases.SearchEntityArg})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.FindAll(Fwk.Bases.SearchEntityArg[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.Clone``1">
            <summary>
            Clona el contrato de servicio
            </summary>
            <typeparam name="TEntities">Tipo de Entities que implementa IEntity </typeparam>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.Clone">
            <summary>
            Crea una copia espejo de la clase.-
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.System#ICloneable#Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.Entities`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Fwk.Logging.Events.Get_ByID(System.Guid)">
            <summary>
            Obtiene el primer contacto donde Id EndsWith jid.Bare
            </summary>
            <param name="jid"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Logging.Events.Remove(System.Collections.Generic.List{System.Guid})">
            <summary>
            
            </summary>
            <param name="eventIdList"></param>
        </member>
        <member name="T:Fwk.Mail.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Mail.Message.URL">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Mail.Message.Body">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Blocking.IBlockingMark">
            <summary>
            Interfaz la las marcas de bloqueos.-
            </summary>
            <Auhor>moviedo</Auhor>
        </member>
        <member name="P:Fwk.Blocking.IBlockingMark.AlreadyExists">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Blocking.IBlockingMark.DueDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Blocking.IBlockingMark.Process">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Blocking.IBlockingMark.FwkGuid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Blocking.IBlockingMark.BlockingId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Blocking.IBlockingMark.User">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Blocking.IBlockingMark.TTL">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Blocking.IBlockingMark.TableName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Blocking.IBlockingMark.Attribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Blocking.IBlockingMark.AttValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.Cryptography.SymetricCypherFactory">
            <summary>
            Fabrica de SymetriCypher <![CDATA[SymetriCypher<T>]]>
            </summary>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetricCypherFactory.#cctor">
            <summary>
            Crea el diccionario de ISymetriCypher
            </summary>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetricCypherFactory.Get``1(System.String)">
            <summary>
            Busca un criptographer determinado por medio de su nombre de archivo de encriptacion y tipo de algoritmo simetrico
            </summary>
            <typeparam name="T">Tipo de algoritmo simetrico</typeparam>
            <param name="keyFileName">nombre de archivo de encriptacion </param>
            <returns>Argoritmo <see cref="!:SymetriCypher"/></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetricCypherFactory.Get``1">
            <summary>
            Crea un algoritmo sin nombre de archivo de encriptacion. Este constructor es util cando se trata de un encriptador para crear archivos .key
            </summary>
            <typeparam name="T">Tipo de algoritmo simetrico</typeparam>
            <returns>Argoritmo <see cref="!:SymetriCypher"/></returns>
        </member>
        <member name="T:Fwk.Security.Cryptography.SymetricCypherFactory_EntLibs">
            <summary>
            Fabrica de SymetriCypher_EntLibs <![CDATA[SymetriCypher_EntLibs<T>]]>
            </summary>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetricCypherFactory_EntLibs.#cctor">
            <summary>
            Crea el diccionario de ISymetriCypher
            </summary>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetricCypherFactory_EntLibs.Get``1(System.String)">
            <summary>
            Busca un criptographer determinado por medio de su nombre de archivo de encriptacion y tipo de algoritmo simetrico
            </summary>
            <typeparam name="T">Tipo de algoritmo simetrico</typeparam>
            <param name="keyFileName">nombre de archivo de encriptacion </param>
            <returns>Argoritmo <see cref="!:SymetriCypher_EntLibs"/></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.Security.Cryptography.SymetricCypherFactory_EntLibs.Get``1" -->
        <member name="T:Fwk.Params.Svc.SearchParamsService">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Bases.BusinessService`2">
            <summary>
            Clase base que representa un servicio de negocio abstracto. Es la clase de la que deben heredar todas aquellas clases que sean implementaciones de servicios de negocio.
            </summary>
            <remarks>Las clases que heredan de esta clase abstracta son las encargadas de orquestrar las llamadas a los distintos componentes de negocio y de laintegración con otros sistemas.</remarks>
        </member>
        <member name="M:Fwk.Bases.BusinessService`2.Execute(`0)">
            <summary>
            Ejecuta el servicio de negocio.
            </summary>
            <param name="pServiceRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Bases.Request`1">
             <summary>
             Clase base de los request
             </summary>
             <example>
             <para>El siguiente ejemplo muestra un clase que hereda de la base Request que permite definir el contratode srvicio CrearCliente
             por lo  tanto recime la infotmacion de la entidad Clientes.-</para>
             <code>
             <![CDATA[
              namespace Empresa.BackEnd.ISVC.CrearCliente.req
                   {
               public class CrearClienteRequest : Request <Clientes>
                {
            
                    public CrearClienteRequest()
                   {
                       this.ServiceName = "CrearClienteService";
                   }
                }
            
                #region [BussinesData]
                [XmlRoot("ClientesList"), SerializableAttribute]
                public class ClientesList : Entities
                {
                    #region [Methods]
                    /// <summary>
                    /// Metodo estatico que retorna un objeto ClientesList apartir de un xml.-
                    /// </summary>
                    /// <param name="pXml">String con el xml</param>
                    /// <returns>ClientesList</returns>
                    public static ClientesList GetClientesListFromXml(String pXml)
                    {
                        return (ClientesList)Entity.GetObjectFromXml(typeof(ClientesList), pXml);
                    }
                    #endregion
                }
                [XmlInclude(typeof(Clientes)), Serializable]
                public class Clientes : Entity
                {
                    #region [Private Members]
                    private System.Int32? _IdCliente;
                    private System.Int64? _CUIT;
                    private System.String _RazonSocial;
                    #endregion
                    #region [Properties]
            
                    #region [IdCliente]
                    [XmlElement(ElementName = "IdCliente", DataType = "int")]
                    public int? IdCliente
                    {
                        get { return _IdCliente; }
                        set { _IdCliente = value; }
                    }
                    #endregion
            
                    #region [CUIT]
            
                    public Int64? CUIT
                    {
                        get { return _CUIT; }
                        set { _CUIT = value; }
                    }
                    #endregion
            
                    #region [RazonSocial]
                    [XmlElement(ElementName = "RazonSocial", DataType = "string")]
                    public String RazonSocial
                    {
                        get { return _RazonSocial; }
                        set { _RazonSocial = value; }
                    }
                    #endregion
            
                    #region [NombreFantasia]
                    [XmlElement(ElementName = "NombreFantasia", DataType = "string")]
                    public String NombreFantasia
                    {
                        get { return _NombreFantasia; }
                        set { _NombreFantasia = value; }
                    }
                    #endregion
            
                    #endregion
            
                   #region [Methods]
                    /// <summary>
                    /// Metodo estatico que retorna un objeto Clientes apartir de un xml.-
                    /// </summary>
                    /// <param name="pXml">String con el xml</param>
                    /// <returns>Clientes</returns>
                    public static Clientes GetClientesFromXml(String pXml)
                    {
                        return (Clientes)Entity.GetObjectFromXml(typeof(Clientes), pXml);
                    }
                    #endregion
                }
                #endregion
             }
             ]]>
             </code> 
            </example>
             <typeparam name="T">Cualquier objeto que implemente de IEntity <see cref="T:Fwk.Bases.IEntity"/></typeparam>
             <date>2007-06-23T00:00:00</date> 
             <author>moviedo</author> 
        </member>
        <member name="T:Fwk.Bases.ServiceContractBase`1">
            <summary>
            Clase base con el comportamiento general de los Request y Responses
            </summary>
            <typeparam name="T"> <see cref="P:Fwk.Bases.ServiceContractBase`1.IEntity"/> </typeparam>
        </member>
        <member name="T:Fwk.Bases.IServiceContract">
            <summary>
            Interfaz de las contratos que utilizan los servicio.-
            </summary>
            <date>2007-06-23T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceContract.GetBusinessDataXml">
            <summary>
            Retorna un xml de la clase que implementa IServiceContract.-
            </summary>
            <returns>xml para establecer los valores</returns>
        </member>
        <member name="M:Fwk.Bases.IServiceContract.GetBusinessData_DataSet">
            <summary>
            Retorna un DataSet de la clase que implementa IServiceContract.-
            </summary>
            <returns>DataSet para establecer los valores</returns>
        </member>
        <member name="M:Fwk.Bases.IServiceContract.SetBusinessDataXml(System.String)">
            <summary>
            Inicializa la informacion de negocio del Request o Response con el contenido del xml.-
            </summary>
            <param name="pXMLBusinessData">xml</param>
        </member>
        <member name="M:Fwk.Bases.IServiceContract.SetContextInformationXml(System.String)">
            <summary>
            Inicializa los datos contexto que pertenecen al Request o Responce con el contenido del xml.-
            </summary>
            <param name="pXMLData">xml</param>
        </member>
        <member name="M:Fwk.Bases.IServiceContract.GetContextInformationXml">
            <summary>
            Retorna el xml del contexto que pertenece al Request o Responce .-
            </summary>
            <returns>xml</returns>
        </member>
        <member name="M:Fwk.Bases.IServiceContract.SetXml(System.String)">
            <summary>
            Establece los valores del Request o Responce atravez del xml
            </summary>
            <param name="pXMLService">xml para establecer los valores</param>
        </member>
        <member name="M:Fwk.Bases.IServiceContract.GetXml">
            <summary>
            Retorna el xml del Request o Response
            </summary>
            <returns>String</returns>
        </member>
        <member name="M:Fwk.Bases.IServiceContract.GetDataSet">
            <summary>
            Retorna el DataSet del Request o Response
            </summary>
            <returns>DataSet</returns>
        </member>
        <member name="M:Fwk.Bases.IServiceContract.Clone``1">
            <summary>
            Clona el contrato de servicio
            </summary>
            <typeparam name="TServiceContract">Tipo de contrato que implementa IServiceContract, puede ser un request o un response </typeparam>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.IServiceContract.InitializeServerContextInformation">
            <summary>
            Establece la informacion de inicio de contexto del Request o Responce .-
            </summary>
        </member>
        <member name="M:Fwk.Bases.IServiceContract.InitializeHostContextInformation">
            <summary>
            Establece la informacion de context del Request o Responce .-
            </summary>
        </member>
        <member name="P:Fwk.Bases.IServiceContract.IEntity">
            <summary>
            Interfaz de entidad 
            </summary>
        </member>
        <member name="P:Fwk.Bases.IServiceContract.ServiceName">
            <summary>
            Indica el nombre del servicio. Este nombre debe ser igual a como esta registrado
            </summary>
        </member>
        <member name="P:Fwk.Bases.IServiceContract.ContextInformation">
            <summary>
            Informacion del contexto del Request o Response.-
            </summary>
        </member>
        <member name="P:Fwk.Bases.IServiceContract.Error">
            <summary>
            Contiene una lista de errores que se pudieran producir en la ejecucion del servicio.-
            </summary>
        </member>
        <member name="M:Fwk.Bases.ServiceContractBase`1.SetBusinessDataXml(System.String)">
            <summary>
            Inicializa los datos de negocio que pertenecen al Request/Response con el contenido del xml.-
            </summary>
            <param name="pXMLData">Xml que respeta el esquema de la informacion de negocio del Request o Response.</param>
        </member>
        <member name="M:Fwk.Bases.ServiceContractBase`1.GetBusinessDataXml">
            <summary>
            Retorna el xml de la porcion de negocio que pertenece al Request o Response.-
            </summary>
            <returns>Xml producto de la serializacion de la informacion de negocio.- </returns>
        </member>
        <member name="M:Fwk.Bases.ServiceContractBase`1.GetBusinessData_DataSet">
            <summary>
            Retorna el DataSet de la porcion de negocio que pertenece al Request o Response.-
            </summary>
            <returns>DataSet de la informacion de negocio.- </returns>
        </member>
        <member name="M:Fwk.Bases.ServiceContractBase`1.SetXml(System.String)">
            <summary>
            Rellena el Request/Response con la informacion del xml.-
            </summary>
            <pXMLReques>Xml del Request o Response</pXMLReques>
        </member>
        <member name="M:Fwk.Bases.ServiceContractBase`1.GetXml">
            <summary>
            Obtiene el xml del request o response .-
            </summary>
            <returns>Xml producto de la serializacion</returns>
        </member>
        <member name="M:Fwk.Bases.ServiceContractBase`1.GetDataSet">
            <summary>
            Obtiene el DataSet del request o response .-
            </summary>
            <returns>DataSet producto de la serializacion</returns>
        </member>
        <member name="M:Fwk.Bases.ServiceContractBase`1.SetContextInformationXml(System.String)">
            <summary>
            Inicializa los datos contexto que pertenecen al Request con el contenido del xml.-
            </summary>
            <param name="pXMLData">xml</param>
        </member>
        <member name="M:Fwk.Bases.ServiceContractBase`1.GetContextInformationXml">
            <summary>
            Retorna el xml del Context que pertenece al Request o Response.-
            </summary>
            <returns>xml</returns>
        </member>
        <member name="M:Fwk.Bases.ServiceContractBase`1.InitializeServerContextInformation">
            <summary>
            Establece la informacion de contexto del Request o Response del lado del despachador de servicios.-
            </summary>
        </member>
        <member name="M:Fwk.Bases.ServiceContractBase`1.InitializeHostContextInformation">
            <summary>
            Establece la informacion de contexto del Request o Response del lado del cliente.-
            </summary>
        </member>
        <member name="M:Fwk.Bases.ServiceContractBase`1.Clone``1">
            <summary>
            Clona el contrato de servicio
            </summary>
            <typeparam name="TServiceContract">Tipo de contrato que implementa IServiceContract, puede ser un request o un response </typeparam>
            <returns></returns>
        </member>
        <member name="P:Fwk.Bases.ServiceContractBase`1.Error">
            <summary>
            Contiene una lista de errores que se pudieran producir en la ejecucion del servicio.-
            </summary>
        </member>
        <member name="P:Fwk.Bases.ServiceContractBase`1.ServiceName">
            <summary>
            Indica el nombre del servicio. Este nombre debe ser igual a como esta registrado
            </summary>
        </member>
        <member name="P:Fwk.Bases.ServiceContractBase`1.BusinessData">
            <summary>
            Clase que implementa <see cref="P:Fwk.Bases.ServiceContractBase`1.IEntity"/>
            </summary>
        </member>
        <member name="P:Fwk.Bases.ServiceContractBase`1.ContextInformation">
            <summary>
            Informacion de contexto hacerca del Request del servio.-
            </summary>
        </member>
        <member name="P:Fwk.Bases.ServiceContractBase`1.IEntity">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Bases.IRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Bases.IRequest.CacheSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Bases.IRequest.SecurityProviderName">
            <summary>
            Nmbre del proveedor de seguridad
            </summary>
        </member>
        <member name="M:Fwk.Bases.Request`1.ExecuteService``2(``0)">
            <summary>
            Ejecuta un servicio de negocio. Utiliza el wrapper por defecto
            
            Si se produce el error:
            The parameter is incorrect. (Exception from HRESULT: 0x80070057 (E_INVALIDARG))
            Se debe a un error que lanza una llamada asincrona en modo debug
            </summary>
            <param name="pRequest">Datos de entrada para la  ejecución del servicio.</param>
            <returns>Dataset con datos de respuesta del servicio.</returns>
            <date>2007-08-24T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.Request`1.ExecuteService``2(System.String,``0)">
            <summary>
             Ejecuta un servicio de negocio. Utiliza el wrapper por defecto
            Si se produce el error:
            The parameter is incorrect. (Exception from HRESULT: 0x80070057 (E_INVALIDARG))
            Se debe a un error que lanza una llamada asincrona en modo debug 
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="providerName">Nombre del proveedor de la metadata de servicio</param>
            <param name="pRequest">Request con datos de entrada para la  ejecución del servicio.</param>
            <returns></returns>
        </member>
        <member name="P:Fwk.Bases.Request`1.SecurityProviderName">
            <summary>
            Nombre del proveedor deseguridad
            Si esta en blanco se utilizara el po defecto
            </summary>
        </member>
        <member name="P:Fwk.Bases.Request`1.CacheSettings">
            <summary>
            Configuracion de cache del request
            </summary>
        </member>
        <member name="P:Fwk.Bases.Request`1.Encrypt">
            <summary>
            Determina si el xml del request esta encriptado
            </summary>
        </member>
        <member name="P:Fwk.Params.Isvc.SearchParams.Params.Enabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.Isvc.SearchParams.Params.ParamTypeId">
            <summary>
            Tipo de parametro
            </summary>
        </member>
        <member name="P:Fwk.Params.Isvc.SearchParams.Params.ParentId">
            <summary>
            Param de referencia. Referencia a un parametro padre
            </summary>
        </member>
        <member name="P:Fwk.Params.Isvc.SearchParams.Params.Culture">
            <summary>
            Culture
            </summary>
        </member>
        <member name="T:Fwk.Bases.Response`1">
            <summary>
            Clase bases de los Responses
            </summary>
            <typeparam name="T">Cualquier objeto que implemente de IEntity <see cref="T:Fwk.Bases.IEntity"/></typeparam>
            <date>2007-06-23T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="T:Fwk.Xml.NodeAttribute">
            <summary>
            Manejo de Attribute.
            </summary>
            <Author>moviedo</Author>
            <Date>28-12-2005</Date>
        </member>
        <member name="M:Fwk.Xml.NodeAttribute.AttributeGet(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Retorna el valor de un atributo en un nodo.
            </summary>
            <param name="pnode">El nodo padre.</param>
            <param name="pxPath">La ubicacion dentro del nodo padre.</param>
            <param name="pattributeName">El nombre del atributo.</param>
            <returns>El valor del atributo.</returns>
        </member>
        <member name="M:Fwk.Xml.NodeAttribute.AttributeGet(System.Xml.XmlNode,System.String)">
            <summary>
            Retorna el valor de un atributo en un nodo.
            </summary>
            <param name="pnode">El nodo que posee el atributo.</param>
            <param name="pattributeName">El nombre del atributo.</param>
            <returns>El valor del atributo.</returns>
        </member>
        <member name="M:Fwk.Xml.NodeAttribute.AttributeSet(System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            Setea el valor de un atributo en un nodo.
            </summary>
            <param name="pnode">El nodo padre.</param>
            <param name="pxPath">La ubicacion dentro del nodo padre.</param>
            <param name="pattributeName">El nombre del atributo.</param>
            <param name="pattributeValue">El valor a setear en el atributo.</param>
        </member>
        <member name="M:Fwk.Xml.NodeAttribute.AttributeSet(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Setea el valor de un atributo en un nodo.
            </summary>
            <param name="pnode">El nodo que posee el atributo.</param>
            <param name="pattributeName">El nombre del atributo.</param>
            <param name="pattributeValue">El valor a setear en el atributo.</param>
        </member>
        <member name="M:Fwk.Xml.NodeAttribute.AttributeCreateAndSet(System.Xml.XmlDocument,System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            Crea y setea el valor de un atributo en un nodo.
            </summary>
            <param name="pdoc">Documento del nodo que recibira el atributo.</param>
            <param name="pnode">El nodo que recibira el atributo.</param>
            <param name="pxPath">La ubicacion dentro del nodo padre.</param>
            <param name="pattributeName">El nombre del atributo.</param>
            <param name="pattributeValue">El valor a setear en el atributo.</param>
        </member>
        <member name="M:Fwk.Xml.NodeAttribute.AttributeCreateAndSet(System.Xml.XmlDocument,System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Crea y setea el valor de un atributo en un nodo.
            </summary>
            <param name="pdoc">Documento del nodo que recibira el atributo.</param>
            <param name="pnode">El nodo que recibira el atributo.</param>
            <param name="pattributeName">El nombre del atributo.</param>
            <param name="pattributeValue">El valor a setear en el atributo.</param>
        </member>
        <member name="T:Fwk.Transaction.TransactionScopeHandler">
            <summary>
            Clase para encapsular manejo de transacciones.
            </summary>
            <remarks>
            Encapsula la instanciación de los tipos necesarios para llevar a cabo una transacción, independizando el resto de la aplicación de la tecnología utilizada a su efecto.
            </remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="F:Fwk.Transaction.TransactionScopeHandler._TransactionalBehaviour">
            <summary>
            Comportamiento del ámbito transaccional .
            </summary>
        </member>
        <member name="F:Fwk.Transaction.TransactionScopeHandler._IsolationLevel">
            <summary>
            Nivel de aislamiento.
            </summary>
        </member>
        <member name="F:Fwk.Transaction.TransactionScopeHandler._Timeout">
            <summary>
            Intervalo de tiempo para la  ejecución de la transacción.
            </summary>
        </member>
        <member name="F:Fwk.Transaction.TransactionScopeHandler._TransactionScope">
            <summary>
            ámbito transaccional.
            </summary>
        </member>
        <member name="F:Fwk.Transaction.TransactionScopeHandler._Disposed">
            <summary>
            Flag que indica si la instancia ya fue pasada a disponibilidad o no.
            </summary>
        </member>
        <member name="M:Fwk.Transaction.TransactionScopeHandler.GetTransactionScopeOption">
            <summary>
            Traduce el valor que define el comportamiento a un valor propio de la tecnología con que se implementa el soporte transaccional.
            </summary>
            <remarks></remarks>
            <returns>Opción del ambiente transaccional.</returns>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Transaction.TransactionScopeHandler.GetTransactionOptions">
            <summary>
            Traduce los valors que definen las opciones del ámbito de la transacción a un valor propio de la tecnología con que se implementa el soporte transaccional.
            </summary>
            <remarks></remarks>
            <returns>Opción del ambiente transaccional.</returns>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Transaction.TransactionScopeHandler.#ctor(Fwk.Transaction.TransactionalBehaviour,Fwk.Transaction.IsolationLevel,System.TimeSpan)">
            <summary>
            Constructor que recibe parámetros de inicialización para el ámbito de la transacción.
            </summary>
            <remarks>
            
            </remarks>
            <param name="pTransactionalBehaviour">Comportamiento del ámbito transaccional.</param>
            <param name="pIsolationLevel">Nivel de aislamiento de la transacción.</param>
            <param name="pTimeOut">Intervalo de tiempo que puede durar la transacción.</param>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Transaction.TransactionScopeHandler.ConfigureScope(Fwk.Transaction.TransactionalBehaviour,Fwk.Transaction.IsolationLevel,System.TimeSpan)">
            <summary>
            Configura los parámetros de inicialización para el alcance de la transacción.
            </summary>
            <remarks>
            No inicializa el ámbito transaccional, solamente setea valores de configuración que serán utilizados por <see cref="M:Fwk.Transaction.TransactionScopeHandler.InitScope"/>.
            </remarks>
            <param name="pTransactionalBehaviour">Comportamiento del ámbito transaccional.</param>
            <param name="pIsolationLevel">Nivel de aislamiento de la transacción.</param>
            <param name="pTimeOut">Intervalo de tiempo que puede durar la transacción.</param>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Transaction.TransactionScopeHandler.InitScope">
            <summary>
            Inicializa el ámbito de transacción.
            </summary>
            <remarks>
            Hace uso de la configuración especificada por <see cref="M:Fwk.Transaction.TransactionScopeHandler.ConfigureScope(Fwk.Transaction.TransactionalBehaviour,Fwk.Transaction.IsolationLevel,System.TimeSpan)"/>.
            </remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Transaction.TransactionScopeHandler.Complete">
            <summary>
            Indica que se debe completar la  ejecución de la transacción.
            </summary>
            <remarks>
            Completa la  ejecución de la transacción y pasa a disposición el ámbito creado en <see cref="M:Fwk.Transaction.TransactionScopeHandler.InitScope"/>.
            </remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Transaction.TransactionScopeHandler.Abort">
            <summary>
            Aborta las actualizaciones realizadas dentro del alcance de la transacción.
            </summary>
            <remarks>
            Al abortar la  ejecución, se pasa a disposición el ámbito creado en <b>InitScope</b>.
            </remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Transaction.TransactionScopeHandler.CheckInitialized">
            <summary>
            Verifica si ya se ha inicializado el alcance de la transacción.
            </summary>
            <remarks>
            Si no se inicializó el ámbito, se dispara una excepción. Para inicializar el ámbito transaccional ejecutar <see cref="M:Fwk.Transaction.TransactionScopeHandler.InitScope"/>.
            </remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Transaction.TransactionScopeHandler.CheckDisposed">
            <summary>
            Verifica si ya se ha pasado a disponibilidad el alcance de la transacción.
            </summary>
            <remarks>
            Si la instancia ya fue pasada a disponibilidad, dispara una excepción.
            </remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Transaction.TransactionScopeHandler.DisposeScope">
            <summary>
            Pasa el alcance de transacción a disponibilidad y libera la referencia a este.
            </summary>
            <remarks>
            Al pasar a disponibilidad el ámbito, se aborta implícitamente la transacción. Para aceptar los cambios realizados, se debe ejecutar previamente <see cref="M:Fwk.Transaction.TransactionScopeHandler.Complete"/>.
            </remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Transaction.TransactionScopeHandler.Dispose">
            <summary>
            Implementacion de IDisposable.Dispose.
            </summary>
            <remarks>
            En caso de que haya un ambiente transaccional activo, se lo pasa a disposición abortando la transacción.
            </remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="T:Fwk.Transaction.TransactionalBehaviour">
            <summary>
            Define el comportamiento del ámbito transaccional.
            </summary>
            <remarks>Los valores de esta enumeración se traducen en los valores propios de la tecnología con que se implementa el soporte transaccional.</remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="F:Fwk.Transaction.TransactionalBehaviour.Support">
            <summary>
            Si hay una transacción en curso, se hace uso de dicho ámbito. En caso contrario no transacciona.
            </summary>
        </member>
        <member name="F:Fwk.Transaction.TransactionalBehaviour.Required">
            <summary>
            El servicio transacciona. Si hay un ámbito transaccional ya abierto, utiliza el existente, en caso contrario crea una nueva transaccion.
            </summary>
        </member>
        <member name="F:Fwk.Transaction.TransactionalBehaviour.RequiresNew">
            <summary>
            Siempre se crea una nueva transacción.
            </summary>
        </member>
        <member name="F:Fwk.Transaction.TransactionalBehaviour.Suppres">
            <summary>
            No transacciona, todas las operaciones se hacen sin estar en un ámbito transaccional. 
            </summary>
        </member>
        <member name="T:Fwk.Transaction.IsolationLevel">
            <summary>
            Especifica el nivel de aislamiento de la transacción.
            </summary>
            <remarks>Los valores de esta enumeración se traducen en los valores propios de la tecnología con que se implementa el soporte transaccional.</remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="F:Fwk.Transaction.IsolationLevel.Chaos">
            <summary>
            Los cambios pendientes de transacciones más aisladas no puede ser sobreescritos.
            </summary>
        </member>
        <member name="F:Fwk.Transaction.IsolationLevel.ReadCommitted">
            <summary>
            Los datos volátites no puede ser leidos durante la transacción, pero pueden ser modificados.
            </summary>
        </member>
        <member name="F:Fwk.Transaction.IsolationLevel.ReadUncommitted">
            <summary>
            Los datos volátites pueden ser leidos y modificados durante la transacción.
            </summary>
        </member>
        <member name="F:Fwk.Transaction.IsolationLevel.RepeatableRead">
            <summary>
            Los datos volátiles pueden ser leidos pero no modificados durante la transación. Nuevos datos pueden ser creados.
            </summary>
        </member>
        <member name="F:Fwk.Transaction.IsolationLevel.Serializable">
            <summary>
            Los datos volátiles pueden ser leidos pero no modificados, y no es posible crear nuevos datos durante la transacción.
            </summary>
        </member>
        <member name="F:Fwk.Transaction.IsolationLevel.Snapshot">
            <summary>
            Los datos volátiles pueden ser leidos. Antes de modificarse datos,  se verifica que otra transacción los haya cambiado luego de haber sido leidos. Si los datos se actualizaron, se levanta una excepción.
            </summary>
        </member>
        <member name="T:Fwk.Logging.Targets.DatabaseTarget">
            <summary>
            Destino de tipo base de datos.
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Logging.Targets.DatabaseTarget.#ctor">
            <summary>
            Constructor de DatabaseTarget.
            </summary>
        </member>
        <member name="M:Fwk.Logging.Targets.DatabaseTarget.Write(Fwk.Logging.Event)">
            <summary>
            Implementación de la escritura del log del evento
            en base de datos.
            </summary>
            <param name="pEvent">Evento a loguear.</param>
        </member>
        <member name="M:Fwk.Logging.Targets.DatabaseTarget.SearchByParam(Fwk.Logging.Event)">
             <summary>
             SearchByParam
             </summary>
            <param name="pEvent">Event</param>
             <returns>LogsList</returns>
             <Date>2010-02-26T10:05:27</Date>
             <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.Logging.Targets.DatabaseTarget.SearchByParam(Fwk.Logging.Event,System.DateTime)">
             <summary>
             SearchByParam
             </summary>
            <param name="pEvent">Event</param>
            <param name="pEndDate">pEndDate</param>
             <returns>LogsList</returns>
             <Date>2010-02-26T10:05:27</Date>
             <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.Logging.Targets.DatabaseTarget.Remove(System.Collections.Generic.List{System.String})">
            <summary>
            
            </summary>
            <param name="eventIdList"></param>
        </member>
        <member name="M:Fwk.Logging.Targets.DatabaseTarget.Remove(System.Collections.Generic.List{System.Guid})">
            <summary>
            
            </summary>
            <param name="eventIdList"></param>
        </member>
        <member name="P:Fwk.Logging.Targets.DatabaseTarget.CnnStringName">
            <summary>
            Nombre de la conexión de la base de datos 
            en la cual se escribirá el log del evento.
            Esta conexión debe estar configurada en la 
            Sección 'connectionStrings' del archivo de
            configuración App.Config.
            </summary>
        </member>
        <member name="P:Fwk.Logging.Targets.DatabaseTarget.ConnectionString">
            <summary>
            Cadena de conexión
            </summary>
        </member>
        <member name="T:Fwk.Caching.KwkCacheFactory">
            <summary>
            Calse que mantiene las instancias de las cache manager de la aplicacion.-
            </summary>
        </member>
        <member name="M:Fwk.Caching.KwkCacheFactory.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Caching.KwkCacheFactory.GetFwkCache(System.String)">
            <summary>
            Inicializa la configuracion de cache definida  en App.Config
            Por ejemplo puede ser:
            "CacheListadosClientes"
            Si se pasa un StringEmpty se utilizara la configuracion por defecto :
            "cachingConfiguration: defaultCacheManager="ConfigurationIsolatedManager"
            </summary>
            <param name="pCacheManagerName">Determina el nombre de la configuracion de la cache</param>
            <author>moviedo</author>
            <date>29/11/2008</date>
        </member>
        <member name="P:Fwk.Caching.KwkCacheFactory.CacheCollection">
            <summary>
            Diccionario generico con una coleccion de <see cref="T:Fwk.Caching.FwkCache"/>
            </summary>
        </member>
        <member name="T:Fwk.Mail.FwkMailAgent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Mail.FwkMailAgent.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Fwk.Mail.FwkMailAgent.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Fwk.Mail.FwkMailAgent.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Fwk.Mail.FwkMailAgent.GetFromCache">
            <summary>
            Obtiene los datos de la cache
            </summary>
        </member>
        <member name="M:Fwk.Mail.FwkMailAgent.PutInCache(Fwk.Mail.ObjCache)">
            <summary>
            Inserta lso datos en la cache
            </summary>
            <param name="pItemCache">Data que se agregara a la cache</param>
        </member>
        <member name="M:Fwk.Mail.FwkMailAgent.InitializeMailService">
            <summary>
            Inicializa el MailService
            </summary>
        </member>
        <member name="M:Fwk.Mail.FwkMailAgent.InitializeTimer">
            <summary>
            Inicializa el timer
            </summary>
        </member>
        <member name="M:Fwk.Mail.FwkMailAgent.VerificationNewMail">
            <summary>
            Realiza la verificacion de nuevo email.
            Este metodo lanza el evento NewReceivedMail,
            al que debera suscribirse para recibir la notificación.
            </summary>        
            <returns>True si se llevo a cabo la operacion</returns>
        </member>
        <member name="M:Fwk.Mail.FwkMailAgent.VerificationService(System.String,System.String)">
            <summary>
            Verifica el tipo de servicio que corresponde al usuario.
            </summary>
            <param name="pUser">Mail del usuario</param>
            <param name="pPass">Password de la cuenta de mail</param>
        </member>
        <member name="P:Fwk.Mail.NewReceivedMailEventArgs.InboxUrl">
            <summary>
            Url que permite ingresar al Inbox del usuario
            </summary>
        </member>
        <member name="P:Fwk.Mail.NewReceivedMailEventArgs.NewMailCount">
            <summary>
            Cantidad de nuevos mensajes en el Inbox del usuario
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.MailAgentElementCollection">
            <summary>
            Colección de reglas de logueo.
            </summary>
            <date>2009/08/31</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.MailAgentElementCollection.#ctor">
            <summary>
            Constructor de RuleElementCollection.
            </summary>
        </member>
        <member name="M:Fwk.ConfigSection.MailAgentElementCollection.CreateNewElement">
            <summary>
            Crea un nuevo MailAgentElement en la colección.
            </summary>
            <returns>ConfigurationElement.</returns>
        </member>
        <member name="M:Fwk.ConfigSection.MailAgentElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Obtiene el key de un RuleElement.
            </summary>
            <param name="element">RuleElement del cual se desea conocer su key.</param>
            <returns>RuleElement.</returns>
        </member>
        <member name="M:Fwk.ConfigSection.MailAgentElementCollection.IndexOf(Fwk.ConfigSection.MailAgentElement)">
            <summary>
            Retorna el índice de determinada 
            </summary>
            <param name="pMailAgentElement"> </param>
            <returns>índice de la regla de logueo.</returns>
        </member>
        <member name="P:Fwk.ConfigSection.MailAgentElementCollection.Count">
            <summary>
            Cantidad 
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.MailAgentElementCollection.Item(System.Int32)">
            <summary>
            Retorna MailAgent
            </summary>
            <param name="pIndex">índice .</param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Configuration.Common.ConfigurationRepository">
            <summary>
            Clase contenedora de archivos de configuracion y sus estados. Esta clase permite cachear en memoria las configuraciones que
            son requeridas por las aplicacioenes. 
            </summary>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.Common.ConfigurationRepository.#ctor">
            <summary>
            Constructor por defecto.
            </summary>
        </member>
        <member name="M:Fwk.Configuration.Common.ConfigurationRepository.AddConfigurationFile(Fwk.Configuration.Common.ConfigurationFile)">
            <summary>
            Agrega un configuration file al hashtable.
            </summary>
            <param name="pConfigurationFile">ConfigurationFile configurado.</param>
        </member>
        <member name="M:Fwk.Configuration.Common.ConfigurationRepository.GetConfigurationFile(System.String)">
            <summary>
            Obtiene un ConfigurationFile del hashtable.
            </summary>
            <param name="providerName">Nombre del proveedor.</param>
            <returns><see cref="T:Fwk.Configuration.Common.ConfigurationFile"/></returns>
        </member>
        <member name="M:Fwk.Configuration.Common.ConfigurationRepository.RemoveConfigurationFile(Fwk.Configuration.Common.ConfigurationFile)">
            <summary>
            Agrega un configuration file al hashtable.
            </summary>
            <param name="pConfigurationFile">ConfigurationFile configurado.</param>
        </member>
        <member name="M:Fwk.Configuration.Common.ConfigurationRepository.ExistConfigurationFile(System.String)">
            <summary>
            
            </summary>
            <param name="providerName"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Configuration.Common.ConfigurationFile">
            <summary>
            Reprecenta un archivo de confuguracion y sus estados en memoria.-
            </summary>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.Common.ConfigurationFile.#ctor">
            <summary>
            Constructor por defecto.
            </summary>
        </member>
        <member name="M:Fwk.Configuration.Common.ConfigurationFile.CheckExpiration">
            <summary>
            Chequea si el archivo expiró.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:Fwk.Configuration.Common.ConfigurationFile.CheckFileStatus">
            <summary>
            Devuelve el estado del ConfigurationFile
            </summary>
            <returns>FileStatus</returns>
        </member>
        <member name="P:Fwk.Configuration.Common.ConfigurationFile.Groups">
            <summary>
            Resultado de la invocacíon al webservice.
            </summary>
        </member>
        <member name="P:Fwk.Configuration.Common.ConfigurationFile.TimeStamp">
            <summary>
            Fecha y hora de la obtención de la configuración.
            </summary>
        </member>
        <member name="T:Fwk.Configuration.Common.Groups">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.BaseEntities`1.GetXml">
            <summary>
            Obtine un xml producto de la serializacion de la coleccion Entities.-
            </summary>
            <returns>string con el xml de la serializacion</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.Bases.BaseEntities`1.SetXml(System.String)" -->
        <member name="M:Fwk.Bases.BaseEntities`1.Clone``1">
            <summary>
            Clona el contrato de servicio
            </summary>
            <typeparam name="TEntities">Tipo de Entities que implementa IEntity </typeparam>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.BaseEntities`1.Clone">
            <summary>
            Crea una copia espejo de la clase.-
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.BaseEntities`1.System#ICloneable#Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Configuration.Common.Groups.GetFirstByName(System.String)">
            <summary>
            
            </summary>
            <param name="pName"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Bases.BaseEntity">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.BaseEntity.Clone``1">
            <summary>
            Crea una copia espejo de la clase.-
            </summary>
            <typeparam name="TEntity">Tipo de Entity que implementa IBaseEntity </typeparam>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.BaseEntity.Clone">
            <summary>
            Crea una copia espejo de la clase.-
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.BaseEntity.System#ICloneable#Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.BaseEntity.GetXml">
            <summary>
            Obtine un xml producto de la serializacion de la clase FacturaBE
            </summary>
            <returns>string con el xml de la serializacion</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.Bases.BaseEntity.SetXml(System.String)" -->
        <member name="M:Fwk.Bases.BaseEntity.GetFromXml``1(System.String)">
            <summary>
            Retorna un objeto a partir de la instancia estatica
            </summary>
            <typeparam name="T">Tipo de entidad que se decee retornar este es un type gennerico ya que el metodo esta definido en la clase base</typeparam>
            <param name="pXmlData">Xml del objeto que se decea retornar</param>
            <returns>Entidad  </returns>
        </member>
        <member name="M:Fwk.Bases.BaseEntity.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:Fwk.Bases.BaseEntity.ToString(System.Object)">
            <summary>
            Give a string representation of a object, with use of reflection.
            </summary>
            <param name="o">O.</param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Configuration.Common.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Configuration.Common.Keys.GetFirstByName(System.String)">
            <summary>
            
            </summary>
            <param name="pName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Configuration.Common.Keys.GetCountByName(System.String)">
            <summary>
            
            </summary>
            <param name="pName"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Blocking.BlockingHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Blocking.BlockingHelper.WriteLog(System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            
            </summary>
            <param name="pLog"></param>
            <param name="pType"></param>
        </member>
        <member name="M:Fwk.Blocking.BlockingHelper.CheckAndReleaseBlocking(Fwk.Blocking.BlockingEngineBase,System.Guid)">
            <summary>
            
            </summary>
            <param name="pBlockingEngineBase"></param>
            <param name="pGUID"></param>
        </member>
        <member name="T:Fwk.Blocking.BlockingEngineDAC">
            <summary>
            Clase de acceso a datos para las tablas de blocking.-
            </summary>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineDAC.AddMark(Fwk.Blocking.IBlockingMark,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter},System.String)">
            <summary>
            Agrega una marca de bloqueo para una instancia de
            BlockingMark.
            </summary>
            <param name="pIBlockingMark">pIBlockingMark que contiene a la BlockingMark.
            Se incluye debido a que la tabla BlockingMarks está desnormalizada y
            requiere algunos campos de esta Clase.</param>
            <param name="pBlockingMark">BlockingMark a crear.</param>
            <param name="pCustomParametersToInsert">BlockingMark a crear.</param>
            <param name="pBlockingTable">BlockingMark a crear.</param>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineDAC.RemoveMark(Fwk.Blocking.IBlockingMark)">
            <summary>
            Eliminar marca de blocking.-
            </summary>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineDAC.ClearBlockingMarks(System.String)">
            <summary>
            Limpia todas las marcas para las cuales se cumplió el TTL.
            Este método se ejecuta desde un servicio.
            </summary>
            <param name="pBlockingTable">Nombre de la tabla de marcas de bloqueo.-</param>
            <returns>Retorna la cantidad de marcas borradas.</returns>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineDAC.Exists(Fwk.Blocking.IBlockingMark,System.String)">
            <summary>
            Verifica si existe marcas. Si exite alguna marca retorna el registro.
            </summary>
            <param name="pIBlockingMark">Marca</param>
            <param name="pCustomParametersExist">Parametros personalizados</param>
            <param name="pBlockingTable">Nombre de la tabla de Blocking</param>
            <returns>Registro blocking</returns>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineDAC.ExistsUsers(Fwk.Blocking.IBlockingMark,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter},System.String)">
            <summary>
            Verifica si existe marcas. Si exite alguna marca retorna los usuarios.
            </summary>
            <param name="pIBlockingMark">Marca</param>
            <param name="pCustomParametersExist">Parametros personalizados</param>
            <param name="pBlockingTable">Parametros personalizados</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineDAC.GetByParam(Fwk.Blocking.IBlockingMark,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter})">
            <summary>
            Obtiene una o valraias marcas de bloqueo 
            </summary>
            <param name="pIBlockingMark">Clase que implementa IBlockingMark</param>
            <param name="pCustomParametersGetByParam">Parametros para una IBlockingMark personalizada</param>
            <returns>Tabla con laas marcas obtenidas.-</returns>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineDAC.GetByParam(Fwk.Blocking.IBlockingMark)">
            <summary>Obtiene una o varias marcas de bloqueo</summary>
            <param name="pIBlockingMark">Clase que implementa IBlockingMark</param>
            <returns>Tabla con las marcas obtenidas</returns>
            <create>hebraida</create>
            <date>2010-07-15</date>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineDAC.ExecuteQuery(System.String)">
            <summary>
            Ejecuta una consulta Sql contra el servidor que esté configurado
            para el servicio de bloqueo
            </summary>
            <param name="pQuery">Consulta a realizar</param>
            <returns>DataSet con el resultado de la consulta</returns>
        </member>
        <member name="T:Fwk.HelperFunctions.ImportFunctions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.ServiceProviderSection">
            <summary>
            Sección 'ServiceProviderSection' del archivo de configuración App.Config.
            </summary>
            <date>2010/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.ServiceProviderSection.#ctor">
            <summary>
            Constructor de ConfigProviderSection.
            </summary>
        </member>
        <member name="M:Fwk.ConfigSection.ServiceProviderSection.GetProvider(System.String)">
            <summary>
            Retorna un proveedor determinado
            </summary>
            <param name="name">nombre del proveedor configurado.</param>
            <returns>Provider (Rule).</returns>
        </member>
        <member name="M:Fwk.ConfigSection.ServiceProviderSection.AddNewProvider(System.String,System.String,System.String,Fwk.ConfigSection.ServiceProviderType)">
            <summary>
            Agrega un nuevo proveedor si este no existe
            </summary>
            <param name="name"></param>
            <param name="sourceInfo"></param>
            <param name="applicationId"></param>
            <param name="type"></param>
        </member>
        <member name="M:Fwk.ConfigSection.ServiceProviderSection.AddNewProvider(Fwk.ConfigSection.ServiceProviderElement)">
            <summary>
            Agrega un nuevo proveedor si este no existe
            </summary>
            <param name="newProvider"></param>
        </member>
        <member name="P:Fwk.ConfigSection.ServiceProviderSection.Providers">
            <summary>
            Colección de proveedores de coneccion. 
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.ServiceProviderSection.DefaultProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.ServiceProviderType">
            <summary>
            Enumeracion que defino los tipos de 
            </summary>
        </member>
        <member name="F:Fwk.ConfigSection.ServiceProviderType.xml">
            <summary>
            Lee de un archivo local, puede ser carpeta compartida en la red.-
            </summary>
        </member>
        <member name="F:Fwk.ConfigSection.ServiceProviderType.sqldatabase">
            <summary>
            Utiliza la configuracion distribuida provista por el framework
            </summary>
        </member>
        <member name="T:Fwk.Logging.Targets.WindowsEventTarget">
            <summary>
            Destino de tipo visor de sucesos de Windows.
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Logging.Targets.WindowsEventTarget.#ctor">
            <summary>
            Constructor de WindowsEventTarget.
            </summary>
        </member>
        <member name="M:Fwk.Logging.Targets.WindowsEventTarget.Write(Fwk.Logging.Event)">
            <summary>
            Implementación de la escritura del log del evento
            en el visor de sucesos de Windows.
            </summary>
            <param name="pEvent">Evento a loguear.</param>
        </member>
        <member name="M:Fwk.Logging.Targets.WindowsEventTarget.SearchByParam(Fwk.Logging.Event)">
            <summary>
            No se implementa SearchByParam en un evento proveniente del visor de evento de windows
            </summary>
            <param name="pEvent"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Logging.Targets.WindowsEventTarget.SearchByParam(Fwk.Logging.Event,System.DateTime)">
            <summary>
            No se implementa SearchByParam en un evento proveniente del visor de evento de windows
            </summary>
            <param name="pEvent"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Logging.Targets.WindowsEventTarget.Remove(System.Collections.Generic.List{System.String})">
            <summary>
            No se implementa Remove en un evento proveniente del visor de evento de windows. Utilice para ello la herramienta WindowsLogViewer del framework
            </summary>
            <param name="eventIdList"></param>
        </member>
        <member name="M:Fwk.Logging.Targets.WindowsEventTarget.Remove(System.Collections.Generic.List{System.Guid})">
            <summary>
            No se implementa Remove en un evento proveniente un archivo comun.- Solo de xml y database
            </summary>
            <param name="eventIdList"></param>
        </member>
        <member name="M:Fwk.Logging.Targets.WindowsEventTarget.GetWindowsEventType(Fwk.Logging.EventType)">
            <summary>
            Establece una correspondencia entre Fwk.Logging.EventType 
            y System.Diagnostics.EventLogEntryType.
            </summary>
            <param name="pEventType">Fwk.Logging.EventType.</param>
            <returns>System.Diagnostics.EventLogEntryType.</returns>
        </member>
        <member name="T:Fwk.Exceptions.ServiceError">
            <summary>
            Contiene informacion del error de un servicio.-
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.ServiceError.m_Assembly">
            <summary>
            Assembly.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.ServiceError.m_Namespace">
            <summary>
            Namespace.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.ServiceError.m_Class">
            <summary>
            Class.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.ServiceError.m_Machine">
            <summary>
            Machine.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.ServiceError.m_UserName">
            <summary>
            UserName.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Fwk.Exceptions.ServiceError.StackTrace" -->
        <member name="P:Fwk.Exceptions.ServiceError.Type">
            <summary>
            Retorna el tipo de excepcion 
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.ServiceError.Assembly">
            <summary>
            Assembly donde se produce la excepcion.
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.ServiceError.Namespace">
            <summary>
            Namespace de la clase donde se produce la excepcion.
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.ServiceError.Class">
            <summary>
            Clase donde se produce la excepcion.
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.ServiceError.Machine">
            <summary>
            Nombre del Equipo del cliente donde se produce la excepcion.
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.ServiceError.UserName">
            <summary>
            Nombre del usuario cliente.
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.ServiceError.Severity">
            <summary>
            Determina el grado de severidad del la exepción.-
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.ServiceError.Source">
            <summary>
            Indica el origen del error.-
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.ServiceError.Message">
            <summary>
            Mensaje  descriptivo del error
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.ServiceError.InnerMessageException">
            <summary>
            Trace de las excepciones producidas asta capturar el error
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.ServiceError.ErrorId">
            <summary>
            Identificador del error
            </summary>
        </member>
        <member name="T:Fwk.Exceptions.SerializedExceptionExtension">
            <summary>
            Extension used to inject a serialized exception into the Detail 
            node of a soap fault.
            </summary>
        </member>
        <member name="M:Fwk.Exceptions.SerializedExceptionExtension.ChainStream(System.IO.Stream)">
            <summary>
            Saves the stream in a local buffer and returns a new 
            Memory stream.
            </summary>
            <param name="stream">Stream.</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Exceptions.SerializedExceptionExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Fwk.Exceptions.SerializedExceptionExtension.CopyStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:Fwk.Exceptions.SerializedExceptionExtension.SerializeException(System.Exception)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Exceptions.SerializedExceptionExtension.GetOriginalException(System.Web.Services.Protocols.SoapException)">
            <summary>
            Given a <see cref="T:System.Web.Services.Protocols.SoapException"/> raised using a <see cref="T:Fwk.Exceptions.SerializedExceptionExtension"/>, 
            this class will examine the Detail node and return an instance of 
            <see cref="T:Fwk.Exceptions.SoapOriginalException"/> which contains details about the original exception. 
            If possible, it even contains the original exception as a property .
            </summary>
            <param name="exception">Exception.</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Exceptions.SerializedExceptionExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
            <summary>
            
            </summary>
            <param name="methodInfo"></param>
            <param name="attribute"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Exceptions.SerializedExceptionExtension.GetInitializer(System.Type)">
            <summary>
            
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Exceptions.SerializedExceptionExtension.Initialize(System.Object)">
            <summary>
            
            </summary>
            <param name="initializer"></param>
        </member>
        <member name="T:Fwk.Exceptions.SerializedExceptionExtensionAttribute">
            <summary>
            Attribute applied to a WebMethod to indicate any 
            exceptions should be serialized within the detail 
            node using the <see cref="T:Fwk.Exceptions.SerializedExceptionExtension"/> class.
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.SerializedExceptionExtensionAttribute.ExtensionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.SerializedExceptionExtensionAttribute.Priority">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Mail.Imap.ImapBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MSG_FLAG_SEEN">
            <summary>
            Message flag:seen
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MSG_FLAG_ANSWERED">
            <summary>
            Message flag: answered
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MSG_FLAG_FLAGGED">
            <summary>
            Message flag: flagged
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MSG_FLAG_DRAFT">
            <summary>
            Message flag: draft
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MSG_FLAG_DELETED">
            <summary>
            Message flag: deleted
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MAX_MSG_FLAGS">
            <summary>
            Max Message flags: 10
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_DEFAULT_PORT">
            <summary>
            Imap default port: 143
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_DEFAULT_TIMEOUT">
            <summary>
            Imap default timeout:30 sec
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_COMMAND_PREFIX">
            <summary>
            Imap command Identified prefix: IMAP00
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_UNTAGGED_RESPONSE_PREFIX">
            <summary>
            Imap Untagged response prefix: *
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_OK_RESPONSE">
            <summary>
            Impa ok response : OK
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_NO_RESPONSE">
            <summary>
            Imap no response: NO
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_BAD_RESPONSE">
            <summary>
            Imap bad response :BAD
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_BAD_SERVER_RESPONSE">
            <summary>
            Imap bad server response : "* BAD"
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_OK_SERVER_RESPONSE">
            <summary>
            Imap ok server response: "* OK"
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_CAPABILITY_COMMAND">
            <summary>
            Imap capability command : CAPABILITY
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_CONNECT_COMMAND">
            <summary>
            Imap connect command :CONNECT
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_LOGIN_COMMAND">
            <summary>
            Imap login command : LOGIN userid  password
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_LOGOUT_COMMAND">
            <summary>
            Imap logout command : LOGOUT
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_SELECT_COMMAND">
            <summary>
            Imap select command : SELECT INBOX
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_EXAMINE_COMMAND">
            <summary>
            Imap examine command : EXAMINE INBOX
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_APPEND_COMMAND">
            <summary>
            Imap append command : APPEND
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_QUOTA_RESPONSE">
            <summary>
            Imap quota response : QUOTA
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_GETQUOTA_COMMAND">
            <summary>
            Imap get quota command : GETQUOTAROOT 
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_APPEND_RESPONSE_START">
            <summary>
            Imap append response start : [
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_APPEND_RESPONSE_END">
            <summary>
            Imap append response end : ]
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_GO_AHEAD_RESPONSE">
            <summary>
            Imap go ahead response: +
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_SEARCH_COMMAND">
            <summary>
            Imap uid search command : UID SEARCH
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_SEARCH_RESPONSE">
            <summary>
            Imap search command : SEARCH
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_UIDFETCH_COMMAND">
            <summary>
            Imap uid fetch command : UID FETCH
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_FETCH_COMMAND">
            <summary>
            Imap fetch command : FETCH
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_BODYSTRUCTURE_COMMAND">
            <summary>
            Imap BodyStructure command
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_UIDSTORE_COMMAND">
            <summary>
            Imap uid store command
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_EXPUNGE_COMMAND">
            <summary>
            Imap expunge command
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_NOOP_COMMAND">
            <summary>
            Imap noop command : NOOP
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_COMMAND_EOL">
            <summary>
            Imap command terminator: \r\n
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_NIL">
            <summary>
            Imap message nil size : NIL
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_HEADER_EOL">
            <summary>
            Imap message header terminator : \r\n
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_SIZE_START">
            <summary>
            Imap message size start : '{'
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_SIZE_END">
            <summary>
            Imap message size end : '}'
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_CONTENT_TYPE">
            <summary>
            Imap message content type : "Content-Type: "
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_RFC822">
            <summary>
            Imap mesage content type: rfc822
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_ID">
            <summary>
            Imap message id
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_MULTIPART">
            <summary>
            Imap mesage content type: multipart
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_CONTENT_ENCODING">
            <summary>
            Imap content encoding : "Content-Transfer-Encoding: "
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_CONTENT_DESC">
            <summary>
            Imap content description : "Content-Description: "
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_CONTENT_DISP">
            <summary>
            Imap content disposition : "Content-Disposition: "
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_CONTENT_SIZE">
            <summary>
            Imap content size
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_CONTENT_LINES">
            <summary>
            Imap content lines
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MESSAGE_BASE64_ENCODING">
            <summary>
            Imap message base64 encoding : BASE64
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_MSG_DEFAULT_PART">
            <summary>
            Imap message default part : 1
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_HEADER_SENDER_TAG">
            <summary>
            Imap header Sender tag
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_HEADER_FROM_TAG">
            <summary>
            Imap header from tag
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_HEADER_IN_REPLY_TO_TAG">
            <summary>
            Imap header in-reply-to tag
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_HEADER_REPLY_TO_TAG">
            <summary>
            IKmap header reply-to tag
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_HEADER_TO_TAG">
            <summary>
            Imap header to tag
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_HEADER_CC_TAG">
            <summary>
            Imap header cc tag
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_HEADER_BCC_TAG">
            <summary>
            Imap header bcc tag
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_HEADER_SUBJECT_TAG">
            <summary>
            Imap header subject tag
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_HEADER_DATE_TAG">
            <summary>
            Imap header date tag
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_PLAIN_TEXT">
            <summary>
            Imap body type
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_AUDIO_WAV">
            <summary>
            Imap audio wave:  audio/wav
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_VIDEO_MPEG4">
            <summary>
            Imap video mpeg4  : video/mpeg4
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.IMAP_COMMAND_VAL">
            <summary>
            Imap Command Identifier value:Initial 0
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.m_sHost">
            <summary>
            Imap host
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.m_nPort">
            <summary>
            Imap port : default IMAP_DEFAULT_PORT : 143
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.m_sUserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.m_sPassword">
            <summary>
            User Password
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.m_bIsConnected">
            <summary>
            Is Imap server connected
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.m_oImapServ">
            <summary>
            Tcpclient object
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.m_oNetStrm">
            <summary>
            Network stream object
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.m_oRdStrm">
            <summary>
            StreamReader object
            </summary>
        </member>
        <member name="M:Fwk.Mail.Imap.ImapBase.Connect(System.String,System.UInt16,System.Boolean)">
            <summary>
            Connect to specified host and port
            </summary>
            <param name="sHost">Imap host</param>
            <param name="nPort">Imap port</param>
            <returns>ImapResponseEnum type</returns>
        </member>
        <member name="M:Fwk.Mail.Imap.ImapBase.Disconnect">
            <summary>
            Disconnect connection with Imap server
            </summary>
        </member>
        <member name="M:Fwk.Mail.Imap.ImapBase.SendAndReceive(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            Send command to server and retrieve response
            </summary>
            <param name="command">Command to send Imap Server</param>
            <param name="sResultArray">Imap Server response</param>
            <returns>ImapResponseEnum type</returns>
        </member>
        <member name="M:Fwk.Mail.Imap.ImapBase.Receive(System.Collections.ArrayList@)">
            <summary>
             retrieve response
            </summary>
            <param name="command">Command to send Imap Server</param>
            <param name="sResultArray">Imap Server response</param>
            <returns>ImapResponseEnum type</returns>
        </member>
        <member name="M:Fwk.Mail.Imap.ImapBase.SendAndReceiveByNumLines(System.String,System.Collections.ArrayList@,System.Int32)">
            <summary>
            Send command to server and retrieve response
            </summary>
            <param name="command">Command to send Imap Server</param>
            <param name="sResultArray">Imap Server response</param>
            <returns>ImapResponseEnum type</returns>
        </member>
        <member name="M:Fwk.Mail.Imap.ImapBase.ReceiveBuffer(System.String@,System.Int32)">
            <summary>
            Read the Server Response by specified size
            </summary>
            <param name="sBuffer"></param>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Mail.Imap.ImapBase.Capability">
            <summary>
            IMAP Capability command
            </summary>
        </member>
        <member name="P:Fwk.Mail.Imap.ImapBase.IMAP_COMMAND_IDENTIFIER">
            <summary>
            Imap command identified which is combination of
            Imap identifier prefix and val
            eg. Prefix:IMAP00, Val: 1
            Imap command Identified= IMAP001
            </summary>
        </member>
        <member name="P:Fwk.Mail.Imap.ImapBase.IMAP_SERVER_RESPONSE_OK">
            <summary>
            Imap Server OK response which is combination of 
            Imap Identifier and Imap OK response.
            eg. IMAP001 OK
            </summary>
        </member>
        <member name="P:Fwk.Mail.Imap.ImapBase.IMAP_SERVER_RESPONSE_NO">
            <summary>
            Imap Server NO response which is combination of 
            Imap Identifier and Imap NO response.
            eg. IMAP001 NO
            </summary>
        </member>
        <member name="P:Fwk.Mail.Imap.ImapBase.IMAP_SERVER_RESPONSE_BAD">
            <summary>
            Imap Server BAD response which is combination of
            Imap Identifier and Imap BAD response.
            eg. IMAP001 BAD
            </summary>
        </member>
        <member name="T:Fwk.Mail.Imap.ImapBase.ImapResponseEnum">
            <summary>
            Imap server response result
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.ImapResponseEnum.IMAP_SUCCESS_RESPONSE">
            <summary>
            Imap Server responded "OK"
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.ImapResponseEnum.IMAP_FAILURE_RESPONSE">
            <summary>
            Imap Server responded "NO" or "BAD"
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapBase.ImapResponseEnum.IMAP_IGNORE_RESPONSE">
            <summary>
            Imap Server responded "*"
            </summary>
        </member>
        <member name="T:Fwk.Blocking.BlockingEngineBase">
            <summary>
            Clase base de implementacien standar de blocking
            </summary>
            <Auhor>moviedo</Auhor>
        </member>
        <member name="T:Fwk.Blocking.IBlockingEngine">
            <summary>
            IBlockingEngine interfaz de motor de bnloqueo
            </summary>
            <Auhor>moviedo</Auhor>
        </member>
        <member name="M:Fwk.Blocking.IBlockingEngine.Create(Fwk.Blocking.IBlockingMark)">
            <summary>
            
            </summary>
            <param name="pIBlockingMark"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Blocking.IBlockingEngine.GetByParam(Fwk.Blocking.IBlockingMark)">
            <summary>
            
            </summary>
            <param name="pBlockingMark"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Blocking.IBlockingEngine.GetByParamCustom(Fwk.Blocking.IBlockingMark)">
            <summary>
            
            </summary>
            <param name="pBlockingMark"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Blocking.IBlockingEngine.Remove(System.Guid)">
            <summary>
            
            </summary>
            <param name="pGuid"></param>
        </member>
        <member name="M:Fwk.Blocking.IBlockingEngine.Remove(System.Int32)">
            <summary>
            
            </summary>
            <param name="pBlockingId"></param>
        </member>
        <member name="M:Fwk.Blocking.IBlockingEngine.ExistsUser(Fwk.Blocking.IBlockingMark)">
            <summary>
            
            </summary>
            <param name="pBlockingMark"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Blocking.IBlockingEngine.Exists(System.Guid,System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="pGUID"></param>
            <param name="pBlockingId"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineBase.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="pTableNamme">Nombre de la tabla en Bloqcking</param>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineBase.Create(Fwk.Blocking.IBlockingMark)">
            <summary>
            Realiza un bloqueo creando una
            BlockingMarks. Previamente verifica que no haya sido bloqueadas
            anteriormente ninguna de las instancias.
            </summary>
            <param name="IBlockingMark"><see cref="T:Fwk.Blocking.IBlockingMark"/></param>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineBase.Remove(System.Int32)">
            <summary>
            Libera un contexto de bloqueo, borrando todas las marcas
            que posean el mismo id de Contexto.
            </summary>
            <param name="pBlockingId">Id de bloqueo a liberar</param>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineBase.Remove(System.Guid)">
            <summary>
            Libera un contexto de bloqueo, borrando todas las marcas
            que posean el mismo id de Contexto.
            Adicionalmente hace un backup de los registros bloqueantes
            que se borran, si se desea.
            </summary>
            <param name="pGuid">Guid de bloqueo a liberar</param>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineBase.ClearBlockingMarks">
            <summary>
            Limpia todas las marcas para las cuales se cumplió el TTL.
            Este método se ejecuta desde un servicio.
            </summary>
            <param name="pBackupMarks">Le dice al método si hacer Backup
            de las marcas que se borran.</param>
            <returns>Retorna la cantidad de marcas borradas.</returns>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineBase.GetRetryCount">
            <summary>
            Retorna el RetryCount.
            </summary>
            <returns>RetryCount</returns>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineBase.Exists(System.Guid,System.Nullable{System.Int32})">
            <summary>
            Verifica si existe marcas. Si exite alguna marca retorna los usuarios.
            </summary>
            <param name="pBlockingMark"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Blocking.BlockingEngineBase.ExistsUser(Fwk.Blocking.IBlockingMark)">
            <summary>
            Verifica si existe marcas. Si exite alguna marca retorna los usuarios.
            </summary>
            <param name="pBlockingMark"></param>
            <returns></returns>
        </member>
        <member name="P:Fwk.Blocking.BlockingEngineBase.PerformBlocking">
            <summary>
            Retorna si aplica blocking o no
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.ServiceProviderCollection">
            <summary>
            Colección ServiceProviderElement 
            </summary>
            <date>2010/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.ServiceProviderCollection.#ctor">
            <summary>
            Constructor de ConfigElementCollection.
            </summary>
        </member>
        <member name="M:Fwk.ConfigSection.ServiceProviderCollection.CreateNewElement">
            <summary>
            Crea un nuevo ServiceProviderElement en la colección.
            </summary>
            <returns>ConfigurationElement.</returns>
        </member>
        <member name="M:Fwk.ConfigSection.ServiceProviderCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Obtiene el key de un ServiceProviderElement.
            </summary>
            <param name="element">ConfigProviderElement del cual se desea conocer su key.</param>
            <returns>ConfigProviderElement.</returns>
        </member>
        <member name="M:Fwk.ConfigSection.ServiceProviderCollection.Add(System.Configuration.ConfigurationElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Fwk.ConfigSection.ServiceProviderCollection.IndexOf(Fwk.ConfigSection.ServiceProviderElement)">
            <summary>
            Retorna el índice del proveedor de metadata.
            </summary>
            <param name="configProviderElement">ConfigProviderElement que se desea conocer su </param>
            <returns>índice</returns>
        </member>
        <member name="P:Fwk.ConfigSection.ServiceProviderCollection.Count">
            <summary>
            Cantidad de proveedores de configuracion .
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.ServiceProviderCollection.Item(System.Int32)">
            <summary>
            Retorna un proveedor de netadata según si índice.
            </summary>
            <param name="index">índice del proveedor de configuracion que se desea obtener.</param>
            <returns>proveedor de configuracion</returns>
        </member>
        <member name="T:Fwk.Params.Svc.CreateParametroService">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Bases.SingletonFactoryArray`1">
            <summary>
            Concesva un diccionario estatico de elementos T y los instancia una sola vez
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Fwk.Bases.SingletonFactoryArray`1.Get(System.String)">
            <summary>
            Retorna un objeto tipo T.-
            Si esta en el diccionario se retorna esta instancia si no se crea una .- 
            Quien crea la instancia y pasa los parametros es la clase SingletonFactory.-
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.SingletonFactoryArray`1.Get(System.String,System.Object[])">
            <summary>
            Retorna un objeto tipo T.-
            Si esta en el diccionario se retorna esta instancia si no se crea una .- 
            Quien crea la instancia y pasa los parametros es la clase SingletonFactory.-
            </summary>
            <param name="name"></param>
            <param name="constructorParams">Parametros del contructor la clase T</param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Bases.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Fwk.Bases.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Fwk.Bases.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Fwk.Bases.Properties.Resources.ServiceManagement_SourceInfo_Error">
            <summary>
              Looks up a localized string similar to Error al inicializar la metadata de los servicios.Verifique: en el archivo de de configuracion (.config) la seccion [FwkServiceMetadata] el\r\n atributo [sourceinfo],  que la ruta y archivo de metadata sea correcta.-.
            </summary>
        </member>
        <member name="P:Fwk.Bases.Properties.Resources.Wrapper_ServiceMetadataProviderName_NotExist">
             <summary>
               Looks up a localized string similar to Error en la configuración del wrapper  {0}, esta definiendo un proveedor de metadatos de servicios 
            que no se puede encontrar,  verifique el atributo serviceMetadataProviderName sea igual a un nombre de proveedor 
            correcto y existente..
             </summary>
        </member>
        <member name="T:Fwk.HelperFunctions.TypeFunctions">
            <summary>
            Funciones de Tipos.
            </summary>
            <Date>13-05-2009</Date>
            <Author>Marcelo F. Oviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.IsInteger(System.String)">
            <summary> 
            Valida si el valor pasado por parametro es un entero.-
            </summary>
            <param name="pValue">Texto a evaluar.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.IsNumeric(System.String)">
            <summary>
            Valida si el valor pasado por parametro es un numero.-
            </summary>
            <param name="pValue">Texto a evaluar.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.IsAlpha(System.String)">
            <summary>
            Se valida si la entrada de datos contiene solo Letras
            </summary>
            <param name="pInput"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.IsAlphaNumeric(System.String)">
            <summary>
            Se valida si la entrada de datos contiene solo Letras y números
            </summary>
            <param name="pInput"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.WrongCharacters(System.String)">
            <summary>
            Verifica si existen caracteres no validos.
            en una cadena de texto.
            </summary>
            <param name="pValue">Texto a evaluar.</param>
            <returns>True: si existen caracteres invalidos.</returns>
            <Date>12-07-2009</Date>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.PixelToMillimeter(System.Windows.Forms.Control,System.Drawing.Size)">
            <summary>
            
            </summary>
            <param name="control"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.PixelToMillimeter(System.Single,System.Single,System.Drawing.Size)">
            <summary>
            
            </summary>
            <param name="dpiX"></param>
            <param name="size"></param>
            <param name="dpiY"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.RutDVValidate(System.String)">
            <summary>
            Valida si un Rut es valido.
            </summary>
            <param name="pRut">Rut a validar.</param>
            <returns>Resultado de la validacion.</returns>
            <Date>05-07-2009</Date>
            <Author>Marcelo F. Oviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.CleanStr(System.String)">
            <summary>
            Limpia el texto que recibe de caracteres adicionales
            ('.','-',' ').
            </summary>
            <param name="pStrSrc">Texto a limpiar.</param>
            <returns>El texto limpio.</returns>
            <Date>05-07-2009</Date>
            <Author>Marcelo F. Oviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.RUTValidate(System.String,System.String)">
            <summary>
            Valida si el Rut es valido.
            </summary>
            <param name="pRut">Rut a validar.</param>
            <param name="pDV">Digito Verificador.</param>
            <returns>Resultado de la validacion.</returns>
            <Date>05-07-2009</Date>
            <Author>Marcelo F. Oviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.M11Validate(System.String,System.String)">
            <summary>
            Validacion del Modulo 11.
            </summary>
            <param name="pRut">Rut.</param>
            <param name="pDV">Digito Verificador.</param>
            <returns>Resultado de la validacion.</returns>
            <Date>05-07-2009</Date>
            <Author>Marcelo F. Oviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.RUTFormat(System.String)">
            <summary>
            Formatea el string que se le entrega con formato de RUT. 
            </summary>
            <param name="pStr">El texto a formatear.</param>
            <returns>El texto formateado.</returns>
            <Date>05-07-2009</Date>
            <Author>Marcelo F. Oviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.RutDVCreate(System.String)">
            <summary>
            Metodo para Crear el Digito Verificador.-
            </summary>
            <param name="pRut"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.ConvertSQLToDbSql(System.String)">
            <summary>
            Convierte un tipo de SQLServer a un System.SqlDbType
            </summary>
            <param name="Value">Tipo de SQLServer </param>
            <returns>SqlDbType</returns>
            <author>Marcelo F. Oviedo</author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.ConvertSqlToCSahrp(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.ConvertBytesToBase64String(System.Byte[])">
            <summary>
            Convierte una  array of 8-bit a su equivalente  System.String,
             codificado en base 64 digitos
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.ConvertByteArrayToImage(System.Byte[])">
            <summary>
            Convierte un Byte[] a un System.Drawing.Image -
            </summary>
            <param name="byteArray">Byte[] que tiene formato de imagen</param>
            <returns>Image</returns>
            <author>Marcelo F. Oviedo</author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.ConvertImageToByteArray(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Convierte un System.Drawing.Image a Byte[]
            </summary>
            <param name="imageToConvert">Imagen</param>
            <param name="formatOfImage">Formato ej:System.Drawing.Imaging.ImageFormat.Gif</param>
            <returns>byte[]</returns>
            <author>Marcelo F. Oviedo</author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.ConvertStringToByteArray(System.String)">
            <summary>
            Utiliza ASCIIEncoding
            </summary>
            <param name="stringText"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.ConvertBytesToTextString(System.Byte[])">
            <summary>
             Utiliza ASCIIEncoding
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.ConvertToBase64String(System.IO.Stream)">
            <summary>
            Convierte una secuencia de bytes (cualquier clase que herede de stream) a un string .-
            </summary>
            <param name="pStream">cualquier clase que herede de stream</param>
            <returns>string del binario</returns>
            <author>Marcelo F. Oviedo</author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.ConvertToBase64String(System.String)">
            <summary>
            Obtiene el string que reprecenta el Base64 del archivo.-
            </summary>
            <param name="pFullFileName">Nombre del archivo del cual se quiere obtener el Base64</param>
            <returns>string del binario en Base64</returns>
            <author>Marcelo F. Oviedo</author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.ConvertFromBase64String(System.String)">
            <summary>
            Convierte un Base64 string en un array de bytes. 
            </summary>
            <param name="pBase64String">String con el Base64 del binario</param>
            <returns>Byte[]</returns>
            <author>Marcelo F. Oviedo</author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.ConvertFromBase64StringToFile(System.String,System.String)">
            <summary>
            Convierte un Base64 string a un archivo binario.-
            </summary>
            <param name="pBase64String">String con el Base64 del binario</param>
            <param name="pFullFileName">Nombre del archivo</param>
            <returns>Byte array que reprecenta el archivo</returns>
            <author>Marcelo F. Oviedo</author>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.SetEntitiesFromIenumerable``2(``0,System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Toma los elementos de pEntitiCollection y los agrega a la coleccion TEntities
            </summary>
            <typeparam name="TEntities">Tipo de la coleccion de entidades</typeparam>
            <typeparam name="TEntity">Tipo TEntity</typeparam>
            <param name="pEntitiCollection">Coleccion de entidades</param>
            <param name="pIenumerableList">Clase de lin q con los elementos TEntity</param>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.TypeInheritFrom(System.Type,System.Type)">
            <summary>
            Funcion que busca recurcivamente si Tsource hereda de Tbase
            </summary>
            <param name="Tsource">Tipo origen </param>
            <param name="Tbase">Tipo base del cual puede heredar el tipo origen</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.TypeInheritFrom``1(System.Object,System.Type)">
            <summary>
            Funcion que busca recurcivamente si Tsource hereda de Tbase
            </summary>
            <param name="pObject">Instancia del tipo origen </param>
            <param name="Tbase">Tipo base del cual puede heredar el tipo origen</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.TypeFunctions.ToString(System.Object)">
            <summary>
            Give a string representation of a object, with use of reflection.
            </summary>
            <param name="o">O.</param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Exceptions.SoapOriginalException">
            <summary>
            Used to represent the original exception that was the cause 
            of a <see cref="T:System.Web.Services.Protocols.SoapException"/>.  If the original exception 
            was successfully serialized, it can be directly accessed 
            via the InnerException property.
            </summary>
        </member>
        <member name="M:Fwk.Exceptions.SoapOriginalException.#ctor(System.Web.Services.Protocols.SoapException)">
            <summary>
            Creates a new <see cref="T:Fwk.Exceptions.SoapOriginalException"/> instance.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="P:Fwk.Exceptions.SoapOriginalException.Type">
            <summary>
            Gets the type.
            </summary>
            <value></value>
        </member>
        <member name="P:Fwk.Exceptions.SoapOriginalException.StackTrace">
            <summary>
            Gets the stack trace.
            </summary>
            <value></value>
        </member>
        <member name="T:Fwk.ServiceManagement.ServiceMetadata">
            <summary>
            Realiza operaciones CRUD y busquedas de la metadata de servicios
            </summary>
        </member>
        <member name="F:Fwk.ServiceManagement.ServiceMetadata._Repository">
            <summary>
            Diccionario de providers de metadatas de servicios. Continen lista de <see cref="T:Fwk.Bases.ServiceConfigurationCollection"/> 
            </summary>
        </member>
        <member name="M:Fwk.ServiceManagement.ServiceMetadata.#cctor">
            <summary>
            Constructor estatico . Inicializa la sección FwkServiceMetadata
            </summary>
        </member>
        <member name="M:Fwk.ServiceManagement.ServiceMetadata.GetServiceConfiguration(System.String,System.String)">
            <summary>
            Obtine un servicio del repositorio
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <param name="serviceName">Nombre del servicio</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.ServiceManagement.ServiceMetadata.GetAllServices(Fwk.ConfigSection.ServiceProviderElement)">
            <summary>
            Obtiene todos los servicios del proveedor de metadata
            </summary>
            <param name="provider">Proveedor de la metadata</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.ServiceManagement.ServiceMetadata.ReloadAllServices(Fwk.ConfigSection.ServiceProviderElement)">
            <summary>
            Este metodo elimina quita la lista de servicios del provider en el repositorio deservicios y 
            los vuelve a cargar desde su origen
            </summary>
            <param name="provider">Proveedor de metadata</param>
        </member>
        <member name="M:Fwk.ServiceManagement.ServiceMetadata.GetAllServices(System.String)">
            <summary>
            Obtiene una lista de metadata de servicios 
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.ServiceManagement.ServiceMetadata.SetServiceConfiguration(System.String,System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Actualiza la metadata de un servicio <see cref="T:Fwk.Bases.ServiceConfiguration"/>
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <param name="serviceName">Nombre del servicio</param>
            <param name="pServiceConfiguration"><see cref="T:Fwk.Bases.ServiceConfiguration"/></param>
        </member>
        <member name="M:Fwk.ServiceManagement.ServiceMetadata.AddServiceConfiguration(System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Crea un servicio en el origen de datos indicado por el proveedor
            El aaplication Id que se utiliza es el del  nuevo servicio. Si el provedor estra configurado para usar uno determinado este se ignora
            de esta manera un proveedor puede insertar servicios para diferentes aplicaciones
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <param name="pServiceConfiguration"><see cref="T:Fwk.Bases.ServiceConfiguration"/></param>
        </member>
        <member name="M:Fwk.ServiceManagement.ServiceMetadata.DeleteServiceConfiguration(System.String,System.String)">
            <summary>
            Elimina un seriovicio del repositorio y del origen de metadata de servicios.-
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <param name="serviceName">Nombre del servicio</param>
        </member>
        <member name="M:Fwk.ServiceManagement.ServiceMetadata.GetAllApplicationsId(System.String)">
            <summary>
            Obtiene una lista de todas las aplicaciones configuradas en el origen de datos configurado por el 
            proveedor
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.ServiceManagement.ServiceMetadata.GetProvider(System.String)">
            <summary>
            Metodo privado que obtioene un proveedor . Si [providerName] es nulo se retornara el proveedor por defecto.-
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.ServiceManagement.ServiceMetadata.GetTechnicalException(System.String,System.String,System.Exception)">
            <summary>
            Completa el error del que va dentro del Request con informacion de :
            Assembly, Class, Namespace, UserName,  InnerException, etc
            </summary>
            <param name="pMessage">Mensaje personalizado</param>
            <param name="pErrorId">Id del Error</param>
            <param name="pException">Alguna Exception que se quiera incluir</param>
            <date>2007-08-07T00:00:00</date>
            <author>moviedo</author> 
        </member>
        <member name="M:Fwk.ServiceManagement.ServiceMetadata.CheckProvider(System.String,Fwk.ConfigSection.ServiceProviderElement)">
            <summary>
            Determina si el proveedor solicitado existe o no. para lanzar una exepcion en caso de que no exista.
            </summary>
            <param name="providerName"></param>
            <param name="provider"></param>
        </member>
        <member name="P:Fwk.ServiceManagement.ServiceMetadata.ProviderSection">
            <summary>
            Seccion de metadata .-
            </summary>
        </member>
        <member name="T:Fwk.Security.Cryptography.SymetriCypher`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Fwk.Security.Cryptography.ISymetriCypher">
            <summary>
            Interfaz de encriptador simetrico del fwk .-
            </summary>
        </member>
        <member name="M:Fwk.Security.Cryptography.ISymetriCypher.CreateKeyFile">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.ISymetriCypher.CreateKeyFile(System.String)">
            <summary>
            
            </summary>
            <param name="keyFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.ISymetriCypher.Dencrypt(System.String)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.ISymetriCypher.Encrypt(System.String)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher`1.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="k"></param>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher`1.GeneratetNewK">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher`1.Encrypt(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher`1.Encrypt(System.String)">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher`1.Encrypt(System.String,System.Byte[],System.Byte[])">
            <summary>
            
            </summary>
            <param name="plainText"></param>
            <param name="rgbKey"></param>
            <param name="rgbIV"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher`1.Dencrypt(System.String)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher`1.Dencrypt(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher`1.Dencrypt(System.String,System.Byte[],System.Byte[])">
            <summary>
            
            </summary>
            <param name="cipherText"></param>
            <param name="rgbKey"></param>
            <param name="rgbIV"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher`1.CreateKeyFile">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher`1.CreateKeyFile(System.String)">
            <summary>
            Geenra un archivo binario con la clave de encriptacion 
            </summary>
            <param name="keyFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.FwkSymetricAlg.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="k"></param>
        </member>
        <member name="M:Fwk.Security.Cryptography.FwkSymetricAlg.GetNewK">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fwk.Xml.Element">
            <summary>
            Manejo de XmlElement.
            </summary>
            <Author>moviedo</Author>
            <Date>28-12-2005</Date>
        </member>
        <member name="M:Fwk.Xml.Element.ElementCreateAndAdd(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            Crea un XmlElement.
            </summary>
            <param name="pdoc">XmlDocument que contendra el XmlElement.</param>
            <param name="pname">Nombre del XmlElement.</param>
            <param name="pvalue">Valor del XmlElement.</param>
            <returns>XmlElement</returns>
        </member>
        <member name="M:Fwk.Xml.Element.ElementCreateAndAdd(System.Xml.XmlDocument,System.String)">
            <summary>
            Crea un XmlElement.
            </summary>
            <param name="pdoc">XmlDocument que contendra el XmlElement.</param>
            <param name="pname">Nombre del XmlElement.</param>
            <returns>XmlElement</returns>
        </member>
        <member name="T:Fwk.Logging.Targets.TargetType">
            <summary>
            Tipo de destino.
            </summary>
        </member>
        <member name="F:Fwk.Logging.Targets.TargetType.File">
            <summary>
            Representa un archivo .log.
            </summary>
        </member>
        <member name="F:Fwk.Logging.Targets.TargetType.Xml">
            <summary>
            Representa un archivo .Xml.
            </summary>
        </member>
        <member name="F:Fwk.Logging.Targets.TargetType.Database">
            <summary>
            Representa una base de datos.
            </summary>
        </member>
        <member name="F:Fwk.Logging.Targets.TargetType.WindowsEvent">
            <summary>
            Representa un evento de Windows.
            </summary>
        </member>
        <member name="F:Fwk.Logging.Targets.TargetType.None">
            <summary>
            Representa la ausencia del tipo de destino.
            </summary>
        </member>
        <member name="T:Fwk.Logging.StaticLogger">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Logging.StaticLogger.#cctor">
            <summary>
            Constructor de Logger.
            </summary>
        </member>
        <member name="M:Fwk.Logging.StaticLogger.Log(Fwk.Logging.Event)">
            <summary>
            Escribe el log de un evento .. Este metodo utiliza la configuracion del appsetting
            </summary>
            <param name="eventType"></param>
        </member>
        <member name="M:Fwk.Logging.StaticLogger.Log(Fwk.Logging.Event,System.String,System.String)">
            <summary>
            Escribe el log de un evento .. Este metodo utiliza la configuracion del appsetting
            </summary>
            <param name="ev"></param>
            <param name="path">Ruta donde se desea almacenar el log</param>
            <param name="fileNamePrefix">prefijo (obcional) del archivo </param>
        </member>
        <member name="M:Fwk.Logging.StaticLogger.Log(Fwk.Logging.Targets.TargetType,Fwk.Logging.Event,System.String,System.String)">
            <summary>
            Escribe el log de un evento .. Este metodo utiliza la configuracion del appsetting
            </summary>
            <param name="targetType">Objetivo de log.</param>
            <param name="eventLog"><see cref="T:Fwk.Logging.Event"/></param>
            <param name="fullFileName">Nombre completo del archivo</param>
            <param name="cnnStringName">Prefijo del nombre de archivo</param>
        </member>
        <member name="M:Fwk.Logging.StaticLogger.WriteLog(Fwk.Logging.Event,System.String,System.String)">
            <summary>
            Escrive un log.- Utiliza AppSetting. Es desir la informaciòn del archivo de configuración
            </summary>
            <param name="ev"></param>
            <param name="path"></param>
            <param name="fileNamePrefix">Prefijo del nombre de archivo</param>
        </member>
        <member name="M:Fwk.Logging.StaticLogger.WriteLogNoConfig(Fwk.Logging.Targets.TargetType,Fwk.Logging.Event,System.String,System.String)">
            <summary>
            Escrive un log sin utilizar la configuracion AppSettings
            </summary>
            <param name="targetType"></param>
            <param name="ev"></param>
            <param name="fullFileName">Nombre completo del archivo</param>
            <param name="cnnStringName">Prefijo del nombre de archivo</param>
        </member>
        <member name="M:Fwk.Logging.StaticLogger.ClearXmlTargetEvents">
            <summary>
            Reinicio los logs para que Xmltarget lo busque 
            en el archivo correspondiente o genere uno nuevo
            </summary>
        </member>
        <member name="M:Fwk.Logging.StaticLogger.GetTargetByRule(Fwk.ConfigSection.RuleElement,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="rule"></param>
            <param name="path"></param>
            <param name="fileNamePrefix"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Logging.StaticLogger.GetTargetByRule_NoConfig(Fwk.Logging.Targets.TargetType,System.String,System.String)">
            <summary>
            Configura y retorna un Target.- Llama Target.FactoryTarget quien es el encargado de crear realmente 
            el Target o retornar uno ya creado.-
            </summary>
            <param name="targetType">Tipo de target</param>
            <param name="fullFileName">Nombre de archivo (opcional)</param>
            <param name="cnnStringName">Cadena de coneccion</param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Exceptions.FunctionalException">
            <summary>
            Excepcion Funcional.
            </summary>
            <Author>moviedo</Author>
            <Date>28-12-2005</Date>
        </member>
        <member name="F:Fwk.Exceptions.FunctionalException._GroupExceptionName">
            <summary>
            Grupo en ConfigurationManager de Fwk
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FunctionalException._KeyExceptionName">
            <summary>
            Key en ConfigurationManager del Fwk
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FunctionalException._Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FunctionalException._ErrorId">
            <summary>
            Id del error
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FunctionalException.mSeverity">
            <summary>
            Severity.
            </summary>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.#ctor(System.String)">
            <summary>
            FunctionalException.
            </summary>
            <param name="pMessage"></param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Excepcion funcional.
            </summary>
            <param name="errorId">Numero identificador del error</param>
            <param name="message">Mensaje</param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Excepcion funcional.
            </summary>
            <param name="pinfo">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="pcontext">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.#ctor(System.Nullable{System.Int32},System.String,System.String[])">
            <summary>
            Excepcion funcional lee del configuration mannager por defecto 
            Ej:
            throw new FunctionalException(1000,"SaldoInsuficiente",new String["Alan Parker","50098,65"])
            throw new FunctionalException(null,"SaldoInsuficiente",new String["Alan Parker","50098,65"])
            </summary>
            <param name="errorId">Id. del error del</param>
            <param name="keyExceptionName">Id. del mensaje en el Configuration Manager</param>
            <param name="pparams">Parametros a incluir en el mensaje de error. Reemplaza todos los {} deacuerdo al orden especificado</param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String[])">
            <summary>
            Excepcion funcional lee del configuration mannager 
            </summary>
            <param name="configProviderName">Config provider name de donde se obtienen los mensajes</param>
            <param name="errorId">Id. del error del</param>
            <param name="keyExceptionName">Id. del mensaje en el Configuration Manager</param>
            <param name="pparams">Parametros a incluir en el mensaje de error. Reemplaza todos los {} deacuerdo al orden especificado</param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String[])">
            <summary>
            Excepcion funcional lee del configuration mannager por defecto 
            throw new FunctionalException(70008,"SaldoInsuficiente","FunctionalExceptionGorup",new String["Alan Parker","50098,65"])
            </summary>
            <param name="errorId">Id del error funcional</param>
            <param name="keyExceptionName">Key o Id. del mensaje en el Configuration Manager</param>
            <param name="groupExceptionName">Nombre del grupo donde se encuentran los mensajes funcionales, 
            si este valor esta vacio se tomara uno por defecto llamadoFunctionalExceptionMessage
            </param>
            <param name="pparams">Parametros a incluir en el mensaje de error. Reemplaza todos los {} deacuerdo al orden especificado</param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.String[])">
            <summary>
            Excepcion funcional lee del configuration mannager
            throw new FunctionalException("ProviderName",70008,"SaldoInsuficiente","FunctionalExceptionGorup",new String["Alan Parker","50098,65"])
            </summary>
            <param name="configProviderName">Config provider name</param>
            <param name="errorId">Id del error funcional</param>
            <param name="keyExceptionName">Key o Id. del mensaje en el Configuration Manager</param>
            <param name="groupExceptionName">Nombre del grupo donde se encuentran los mensajes funcionales, 
            si este valor esta vacio se tomara uno por defecto llamadoFunctionalExceptionMessage
            </param>
            <param name="pparams">Parametros a incluir en el mensaje de error. Reemplaza todos los {} deacuerdo al orden especificado</param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.#ctor(System.Nullable{System.Int32},System.String,System.Exception,System.String[])">
            <summary>
            Excepcion funcional lee del configuration mannager por defecto 
            Ej:
            throw new FunctionalException(70008,"SaldoInsuficiente",ex,new String["Alan Parker","50098,65"])
            </summary>
            
            <param name="errorId">Id del error funcional</param>
            <param name="keyExceptionName">Id. del mensaje.</param>
            <param name="innerExcepcion">Excepcion original.</param>
            <param name="pparams">Parametros a incluir en el mensaje de error. <example>new String["Param1","Param2"]</example></param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Exception,System.String[])">
            <summary>
            Excepcion funcional lee del configuration mannager por defecto o Configuration Mannager Provider espesificado en el atributo ConfigProviderName
            Ej:
            throw new FunctionalException(70008,"SaldoInsuficiente",ex,new String["Alan Parker","50098,65"])
            </summary>
            
            <param name="errorId">Id del error funcional</param>
            <param name="keyExceptionName">Id. del mensaje.</param>
            <param name="innerExcepcion">Excepcion original.</param>
            <param name="pparams">Parametros a incluir en el mensaje de error. <example>new String["Param1","Param2"]</example></param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.#ctor(System.Nullable{System.Int32},System.String,System.Exception,System.String,System.String[])">
            <summary>
            Excepcion funcional lee del configuration mannager por defecto o Configuration Mannager Provider espesificado en el atributo ConfigProviderName
             throw new FunctionalException(70008,"SaldoInsuficiente",ex,"FunctionalExceptionGorup",new String["Alan Parker","50098,65"])
            </summary>
            <param name="errorId">Id del error funcional</param>
            <param name="keyExceptionName">Id. del mensaje.</param>
            <param name="innerExcepcion">Excepcion original.</param>
            <param name="groupExceptionName">Nombre del grupo donde obtener los mensajes. Por defecto es el grupo FunctionalExceptionMassage</param>
            <param name="pparams">Parametros a incluir en el mensaje de error.<example>new String["Param1","Param2"]</example></param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.#ctor(System.String,System.Nullable{System.Int32},System.String,System.Exception,System.String,System.String[])">
            <summary>
            Excepcion funcional lee del configuration mannager por defecto o Configuration Mannager Provider espesificado en el atributo ConfigProviderName
             throw new FunctionalException(70008,"SaldoInsuficiente",ex,"FunctionalExceptionGorup",new String["Alan Parker","50098,65"])
            </summary>
            <param name="errorId">Id del error funcional</param>
            <param name="keyExceptionName">Id. del mensaje.</param>
            <param name="innerExcepcion">Excepcion original.</param>
            <param name="groupExceptionName">Nombre del grupo donde obtener los mensajes. Por defecto es el grupo FunctionalExceptionMassage</param>
            <param name="pparams">Parametros a incluir en el mensaje de error.<example>new String["Param1","Param2"]</example></param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.#ctor(System.Nullable{System.Int32},System.Exception,System.String)">
            <summary>
            Excepcion funcional.
            </summary>
            <param name="errorId">Id del error funcional</param>
            <param name="innerExcepcion">Excepcion original.</param>
            <param name="pmessage">Mensaje de error.</param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.#ctor(System.Web.Services.Protocols.SoapException)">
            <summary>
            Excepcion funcional.
            </summary>
            <param name="psoapEx">SoapException.</param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.SetMessage">
            <summary>
            Este metodo intenta establecer el mensaje desde ConfigurationManager (Grupo,Clave) 
            reemplaza los parametros por el String[]  -- Es decir
            </summary>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.SetParametersToMessage(System.String)">
            <summary>
            Assigna los parametros que vienen en un strinh[] a la cadena 
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Fwk.Exceptions.FunctionalException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the System.Runtime.Serialization.SerializationInfo with information about the exception.
            </summary>
            <param name="pinfo">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="pcontext">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Fwk.Exceptions.FunctionalException.InternalException">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.FunctionalException.ParamsArray">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.FunctionalException.KeyExceptionName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.FunctionalException.Message">
            <summary>
            Mensaje de error.
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.FunctionalException.ErrorId">
            <summary>
            Identificador del error funcional en la base de conocimmiento del sistema.-
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.FunctionalException.Severity">
            <summary>
            Severidad del error.
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.FunctionalException.GroupExceptionName">
            <summary>
            Nombre del grupo donde obtener los mensajes. Por defecto es el grupo FunctionalExceptionMassage
            </summary>
        </member>
        <member name="T:Fwk.Exceptions.FunctionalException.ExceptionSeverity">
            <summary>
            Severidad del error.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FunctionalException.ExceptionSeverity.High">
            <summary>
            Severidad alta.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FunctionalException.ExceptionSeverity.Medium">
            <summary>
            Severidad media.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FunctionalException.ExceptionSeverity.Low">
            <summary>
            Severidad baja.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FunctionalException.ExceptionSeverity.Unknown">
            <summary>
            Severidad desconocida.
            </summary>
        </member>
        <member name="T:Fwk.Caching.FwkCache">
            <summary>
            Componente que implementa la funcionalidad para aplicar caching .-
            </summary>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="M:Fwk.Caching.FwkCache.#ctor">
            <summary>
            Asigna la cache por defecto
            </summary>
        </member>
        <member name="M:Fwk.Caching.FwkCache.#ctor(System.String)">
            <summary>
            Asigna la cache por nombre
            </summary>
            <param name="pCacheManagerName"></param>
        </member>
        <member name="M:Fwk.Caching.FwkCache.CheckIfCachingExists(System.String)">
            <summary>
            Determino si el Item Existe en Caché
            </summary>
            <param name="pCahcheId">Clache del Ítem Guardado</param>
            <returns>Boolean: Indica si el Ítem se encuentra todavía en Caché</returns>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="M:Fwk.Caching.FwkCache.SaveItemInCache(System.String,System.Object)">
            <summary>
            Guarda Ítem en Caché según una key especificada.
            </summary>
            <param name="pCahcheId">Id de item a guardar</param>
            <param name="pObject">Ítem a Guardar</param>
            <returns>Indica si se pudo insertar el Objeto en Caché con el Key especificado</returns>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="M:Fwk.Caching.FwkCache.SaveItemInCache(System.String,System.Object,System.Boolean)">
            <summary>
            Guarda Ítem en Caché según una key especificada.
            </summary>
            <param name="pCahcheId">Id de item a guardar</param>
            <param name="pObject">Ítem a Guardar</param>
            <param name="pReplaceIfExist">Si es = True y si existe algun item con el mismo Id lo reemplaza</param>
            <returns>Indica si se pudo insertar el Objeto en Caché con el Key especificado</returns>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="M:Fwk.Caching.FwkCache.SaveItemInCache(System.Object,Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority,System.Double,System.Boolean)">
            <summary>
            Guarda Ítem en Caché Generando Una Key Única.
            </summary>
            <param name="pObject">Ítem a Guardar</param>
            <param name="pPriority">Prioridad del Ítem en Caché</param>
            <param name="pDaysFromExpiration">Días para que el Ítem Expire</param>
            <returns>Key Unica con la que se guardó el Ítem</returns>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="M:Fwk.Caching.FwkCache.SaveItemInCache(System.Object,Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority,System.Double,Fwk.HelperFunctions.DateFunctions.TimeMeasuresEnum,System.Boolean)">
            <summary>
            Guarda Ítem en Caché Generando Una Key Única.
            </summary>
            <param name="pObject">Ítem a Guardar</param>
            <param name="pPriority">Prioridad del Ítem en Caché</param>
            <param name="pDaysFromExpiration">Días para que el Ítem Expire</param>
            <returns>Key Unica con la que se guardó el Ítem</returns>
            <author>moviedo</author>
            <date>29/09/2009</date>
        </member>
        <member name="M:Fwk.Caching.FwkCache.SaveItemInCache(System.String,System.Object,Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority,System.Double,Fwk.HelperFunctions.DateFunctions.TimeMeasuresEnum,System.Boolean)">
            <summary>
            Guarda Ítem en Caché según una key especificada.
            </summary>
            <param name="pCahcheId">Id de item a guardar</param>
            <param name="pObject">Ítem a Guardar</param>
            <param name="pPriority">Prioridad del Ítem en Caché</param>
            <param name="pExpirationTime">Minutos para que el Ítem Expire</param>
            <param name="pTimeMeasures"></param>
            <param name="pRefreshOnExpired">Determina si una ves obtendo el item del cache se renueva la expiracion o no</param>
            <returns>Indica si se pudo insertar el Objeto en Caché con el Key especificado</returns>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="M:Fwk.Caching.FwkCache.SaveItemInCache(System.String,System.Object,Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority,System.DateTime,System.Boolean)">
            <summary>
            Guarda Ítem en Caché según una key especificada.
            </summary>
            <param name="pCahcheId">Id de item a guardar</param>
            <param name="pObject">Ítem a Guardar</param>
            <param name="pPriority">Prioridad del Ítem en Caché</param>
            <param name="pDateExpiration">Fecha para la cuál el Ítem Expirará</param>
            <returns>Indica si se pudo insertar el Objeto en Caché con el Key especificado</returns>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="M:Fwk.Caching.FwkCache.SaveItemInCache(System.Object,Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority,System.DateTime,System.Boolean)">
            <summary>
            Guarda Ítem en Caché Generando Una Key Única.
            </summary>
            <param name="pObject">Ítem a Guardar</param>
            <param name="pPriority">Prioridad del Ítem en Caché</param>
            <param name="pDateExpiration">Fecha para la cuál el Ítem Expirará</param>
            <param name="pRefreshOnExpired"></param>
            <returns>Key Unica con la que se guardó el Ítem</returns>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="M:Fwk.Caching.FwkCache.ClearAll">
            <summary>
            Borra todos los ítems de Caché
            </summary>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="M:Fwk.Caching.FwkCache.RemoveItem(System.String)">
            <summary>
            Eliminar un Ítem de Caché
            </summary>
            <param name="pCahcheId">Claye del Ítem a Guardado</param>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="M:Fwk.Caching.FwkCache.GetItemFromCache(System.String)">
            <summary>
            Recupera un Ítem de Cache dependiendo del Identificador del mismo.
            </summary>
            <param name="pCahcheId">Clave con el que se guardó el objeto</param>
            <returns>Object: Objeto que se quiere recuperar de Caché</returns>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="M:Fwk.Caching.FwkCache.ForceFlush(System.String)">
            <summary>
            Elimina toda la cache de manera exigida .- Util cuando se precentan problemas de serializacion en la inicializacion de la 
            cache
            </summary>
            <param name="pCacheManagerName"></param>
        </member>
        <member name="P:Fwk.Caching.FwkCache.CacheManager">
            <summary>
            Esta clase reprecenta la interfaz a la cache factory.- 
            Desde los application blocks todas las operaciones de catching se
            llevan a cavo desde aqui.-
            </summary>
        </member>
        <member name="P:Fwk.Caching.FwkCache.CacheManagerName">
            <summary>
            Nombre  de la configuracion de cache 
            </summary>
        </member>
        <member name="T:Fwk.Caching.FwkCache.TypeOfCaching">
            <summary>
            Enumeracion Utilizada en Metodo Ititiate que indica el tipo de Cache a utilizar.
            </summary>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="F:Fwk.Caching.FwkCache.TypeOfCaching.NullStorage">
            <summary>
            Null Backing Store (almacen en memoria)
            </summary>
        </member>
        <member name="F:Fwk.Caching.FwkCache.TypeOfCaching.IsolatedStorage">
            <summary>
            Isolated Storage (almacen en disco)
            </summary>
        </member>
        <member name="F:Fwk.Caching.FwkCache.TypeOfCaching.DataCacheStorage">
            <summary>
            Data Cache Storage 
            </summary>
        </member>
        <member name="F:Fwk.Caching.FwkCache.TypeOfCaching.CustomCacheStorage">
            <summary>
            A Custom Cache store 
            </summary>
        </member>
        <member name="T:Fwk.Bases.Debug.IEntityVisualizerForm">
            <summary>
            Formulario lanzado por <see cref="T:Fwk.Bases.Debug.IEntityVisualizer"/> para las clases <see cref="T:Fwk.Bases.IEntity"/>
            </summary>
            <Author>Marcelo .F. Oviedo</Author>
        </member>
        <member name="F:Fwk.Bases.Debug.IEntityVisualizerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Fwk.Bases.Debug.IEntityVisualizerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Fwk.Bases.Debug.IEntityVisualizerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Fwk.Bases.Debug.IEntityVisualizerForm.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Bases.Debug.IEntityVisualizerForm.EntityToVisualize">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Bases.HistoryAttribute">
             <summary>
             este atributo se le establece las propiedades que implementan el patron undo redo.-
            <example>
             <para>El siguiente ejemplo muestra como utilizar el atributo HistoryAttribute :</para>
             <code>
             <![CDATA[
                [XmlInclude(typeof(Cliente)), Serializable]
                public class Cliente : Entity
                {
                    #region [Private Members]
                    private System.Int32? _IdCliente;
                    private System.Int64? _CUIT;
                    private System.String _RazonSocial;
                    #endregion
                    #region [Properties]
            
                    #region [IdCliente]
                    [XmlElement(ElementName = "IdCliente", DataType = "int")]
                    public int? IdCliente
                    {
                        get { return _IdCliente; }
                        set { _IdCliente = value; }
                    }
                    #endregion
            
                    #region [CUIT]
            
                    public Int64? CUIT
                    {
                        get { return _CUIT; }
                        set { _CUIT = value; }
                    }
                    #endregion
            
                    #region [RazonSocial]
                    [XmlElement(ElementName = "RazonSocial", DataType = "string")]
                    public String RazonSocial
                    {
                        get { return _RazonSocial; }
                        set { _RazonSocial = value; }
                    }
                    #endregion
            
                    #region [NombreFantasia]
                    [HistoryAttribute("NombreFantasia")]
                    [XmlElement(ElementName = "NombreFantasia", DataType = "string")]
                    public String NombreFantasia
                    {
                        get { return _NombreFantasia; }
                        set { _NombreFantasia = value; }
                    }
                    #endregion
            
                    #endregion
            
                   #region [Methods]
                    /// <summary>
                    /// Metodo estatico que retorna un objeto Cliente apartir de un xml.-
                    /// </summary>
                    /// <param name="pXml">String con el xml</param>
                    /// <returns>Clientes</returns>
                    public static Cliente GetClientesFromXml(String pXml)
                    {
                        return (Cliente)Entity.GetObjectFromXml(typeof(Cliente), pXml);
                    }
                    #endregion
                }
                #endregion
             }
             ]]>
             </code> 
            </example>
             <Author>Marcelo .F. Oviedo</Author>  
             </summary>
        </member>
        <member name="T:Fwk.ConfigSection.WrapperProviderElement">
             <summary>
             ConfigProvider . 
             
            
             </summary>
             <date>2006/09/02</date>
             <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.WrapperProviderElement.#ctor">
            <summary>
            Constructor de RuleElement.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.WrapperProviderElement.Name">
            <summary>
            Nombre de la regla. Es el identificador de una regla
            por lo tanto este nombre no debe repetirse.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.WrapperProviderElement.WrapperProviderType">
            <summary>
            Determina el tipo wrapper:
            LocalWrapper:
            WebServiceWrapper
            RemotingWrapper
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.WrapperProviderElement.SourceInfo">
            <summary>
            pueden ser :
            LocalWrapper= ""
            WebServiceWrapper: url
            RemotingWrapper : ruta del remotingconfigfile.xml 
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.WrapperProviderElement.ServiceMetadataProviderName">
            <summary>
            pueden ser :
            
            
            
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.WrapperProviderElement.AppId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.ServiceManagement.DatabaseServiceConfigurationManager">
            <summary>
            Manejador de configuración de servicios que trabaja con una base de datos relacional como repositorio de configuración.
            </summary>
            <remarks>
            La base de datos que sirve de repositorio puede estar creada en cualquier producto que sea accesible por los componentes de acceso a datos de Microsoft Enterprise Library.
            </remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ServiceManagement.DatabaseServiceConfigurationManager.GetServiceConfiguration(System.String,System.String,System.String)">
            <summary>
            Devuelve la configuración de un servicio buscóndolo en la base de datos de configuracón.
            </summary>
            <param name="serviceName">Nombre del servicio</param>
            <param name="applicationId">Identificador de aplicacion a la que pertenece el servicio</param>
            <param name="cnnString">Nombre de cadena de conexion</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.ServiceManagement.DatabaseServiceConfigurationManager.GetAllServices(System.String,System.String)">
            <summary>
            Recupera la configuración de todos los servicios de negocio.
            </summary>
            <param name="applicationId">Identificador de aplicacion a la que pertenece el servicio</param>
            <param name="cnnString">Nombre de cadena de conexion</param>
            <returns>Lista de configuraciones de servicios de negocio.</returns>
        </member>
        <member name="M:Fwk.ServiceManagement.DatabaseServiceConfigurationManager.SetServiceConfiguration(System.String,Fwk.Bases.ServiceConfiguration,System.String,System.String)">
            <summary>
            Almacena la configuración de un servicio de negocio.
            </summary>
            <param name="serviceName">Nombre del servicio a actualizar.</param>
            <param name="pServiceConfiguration">Configuración del servicio de negocio.</param>
            <param name="applicationId">Identificador de aplicacion a la que pertenece el servicio</param>
            <param name="cnnString">Nombre de cadena de conexion</param>
        </member>
        <member name="M:Fwk.ServiceManagement.DatabaseServiceConfigurationManager.AddServiceConfiguration(Fwk.Bases.ServiceConfiguration,System.String,System.String)">
            <summary>
            Almacena la configuración de un nuevo servicio de negocio.
            </summary>
            <param name="pServiceConfiguration">Configuración del servicio de negocio.</param>
            <param name="applicationId">Identificador de aplicacion a la que pertenece el servicio</param>
            <param name="cnnString">Nombre de cadena de conexion</param>
            <date>2010-04-13T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ServiceManagement.DatabaseServiceConfigurationManager.DeleteServiceConfiguration(System.String,System.String,System.String)">
            <summary>
            Elimina la configuración de un servicio de negocio.
            </summary>
            <param name="serviceName">Nombre del servicio.</param>
            <param name="applicationId">Identificador de aplicacion a la que pertenece el servicio</param>
            <param name="cnnString">Nombre de cadena de conexion</param>
        </member>
        <member name="M:Fwk.ServiceManagement.DatabaseServiceConfigurationManager.GetServiceConfigurationFromRow(System.Data.IDataReader)">
            <summary>
            Mapea los campos de una datarow a propiedades de una configuración de servicio.
            </summary>
            <returns>Configuracion de servicio de negocio.</returns>
            <date>2008-04-13T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="T:Fwk.Configuration.ConfigurationManager">
            <summary>
            Clase principal que se utiliza para obtener cualquier configuracion tanto local como remota contenida
            en los archivos de configuracion.
            <remarks>Los parametros necesarios para su correcto funcionamiento son los que se
            allan en el App.Config que utilize el ConfigurationManager tales como:
            BaseConfigFile
            RemotingConfigFile : indica el archivo de configuracion necesario para la configuracion  del servicio remoto.
            IsLocal: determina si el ambito de configuracion es atravez del servicio remoto (Configuration Provider) 
            o es local (sin servicio alguno)
            </remarks>
            </summary>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.#cctor">
            <summary>
            Constructor estatico del bloque de configuracion del framework
            </summary>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.ChangeDefaultProvider(System.String)">
            <summary>
            Permite establecer el proveedor de configuración por defecto sin importar al proveedor por defecto configurado en el app config
            </summary>
            <param name="providerName"></param>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.GetProperty(System.String,System.String)">
            <summary>
            Obtiene una propiedad determinada de un archivo de configuracion Usa proveedor de confuiguraciones establecido por defecto.-
            </summary>
            <param name="pGroupName">Nombre del grupo donde se encuentra la propiedad</param>
            <param name="pPropertyName">Nombre de la propiedad a obtener</param>
            <returns>String con la propiedad</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.GetProperty(System.String,System.String,System.String)">
            <summary>
            Obtiene una propiedad determinada de un archivo de configuracion .-
            </summary>
            <param name="configProvider">Nombre del proveedor de configuracion</param>
            <param name="pGroupName">Nombre del grupo donde se encuentra la propiedad</param>
            <param name="pPropertyName">Nombre de la propiedad a obtener</param>
            <returns>String con la propiedad</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.GetConfigurationFile(System.String)">
            <summary>
            
            </summary>
            <param name="configProvider">Nombre del proveedor configurado</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.GetGroup(System.String,System.String)">
            <summary>
            Obtiene un grupo determinado en el archivo de configuracion
            </summary>
            <param name="configProvider">Nombre del proveedor de configuracion</param>
            <param name="pGroupName">Nombre del grupo a obtener</param>
            <returns>Group</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.GetGroup(System.String)">
            <summary>
            Obtiene un grupo determinado en el archivo de configuracion
            </summary>
            <param name="pGroupName"></param>
            <returns>Group </returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.GetBaseConfigFileName">
            <summary>
            Metodo que lee el en el App.Config la Key = BaseConfigFile para obtener el nombre del archivo de configuracion
            utilizado
            </summary>
            <returns>String con el nombre del archivo</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.GetBaseConfigFileName(System.String)">
            <summary>
            Metodo que lee el en el App.Config la Key = BaseConfigFile para obtener el nombre del archivo de configuracion
            utilizado
            </summary>
            <param name="pProviderName">Nombre del proveedor de configuracion</param>
            <returns>String con el nombre del archivo</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.GetProvider(System.String)">
            <summary>
            Obtiene uin configuration provider por su nombre
            </summary>
            <param name="providerName">Nombre del proveedor de configuracion</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.AddProperty(System.String,System.String,Fwk.Configuration.Common.Key)">
            <summary>
            Crea una propiedad en un grupo determinado
            </summary>
            <param name="configProvider">Nombre del proveedor de configuracion</param>
            <param name="groupName">Nombre del gruop que contiene las propiedades</param>
            <param name="key"></param>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.AddGroup(System.String,Fwk.Configuration.Common.Group)">
            <summary>
            Agrega un grupo al archivo de configuracion.-
            Si el grupo existe se retorna una TecnicalExeption 
            </summary>
            <param name="configProvider">Nombre del proveedor de configuracion</param>
            <param name="group">Objeto tipo Grupo que se agregara</param>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.RemoveProperty(System.String,System.String,System.String)">
            <summary>
            Elimina una propiedad u objeto key
            </summary>
            <param name="configProvider">Nombre del proveedor de configuracion</param>
            <param name="groupName">Nombre del gruop que contiene las propiedades</param>
            <param name="propertyName">Nombre de la propiedad o key.name</param>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.RemoveGroup(System.String,System.String)">
            <summary>
            Elimina un grupo
            </summary>
            <param name="configProvider">Nombre del proveedor de configuracion</param>
            <param name="groupName">Nombre del gruop que contiene las propiedades</param>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.ChangeGroupName(System.String,System.String,System.String)">
            <summary>
            Cançmbia el nombre de un grupo
            </summary>
            <param name="configProvider">Nombre del proveedor de configuracion</param>
            <param name="groupName">Nombre del gruop que contiene las propiedades</param>
            <param name="newGroupName"></param>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.ChangeProperty(System.String,System.String,Fwk.Configuration.Common.Key,System.String)">
            <summary>
            Realiza cambios a una propiedad.-
            </summary>
            <param name="configProvider">Nombre del proveedor de configuracion</param>
            <param name="groupName">Nombre del grupo donde se encuentra la propiedad</param>
            <param name="property">Propiedad actualizada. Este objeto puede contener todos sus valores modifcados</param>
            <param name="propertyName">Nombre de la propiedad que se mofdifico.- Este valor es el original sin modificacion</param>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager.RefreshConfigurationFile(System.String)">
            <summary>
            Vuelve a cargar el archivo de configuracion desde el origen de datos
            </summary>
            <param name="configProvider">Nombre del proveedor configurado</param>
            <returns></returns>
        </member>
        <member name="P:Fwk.Configuration.ConfigurationManager.ConfigProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Configuration.ConfigurationManager.DefaultProvider">
            <summary>
            Proveedor configurado como por defecto
            </summary>
        </member>
        <member name="T:Fwk.BusinessFacades.Utils.Audit">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.Audit.LogNotAvailableExcecution(Fwk.Bases.ServiceConfiguration,Fwk.Exceptions.ServiceError@)">
            <summary>
            Genera un log de tipo "Warning" cuando se ha intentado ejecutar
            un servicio que está deshabilitado.
            </summary>
            <param name="pConfig">configuración del servicio.</param>
            <param name="pServiceError">pServiceError </param> 
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.Audit.LogDispatcherErrorConfig(System.Exception)">
            <summary>
            Log error from dispatcher on xml File
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.Audit.LogNonSucessfulExecution(Fwk.Bases.IServiceContract,Fwk.Bases.IServiceContract)">
            <summary>
            Genera un log de tipo "Error" cuando se ha producido
            un error en la  ejecución del servicio.
            </summary>
            <param name="pRequest">Request</param>
            <param name="wResult">Response</param>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.Audit.LogSuccessfulExecution(Fwk.Bases.IServiceContract,Fwk.Bases.IServiceContract)">
            <summary>
            Almacena informacion de auditoria.- 
            Llama a StaticLogger y carga el log auditando los datos del Request de entrada
            </summary>
            <param name="pRequest">Request</param>
            <param name="wResult">Response</param>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.Audit.LogSuccessfulExecution_Old(Fwk.Bases.IServiceContract,Fwk.Bases.IServiceContract)">
            <summary>
            Almacena informacion de auditoria.- 
            Llama a StaticLogger y carga el log auditando los datos del Request de entrada
            </summary>
            <param name="pRequest">Request</param>
            <param name="pResult">Response</param>
        </member>
        <member name="T:Fwk.Blocking.FwkBlockingEngine">
            <summary>
            Marca de bloqueo para un registro de una tabla.-
            </summary>
        </member>
        <member name="M:Fwk.Blocking.FwkBlockingEngine.#ctor">
            <summary>
            Constructor de <see cref="T:Fwk.Blocking.FwkBlockingEngine"/>
            </summary>
        </member>
        <member name="M:Fwk.Blocking.FwkBlockingEngine.GetCustomParametersToInsert(Fwk.Blocking.IBlockingMark)">
            <summary>
            Retorna los parametros necesarios para realizar un INSERT
            </summary>
            <param name="pBlockingMark">Marca de bloqueo</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Blocking.FwkBlockingEngine.GetCustomParametersToGetByParams(Fwk.Blocking.IBlockingMark)">
            <summary>
            Retorna los parametros necesarios para realizar un GET
            </summary>
            <param name="pBlockingMark">Marca de bloqueo</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Blocking.FwkBlockingEngine.GetCustomParametersUserExist(Fwk.Blocking.IBlockingMark)">
            <summary>
            Retorna los parametros necesarios para realizar una busqueda de EXISTENCIA
            </summary>
            <param name="pBlockingMark">Marca de bloqueo</param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Blocking.BlockingMarkBase">
            <summary>
            Marca base de blocking .- Si decea implementar su propia clase de marcas haga heredadr su 
            clase de IBlockingMark e implemente una clase IBlockingEngine para la nueva definicion 
            de marca personalizada.
            </summary>
            <Auhor>moviedo</Auhor>
        </member>
        <member name="M:Fwk.Blocking.BlockingMarkBase.#ctor(System.String)">
            <summary>
            Constructor que asigna un nombre de tabla de modo de tratar con una tabla que no 
            sea la por defecto de blocking.
            Este constructor genera un nuevo valor de GUID
            </summary>
            <param name="pTableName">Nombre de tabla de marcas personalizadas.-</param>
        </member>
        <member name="M:Fwk.Blocking.BlockingMarkBase.#ctor(System.Nullable{System.Guid},System.String)">
            <summary>
            Constructor que asigna un nombre de tabla de modo de tratar con una tabla que no 
            sea la por defecto de blocking.
            </summary>
            <param name="pGuid">Guid para el caso en que ya sea conocido este valor. Generalmente cuando
            la marca ya existe en la BD.
            </param>
        </member>
        <member name="M:Fwk.Blocking.BlockingMarkBase.#ctor(System.Guid)">
            <summary>
            Constructor por defecto 
            </summary>
            <param name="pGuid">Guid para el caso en que ya sea conocido este valor. Generalmente cuando
            la marca ya existe en la BD.
            </param>
        </member>
        <member name="M:Fwk.Blocking.BlockingMarkBase.#ctor">
            <summary>
            Constructor por defecto 
            este constructor genera un nuevo valor Guid par ala marca.
            Es utilizado para crear una marca por defecto.-
            </summary>
        </member>
        <member name="M:Fwk.Blocking.BlockingMarkBase.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Guid},System.Nullable{System.DateTime},System.String)">
            <summary>
            Constructor para búsquedas
            todos los parametros pueden ser nulos
            </summary>
        </member>
        <member name="M:Fwk.Blocking.BlockingMarkBase.SetValues">
            <summary>
            Setea los valores por defecto.-
            </summary>
        </member>
        <member name="P:Fwk.Blocking.BlockingMarkBase.BlockingId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Blocking.BlockingMarkBase.Process">
            <summary>
            Nombre del proceso de nogocio que requiere el bloqueo
            </summary>
        </member>
        <member name="P:Fwk.Blocking.BlockingMarkBase.FwkGuid">
            <summary>
            Guid del Contexto de Bloqueo.- (solo lectura)
            </summary>
        </member>
        <member name="P:Fwk.Blocking.BlockingMarkBase.DueDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Blocking.BlockingMarkBase.AlreadyExists">
            <summary>
            Indica si la marca existe en la base de datos.
            </summary>
        </member>
        <member name="P:Fwk.Blocking.BlockingMarkBase.TTL">
            <summary>
            Time-To-Live del contexto de bloqueo.-
            </summary>
        </member>
        <member name="P:Fwk.Blocking.BlockingMarkBase.User">
            <summary>
            Usuario que efectua el bloqueo.-
            </summary>
        </member>
        <member name="P:Fwk.Blocking.BlockingMarkBase.TableName">
            <summary>
            Nombre de la tabla de bloqueo.- 
            </summary>
        </member>
        <member name="T:Fwk.Security.Cryptography.SymetriCypher_EntLibs`1">
            <summary>
            Clase generica de encriptacion
            <![CDATA[SymetriCypher<T>]]>
            </summary>
            <typeparam name="T"><see cref="T:System.Security.Cryptography.SymmetricAlgorithm"/></typeparam>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher_EntLibs`1.Encrypt(System.String)">
            <summary>
            Encripta una cadena de caracteres.-
            </summary>
            <param name="val">Cadena a encriptar</param>
            <returns>Cadena encriptada</returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher_EntLibs`1.Dencrypt(System.String)">
            <summary>
            Desencripta una cadena de caracteres.-
            </summary>
            <param name="val">Cadena encriptada</param>
            <returns>Cadena desencriptada</returns>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher_EntLibs`1.CreateKeyFile">
            <summary>
            Crea una archivo que contiene la semilla de encriptacion.- En base a este archivo el proveedor de encriptacion 
            realizara la criptografia.
            Esta sobrecarga abre un dialog box de creacion de archivo.-
            </summary>
        </member>
        <member name="M:Fwk.Security.Cryptography.SymetriCypher_EntLibs`1.CreateKeyFile(System.String)">
            <summary>
            Crea una archivo que contiene la semilla de encriptacion.- En base a este archivo el proveedor de encriptacion 
            realizara la criptografia.
            </summary>
            <param name="pkeyFileName">Nombre del archivo que contrendra la semilla.-</param>
        </member>
        <member name="P:Fwk.Security.Cryptography.SymetriCypher_EntLibs`1.KeyFileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Cryptography.SymetriCypher_EntLibs`1.AlgorithmProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Bases.IServiceConfigurationManager">
            <summary>
            Interfaz para clases para leer y escribir configuración de servicios de negocio.
            </summary>
            <remarks>
            Esta interfaz deberá ser implementada por todas las clases que interactúan con las fachadas de negocio, siendo utilizadas para realizar lecturas y escrituras de configuración de servicios de negocio.
            Cada Implementación deberá ser específica para un tipo de repositorio determinado: archivo xml, base de datos, múltiples archivos de recursos, etc.
            </remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceConfigurationManager.GetServiceConfiguration(System.String)">
            <summary>
            Recupera la configuración de un servicio de negocio.
            </summary>
            <param name="pServiceName">Nombre del servicio.</param>
            <returns>configuración del servicio de negocio.</returns>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceConfigurationManager.GetAllServices(System.String)">
            <summary>
            Recupera la configuración de todos los servicios de negocio.
            </summary>
            <returns>Lista de configuraciones de servicios de negocio.</returns>
            <date>2010-08-10T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceConfigurationManager.SetServiceConfiguration(System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Actualiza la configuración de un servicio de negocio.
            </summary>
            <param name="pServiceConfiguration">configuración del servicio de negocio.</param>
            <param name="pServiceName">Nombre del servicio a actualizar.</param>
            <date>2010-08-10T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceConfigurationManager.AddServiceConfiguration(Fwk.Bases.ServiceConfiguration)">
            <summary>
            Almacena la configuración de un nuevo servicio de negocio.
            </summary>
            <param name="pServiceConfiguration">configuración del servicio de negocio.</param>
            <date>2008-04-13T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceConfigurationManager.DeleteServiceConfiguration(System.String)">
            <summary>
            Elimina la configuración de un servicio de negocio.
            </summary>
            <param name="pServiceName">Nombre del servicio.</param>
            <date>2008-04-13T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="T:Fwk.Logging.Targets.XmlTarget">
            <summary>
            Destino de tipo archivo .Xml.
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="F:Fwk.Logging.Targets.XmlTarget.Logs">
            <summary>
            Listado de eventos de logueo correspondientes a este Target.-
            </summary>
        </member>
        <member name="M:Fwk.Logging.Targets.XmlTarget.#ctor">
            <summary>
            Constructor de XmlTarget.
            </summary>
        </member>
        <member name="M:Fwk.Logging.Targets.XmlTarget.Write(Fwk.Logging.Event)">
            <summary>
            Implementación de la escritura del log del evento
            en archivo .Xml.
            </summary>
            <param name="pEvent">Evento a loguear.</param>
        </member>
        <member name="M:Fwk.Logging.Targets.XmlTarget.Remove(System.Collections.Generic.List{System.String})">
            <summary>
            
            </summary>
            <param name="eventIdList"></param>
        </member>
        <member name="M:Fwk.Logging.Targets.XmlTarget.Remove(System.Collections.Generic.List{System.Guid})">
            <summary>
            
            </summary>
            <param name="eventIdList"></param>
        </member>
        <member name="M:Fwk.Logging.Targets.XmlTarget.OpenLogsFromFile">
            <summary>
            Retorna un Logs asociado al archivo especificado
            en la propiedad FileName, si es que este existe. En caso
            contrario, retorna un 'nuevo' Logs.
            </summary>
            <returns>Logs.</returns>
        </member>
        <member name="M:Fwk.Logging.Targets.XmlTarget.SearchByParam(Fwk.Logging.Event)">
            <summary>
            Busca directamente en el archivo. No busca por Id
            </summary>
            <param name="pEvent"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Logging.Targets.XmlTarget.SearchByParam(Fwk.Logging.Event,System.DateTime)">
             <summary>
            Busca directamente en el archivo. No busca por Id. Este método realiza ademas de la busqueda por cada uno de los parámetros de Event, un between entre pEvent.LogDate y pEndDate
            para cualquier envento con LogDate entre este rango. 
             </summary>
             <param name="pEvent">Event como parametro para buscqueda. </param>
             <param name="pEndDate">Fecha fin para busqueda.. </param>
             <returns></returns>
        </member>
        <member name="T:Fwk.AssemblyExplorer.AssemblyPropertyCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.AssemblyExplorer.AssemblyPropertyCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.AssemblyExplorer.AssemblyProperty">
            <summary>
            Summary description for AssemblyProperty.
            </summary>
        </member>
        <member name="T:Fwk.Bases.IFwkWindowsService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.IFwkWindowsService.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.IFwkWindowsService.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Mail.ProtocolMailBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Mail.ProtocolMailBase.Status">
            <summary>
            Current status of the connection
            </summary>
        </member>
        <member name="P:Fwk.Mail.ProtocolMailBase.IsConected">
            <summary>
            Get the status conection
            </summary>
        </member>
        <member name="P:Fwk.Mail.ProtocolMailBase.ConnectionId">
            <summary>
            Represent the Id of connection established
            </summary>
        </member>
        <member name="P:Fwk.Mail.ProtocolMailBase.UserPassword">
            <summary>
            User Password to log in
            </summary>
        </member>
        <member name="P:Fwk.Mail.ProtocolMailBase.UserMail">
            <summary>
            User account email
            </summary>
        </member>
        <member name="P:Fwk.Mail.ProtocolMailBase.URLInboxMail">
            <summary>
            URL a la bandeja de entrada
            </summary>
        </member>
        <member name="P:Fwk.Mail.ProtocolMailBase.Host">
            <summary>
            Host del servidor de correo
            </summary>
        </member>
        <member name="P:Fwk.Mail.ProtocolMailBase.SSL">
            <summary>
            Indica si la conexion utiliza SSL
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.MailAgentElement">
            <summary>
            </summary>
            <date>2009/08/31</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.MailAgentElement.#ctor">
            <summary>
            Constructor de RuleElement.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.MailAgentElement.Name">
            <summary>
            Nombre de la regla. Es el identificador de una regla
            por lo tanto este nombre no debe repetirse.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.MailAgentElement.HostMail">
            <summary>
            
            
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.MailAgentElement.InboxUrl">
            <summary>
            
            
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.MailAgentElement.UseSSL">
            <summary>
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.RuleElementCollection">
            <summary>
            Colección de reglas de logueo.
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.RuleElementCollection.#ctor">
            <summary>
            Constructor de RuleElementCollection.
            </summary>
        </member>
        <member name="M:Fwk.ConfigSection.RuleElementCollection.CreateNewElement">
            <summary>
            Crea un nuevo RuleElement en la colección.
            </summary>
            <returns>ConfigurationElement.</returns>
        </member>
        <member name="M:Fwk.ConfigSection.RuleElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Obtiene el key de un RuleElement.
            </summary>
            <param name="element">RuleElement del cual se desea conocer su key.</param>
            <returns>RuleElement.</returns>
        </member>
        <member name="M:Fwk.ConfigSection.RuleElementCollection.IndexOf(Fwk.ConfigSection.RuleElement)">
            <summary>
            Retorna el índice de determinada regla de logueo.
            </summary>
            <param name="pRuleElement">Regla de logueo de la cual se desea conocer su </param>
            <returns>índice de la regla de logueo.</returns>
        </member>
        <member name="P:Fwk.ConfigSection.RuleElementCollection.Count">
            <summary>
            Cantidad de reglas de logueo.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.RuleElementCollection.Item(System.Int32)">
            <summary>
            Retorna una regla de logueo según si índice.
            </summary>
            <param name="pIndex">índice de la regla de logueo que se desea obtener.</param>
            <returns>Regla de logueo.</returns>
        </member>
        <member name="T:Fwk.ConfigSection.RuleElement">
            <summary>
            Regla de logueo. Estas reglas establecen una
            correspondencia entre el tipo de evento y su destino(File, 
            Xml, Database, WindowEvent o Console).
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.RuleElement.#ctor">
            <summary>
            Constructor de RuleElement.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.RuleElement.Name">
            <summary>
            Nombre de la regla. Es el identificador de una regla
            por lo tanto este nombre no debe repetirse.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.RuleElement.EventsString">
            <summary>
            Conjunto de tipos de eventos sobre los cuales aplica
            la regla. Deben ser escritos separados por coma.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.RuleElement.Events">
            <summary>
            Lista de tipos de eventos sobre los cuales aplica
            la regla.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.RuleElement.TargetString">
            <summary>
            Cadena de texto con el destino o tipo de salida sobre la cual será escrito el log 
            del evento. Puede ser File, Xml, Database, WindowEvent o Console.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.RuleElement.Target">
            <summary>
            Destino o tipo de salida sobre la cual será escrito el log 
            del evento. Puede ser File, Xml, Database, WindowEvent o Console.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.RuleElement.FileName">
            <summary>
            Nombre del archivo sobre el cual será escrito el log del evento.
            Este atributo aplica si el target es File o Xml.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.RuleElement.CnnStringName">
            <summary>
            Nombre de la cadena de conexión configurada en la Sección 
            'connectionStrings'del archivo de configuración App.Config.
            Este atributo aplica solo para el target Database y debe
            existir la conexión configurada en la Sección 'connectionStrings'.
            </summary>
        </member>
        <member name="T:Fwk.Configuration.ServiceConfigurationManager">
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="F:Fwk.Configuration.ServiceConfigurationManager._Repository">
            <![CDATA[<ServiceConfiguration name="GetFwkConfigurationService">
             <CreatedUserName>moviedo</CreatedUserName>
            <CreatedDateTime>2012-01-26T16:35:17.7223497-03:00</CreatedDateTime>
            <Description></Description>
            <Handler>Fwk.Configuration.SVC.GetFwkConfigurationService, Fwk.Bases, Version=10.0.0.0, Culture=neutral, PublicKeyToken=null</Handler>
            <Request>Fwk.Configuration.ISVC.GetFwkConfigurationReq, Fwk.Bases, Version=10.0.0.0, Culture=neutral, PublicKeyToken=null</Request>
            <Response>Fwk.Configuration.ISVC.GetFwkConfigurationRes, Fwk.Bases, Version=10.0.0.0, Culture=neutral, PublicKeyToken=null</Response>
            <Available>true</Available>
            <Audit>false</Audit>
            <TransactionalBehaviour>Suppres</TransactionalBehaviour>
            <IsolationLevel>ReadCommitted</IsolationLevel>
            <Timeout>0</Timeout>
            <Cacheable>false</Cacheable>
            </ServiceConfiguration>]]>
        </member>
        <member name="M:Fwk.Configuration.ServiceConfigurationManager.GetProperty(System.String,System.String,System.String)">
            <summary>
            Obtiene una propiedad determinada de un archivo de configuracion .-
            </summary>
            <param name="configProvider">Proveedor de configuuracion</param>
            <param name="pGroupName">Nombre del grupo donde se encuentra la propiedad</param>
            <param name="pPropertyName">Nombre de la propiedad a obtener</param>
            <returns>String con la propiedad</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.ServiceConfigurationManager.GetConfigurationFile(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            Devuelve el contenido completo de un archivo de configuración
            dado el nombre de archivo.
            </summary>
            <param name="provider">Proveedor de configuración.</param>
            <returns>ConfigurationFile</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.ServiceConfigurationManager.GetGroup(System.String,System.String)">
            <summary>
            Obtiene un grupo determinado en el archivo de configuracion
            </summary>
            <param name="configProvider">Proveedor de configuuracion</param>
            <param name="pGroupName"></param>
            <returns>Hashtable con los grupos contenidos en el archivo de configuracion</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.ServiceConfigurationManager.RemoveConfigManager(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Fwk.Configuration.ServiceConfigurationManager.GetConfig(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            Devuelve el contenido completo de un archivo de configuración
            dado el nombre de archivo.
            </summary>
            <param name="provider">Proveedor de configuración.</param>
            <returns>ConfigurationFile</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.ServiceConfigurationManager.SetConfigurationFile(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            Busca la configuracion <see cref="T:Fwk.Configuration.Common.ConfigurationFile"/> atravez de una llamada a un servicio fwk
            Este codigo se ejecuta del lado del clientes es decir en el Wrapper
            Del lado del servidor (dispatcher) debe existir una configuracion Xml o Database con el mismo nombre de provider que 
            realiza la llmada del cliente de tipo Service.
            Utiliza provider.SourceInfo para localizar un wrapper valido en el ciente que es e q se utilizara para conectarce al Dispatcher
            </summary>
            <param name="provider">Proveedor de configuración.</param>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.ServiceConfigurationManager.AddProperty(Fwk.ConfigSection.ConfigProviderElement,Fwk.Configuration.Common.Key,System.String)">
            <summary>
            
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="key"></param>
            <param name="groupName">Nombre del gruop que contiene las propiedades</param>
        </member>
        <member name="M:Fwk.Configuration.ServiceConfigurationManager.AddGroup(Fwk.ConfigSection.ConfigProviderElement,Fwk.Configuration.Common.Group)">
            <summary>
            
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="group"></param>
        </member>
        <member name="M:Fwk.Configuration.ServiceConfigurationManager.RemoveProperty(Fwk.ConfigSection.ConfigProviderElement,System.String,System.String)">
            <summary>
            Elimina una porpiedad de la cinfuguracion
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="groupName">Gupo al que pertenece la propiedad</param>
            <param name="propertyName">Nombre de la propiedad</param>
        </member>
        <member name="M:Fwk.Configuration.ServiceConfigurationManager.RemoveGroup(Fwk.ConfigSection.ConfigProviderElement,System.String)">
            <summary>
            Elimina un grupo de la configuracion
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="groupName">Nombre del grupo a eliminar</param>
        </member>
        <member name="M:Fwk.Configuration.ServiceConfigurationManager.ChangeGroupName(Fwk.ConfigSection.ConfigProviderElement,System.String,System.String)">
            <summary>
            Cambia el nombre de un grupo.-
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="groupName">Nombre del grupo</param>
            <param name="newGroupName">Nuevo nombre del grupo</param>
        </member>
        <member name="M:Fwk.Configuration.ServiceConfigurationManager.ChangeProperty(Fwk.ConfigSection.ConfigProviderElement,System.String,Fwk.Configuration.Common.Key,System.String)">
            <summary>
            Realiza cambios a una propiedad.-
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="groupName">Nombre del grupo donde se encuentra la propiedad</param>
            <param name="property">Propiedad actualizada. Este objeto puede contener todos sus valores modifcados</param>
            <param name="propertyName">Nombre de la propiedad que se mofdifico.- Este valor es el original sin modificacion</param>
        </member>
        <member name="M:Fwk.Configuration.ServiceConfigurationManager.RefreshConfigurationFile(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            Vuelve a cargar el archivo de configuracion desde el origen de datos
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Xml.Node">
            <summary>
            Manejo de XmlNode.
            </summary>
            <Author>moviedo</Author>
            <Date>28-12-2005</Date>
        </member>
        <member name="M:Fwk.Xml.Node.NodeCreateAndAdd(System.Xml.XmlNode,System.String)">
            <summary>
            Crea y agrega un nodo a otro nodo.
            </summary>
            <param name="pnode">El nodo al cual se agregara un nuevo nodo.</param>
            <param name="pnewNodeName">El nombre del nuevo nodo.</param>
            <returns>El nodo creado.</returns>
        </member>
        <member name="M:Fwk.Xml.Node.NodeCreateAndAdd(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Crea y agrega un nodo a otro nodo.
            </summary>
            <param name="pnode">El nodo al cual se agregara un nuevo nodo.</param>
            <param name="pnewNodeName">El nombre del nuevo nodo.</param>
            <param name="pnewNodeValue">El valor del nuevo nodo.</param>
            <returns>El nodo creado.</returns>
        </member>
        <member name="M:Fwk.Xml.Node.NodeCreateAndAddFromString(System.Xml.XmlNode,System.String)">
            <summary>
            Crea y agrega un nodo a otro a partir de una definicion xml.
            </summary>
            <returns>El nodo creado.</returns>
            <param name="pnode">El nodo al que se le agregara el nuevo nodo.</param>
            <param name="pnewNodeXmlString">La definicion xml para el nuevo nodo.</param>
        </member>
        <member name="M:Fwk.Xml.Node.NodeCreateAndAddFromFilePath(System.Xml.XmlNode,System.String)">
            <summary>
            Crea y agrega un nodo a otro a partir de una definicion xml.
            </summary>
            <returns>El nodo creado.</returns>
            <param name="pnode">El nodo al que se le agregara el nuevo nodo.</param>
            <param name="pnewNodeXmlFilePath">La definicion xml para el nuevo nodo.</param>
        </member>
        <member name="M:Fwk.Xml.Node.NodeGet(System.Xml.XmlNode,System.String)">
            <summary>
            Retorna un nodo ubicado en un determinado xpath.
            </summary>
            <param name="pnode">El nodo padre.</param>
            <param name="pxPath">La ubicacion dentro del nodo padre.</param>
            <returns>El nodo buscado.</returns>
        </member>
        <member name="M:Fwk.Xml.Node.NodeValueGetString(System.Xml.XmlNode,System.String)">
            <summary>
            Retorna el contenido de un nodo como texto.
            </summary>
            <param name="pnode">El nodo padre.</param>
            <param name="pxPath">La ubicacion dentro del nodo padre.</param>
            <returns>Contenido del nodo en texto.</returns>
        </member>
        <member name="M:Fwk.Xml.Node.NodeValueGetInt(System.Xml.XmlNode,System.String)">
            <summary>
            Retorna el contenido de un nodo como entero.
            </summary>
            <param name="pnode">El nodo padre.</param>
            <param name="pxPath">La ubicacion dentro del nodo padre.</param>
            <returns>Contenido del nodo en entero.</returns>
        </member>
        <member name="M:Fwk.Xml.Node.NodeValueGetDouble(System.Xml.XmlNode,System.String)">
            <summary>
            Retorna el contenido de un nodo como double.
            </summary>
            <param name="pnode">El nodo padre.</param>
            <param name="pxPath">La ubicacion dentro del nodo padre.</param>
            <returns>Contenido del nodo en double.</returns>
        </member>
        <member name="M:Fwk.Xml.Node.NodeValueGetDateTime(System.Xml.XmlNode,System.String)">
            <summary>
            Retorna el contenido de un nodo como DateTime.
            </summary>
            <param name="pnode">El nodo padre.</param>
            <param name="pxPath">La ubicacion dentro del nodo padre.</param>
            <returns>Contenido del nodo en DateTime.</returns>
        </member>
        <member name="M:Fwk.Xml.Node.NodeValueGetBool(System.Xml.XmlNode,System.String)">
            <summary>
            Retorna el contenido de un nodo como booleano.
            </summary>
            <param name="pnode">El nodo padre.</param>
            <param name="pxPath">La ubicacion dentro del nodo padre.</param>
            <returns>Contenido del nodo en booleano.</returns>
        </member>
        <member name="M:Fwk.Xml.Node.NodeValueSet(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Setea el valor de un nodo preexistente.
            </summary>
            <param name="pnode">El nodo padre.</param>
            <param name="pxPath">La ubicacion dentro del nodo padre.</param>
            <param name="pnodeValue">El valor a setear.</param>
        </member>
        <member name="T:Fwk.HelperFunctions.LogFunctions">
            <summary>
            Provee funcionalidades para el manejo de logs de nuestras aplicaciones.- 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.HelperFunctions.LogFunctions.WriteLog(System.String,System.String,System.String,Fwk.HelperFunctions.LogFunctions.LogMode,System.Diagnostics.EventLogEntryType)" -->
        <member name="T:Fwk.HelperFunctions.LogFunctions.LogMode">
            <summary>
             Enumeracion de modos de logueos que utilizan las aplicaciones 
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.LogFunctions.LogMode.File">
            <summary>
            Modo que permite registrar en un archivo de Logs
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.LogFunctions.LogMode.EventViewer">
            <summary>
            Modo que permite registrar un evento en el Visor de sucesos
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.ConfigProviderElement">
             <summary>
             ConfigProvider . 
             
            
             </summary>
             <date>2006/09/02</date>
             <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.ConfigProviderElement.#ctor">
            <summary>
            Constructor de RuleElement.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.ConfigProviderElement.Name">
            <summary>
            Nombre de la regla. Es el identificador de una regla
            por lo tanto este nombre no debe repetirse.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.ConfigProviderElement.ConfigProviderType">
            <summary>
            Determina el tipo de origen de configuracion 
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.ConfigProviderElement.BaseConfigFile">
            <summary>
            Archivo contenedor de la configuracion
             
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.ConfigProviderElement.SourceInfo">
            <summary>
            Nombre de cadena de coneccion
             
            </summary>
        </member>
        <member name="T:Fwk.Bases.FwkSingleEntityHistory">
            <summary>
            Administra las pilas Undo y Redo
            Cada entrada en la pila UNDO es un cambio de propiedad
            </summary>
        </member>
        <member name="M:Fwk.Bases.FwkSingleEntityHistory.#ctor(System.Object)">
            <summary>
            El constructor nececita la referencia al objeto padre que se subscriba al manejador Undo.-
            </summary>
            <param name="parent">Clase que implementara el patron Undo Redo</param>
        </member>
        <member name="M:Fwk.Bases.FwkSingleEntityHistory.Store(System.String,System.Object)">
            <summary>
            El objeto padre llamara este metodo par aalmacenar el valor de la propiedad 
            antes de que esta sufra algun cambio.-
            </summary>
            <param name="propName">nombre de la propiedad</param>
            <param name="propVal">El valor anterior al cambio</param>
        </member>
        <member name="M:Fwk.Bases.FwkSingleEntityHistory.Undo">
            <summary>
            Obtiene el valor existente de la propiedad y lo inserta en Redo.-
            Retira la ultima propiedad de del objeto en la pila Undo (esto es para establecerlo como el valor vigente de la propiedad)
            Establece al objeto padre el valor de la propiedad que esta en la pila undo
            </summary>
        </member>
        <member name="M:Fwk.Bases.FwkSingleEntityHistory.Redo">
            <summary>
            Redo
            </summary>
        </member>
        <member name="P:Fwk.Bases.FwkSingleEntityHistory.CanUndo">
            <summary>
            Si la pila Undo tiene alcgun elemento retorna TRUE.
            </summary>
        </member>
        <member name="P:Fwk.Bases.FwkSingleEntityHistory.CanRedo">
            <summary>
             Si la pila REDO tiene alcgun elemento retorna TRUE.
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.WrapperProviderCollection">
            <summary>
            Colección ConfigProvider 
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.WrapperProviderCollection.#ctor">
            <summary>
            Constructor de ConfigElementCollection.
            </summary>
        </member>
        <member name="M:Fwk.ConfigSection.WrapperProviderCollection.CreateNewElement">
            <summary>
            Crea un nuevo ConfigProviderElement en la colección.
            </summary>
            <returns>ConfigurationElement.</returns>
        </member>
        <member name="M:Fwk.ConfigSection.WrapperProviderCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Obtiene el key de un RuleElement.
            </summary>
            <param name="element">ConfigProviderElement del cual se desea conocer su key.</param>
            <returns>ConfigProviderElement.</returns>
        </member>
        <member name="M:Fwk.ConfigSection.WrapperProviderCollection.IndexOf(Fwk.ConfigSection.WrapperProviderElement)">
            <summary>
            Retorna el índice del proveedor de configuracion.
            </summary>
            <param name="configProviderElement">ConfigProviderElement que se desea conocer su </param>
            <returns>índice</returns>
        </member>
        <member name="P:Fwk.ConfigSection.WrapperProviderCollection.Count">
            <summary>
            Cantidad de proveedores de configuracion .
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.WrapperProviderCollection.Item(System.Int32)">
            <summary>
            Retorna un proveedor de configuracion según si índice.
            </summary>
            <param name="pIndex">índice del proveedor de configuracion que se desea obtener.</param>
            <returns>proveedor de configuracion</returns>
        </member>
        <member name="T:Fwk.HelperFunctions.Win32Function">
            <summary>
            Funciones de ayuda para visualisacion de formularios
            </summary>
        </member>
        <member name="M:Fwk.HelperFunctions.Win32Function.FlashWindow_Start(System.Windows.Forms.Form)">
            <summary>
            Inicia  un flash o parpadeo del formulario 
            </summary>
            <param name="form"></param>
        </member>
        <member name="M:Fwk.HelperFunctions.Win32Function.FlashWindow_Stop(System.Windows.Forms.Form)">
            <summary>
            Detiene el parpadeo o flash en el formulario espesificado
            </summary>
            <param name="form"></param>
        </member>
        <member name="M:Fwk.HelperFunctions.Win32Function.FlashWindow_Flash(System.Windows.Forms.Form)">
            <summary>
            Produce un parpadeo o flash en el formulario hasta q recive foco
            </summary>
            <param name="form"></param>
        </member>
        <member name="M:Fwk.HelperFunctions.Win32Function.FlashWindow_Flash(System.Windows.Forms.Form,System.UInt32)">
            <summary>
            Produce un parpadeo o flash en el formulario hasta q recive foco por un cierto periodo de tiempo
            </summary>
            <param name="form"></param>
            <param name="count"></param>
        </member>
        <member name="M:Fwk.HelperFunctions.Win32Function.Round(System.Windows.Forms.Control)">
            <summary>
            Redondea un objeto que hereda de Control
            _BoarderRaduis can be adjusted to your needs, try 15 to start.
            </summary>
            <param name="pControl"></param>
        </member>
        <member name="M:Fwk.HelperFunctions.Win32Function.MoveForm(System.Windows.Forms.Form)">
            <summary>
            
            función privada usada para mover el formulario actual
            Se usa en evento MouseMove del control
            </summary>
            <param name="frm"></param>
        </member>
        <member name="M:Fwk.HelperFunctions.Win32Function.RemoveTittleBar(System.IntPtr,System.Boolean)">
            <summary>
            Remueve la barra de titulo de un formulario
            </summary>
            <param name="hwnd">Manejador de ventana </param>
            <param name="remove">True = remueve</param>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.WM_SYSCOMMAND">
            <summary>
            Declaraciones del API de Windows (y constantes usadas para mover el form)
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.MOUSE_MOVE">
            <summary>
            Declaraciones del API de Windows (y constantes usadas para mover el form)
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.FLASHW_STOP">
            <summary>
            Stop flashing. The system restores the window to its original stae.
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.FLASHW_CAPTION">
            <summary>
            Flash the window caption.
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.FLASHW_TRAY">
            <summary>
            Flash the taskbar button.
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.FLASHW_ALL">
            <summary>
            Flash both the window caption and taskbar button.
            This is equivalent to setting the FLASHW_CAPTION | FLASHW_TRAY flags.
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.FLASHW_TIMER">
            <summary>
            Flash continuously, until the FLASHW_STOP flag is set.
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.FLASHW_TIMERNOFG">
            <summary>
            Flash continuously until the window comes to the foreground.
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.WS_CAPTION">
            <summary>
            Constante Tipo de estilo, en este caso para quitar la barra 
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.SWP_FRAMECHANGED">
            Constantes para SetWindowPos  
        </member>
        <member name="M:Fwk.HelperFunctions.WindowDllImport.Flash(System.Windows.Forms.Form)">
            <summary>
            Flash the spacified Window (Form) until it recieves focus.
            </summary>
            <param name="form">The Form (Window) to Flash.</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.WindowDllImport.Flash(System.Windows.Forms.Form,System.UInt32)">
            <summary>
            Flash the specified Window (form) for the specified number of times
            </summary>
            <param name="form">The Form (Window) to Flash.</param>
            <param name="count">The number of times to Flash.</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.WindowDllImport.Start(System.Windows.Forms.Form)">
            <summary>
            Start Flashing the specified Window (form)
            </summary>
            <param name="form">The Form (Window) to Flash.</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.WindowDllImport.Stop(System.Windows.Forms.Form)">
            <summary>
            Stop Flashing the specified Window (form)
            </summary>
            <param name="form"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.WindowDllImport.RemoveTittleBar(System.IntPtr,System.Boolean)">
            <summary>
            Remueve la barra de titulo de un formulario
            </summary>
            <param name="hwnd">Manejador de ventana </param>
            <param name="remove">True = remueve</param>
        </member>
        <member name="P:Fwk.HelperFunctions.WindowDllImport.Win2000OrLater">
            <summary>
            A boolean value indicating whether the application is running on Windows 2000 or later.
            </summary>
        </member>
        <member name="T:Fwk.HelperFunctions.WindowDllImport.FLASHWINFO">
            <summary>
             Ejemplo
            One this to note with this example usage code, is the "this" keyword is referring to
            the current System.Windows.Forms.Form.
            Flash window until it recieves focus
                FlashWindow.Flash(this);
            Flash window 5 times
                FlashWindow.Flash(this, 5);
            Start Flashing "Indefinately"
                FlashWindow.Start(this);
            Stop the "Indefinate" Flashing
                FlashWindow.Stop(this);
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.FLASHWINFO.cbSize">
            <summary>
            The size of the structure in bytes.
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.FLASHWINFO.hwnd">
            <summary>
            A Handle to the Window to be Flashed. The window can be either opened or minimized.
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.FLASHWINFO.dwFlags">
            <summary>
            The Flash Status.
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.FLASHWINFO.uCount">
            <summary>
            The number of times to Flash the window.
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.WindowDllImport.FLASHWINFO.dwTimeout">
            <summary>
            The rate at which the Window is to be flashed, in milliseconds. If Zero, the function uses the default cursor blink rate.
            </summary>
        </member>
        <member name="T:Fwk.Xml.CData">
            <summary>
            Manejo de CData.
            </summary>
            <Author>moviedo</Author>
            <Date>28-12-2005</Date>
        </member>
        <member name="M:Fwk.Xml.CData.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Xml.CData.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Fwk.Xml.CData.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Xml.CData.CDATASectionCreateAndAdd(System.Xml.XmlNode)">
            <summary>
            Crea y agrega una seccion CDATA en un nodo.
            </summary>
            <param name="pnode">El nodo al que se le agregara la seccion CDATA.</param>
        </member>
        <member name="M:Fwk.Xml.CData.CDATASectionCreateAndAdd(System.Xml.XmlNode,System.String)">
            <summary>
            Crea y agrega una seccion CDATA en un nodo.
            </summary>
            <param name="pnode">El nodo al que se le agregara la seccion CDATA.</param>
            <param name="pCDATASectionValue">El contenido de la seccion CDATA.</param>
        </member>
        <member name="M:Fwk.Xml.CData.Clone">
            <summary>
            REaliza operacion clone
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Xml.CData.ToString">
            <summary>
            Sobreescrive tostring
            </summary>
            <returns></returns>
        </member>
        <member name="P:Fwk.Xml.CData.Text">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.ConfigProviderCollection">
            <summary>
            Colección ConfigProvider 
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.ConfigProviderCollection.#ctor">
            <summary>
            Constructor de ConfigElementCollection.
            </summary>
        </member>
        <member name="M:Fwk.ConfigSection.ConfigProviderCollection.CreateNewElement">
            <summary>
            Crea un nuevo ConfigProviderElement en la colección.
            </summary>
            <returns>ConfigurationElement.</returns>
        </member>
        <member name="M:Fwk.ConfigSection.ConfigProviderCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Obtiene el key de un RuleElement.
            </summary>
            <param name="element">ConfigProviderElement del cual se desea conocer su key.</param>
            <returns>ConfigProviderElement.</returns>
        </member>
        <member name="M:Fwk.ConfigSection.ConfigProviderCollection.Remove(System.Int32)">
            <summary>
            Elimina un proveedor por indice
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Fwk.ConfigSection.ConfigProviderCollection.Remove(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            Elimina un proveedor  
            </summary>
            <param name="configProvider"></param>
        </member>
        <member name="M:Fwk.ConfigSection.ConfigProviderCollection.Remove(System.String)">
            <summary>
            Elimina un proveedor por su nombre
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Fwk.ConfigSection.ConfigProviderCollection.IndexOf(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            Retorna el índice del proveedor de configuracion.
            </summary>
            <param name="configProvider">configProvider que se desea conocer su </param>
            <returns>índice</returns>
        </member>
        <member name="M:Fwk.ConfigSection.ConfigProviderCollection.Add(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            Agrega un nuevo proveedor a la coleccion Providers .-
            </summary>
            <param name="configProvider"></param>
        </member>
        <member name="M:Fwk.ConfigSection.ConfigProviderCollection.IsReadOnly">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Fwk.ConfigSection.ConfigProviderCollection.Count">
            <summary>
            Cantidad de proveedores de configuracion .
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.ConfigProviderCollection.Item(System.Int32)">
            <summary>
            Retorna un proveedor de configuracion según si índice.
            </summary>
            <param name="pIndex">índice del proveedor de configuracion que se desea obtener.</param>
            <returns>proveedor de configuracion</returns>
        </member>
        <member name="T:Fwk.Bases.Debug.IEntityVisualizer">
            <summary>
             Visualizador en modo debug para cualquier clase qeu implementa la interfaz <see cref="T:Fwk.Bases.IEntity"/>
            </summary>
            <Author>Marcelo .F. Oviedo</Author>
        </member>
        <member name="M:Fwk.Bases.Debug.IEntityVisualizer.Show(Microsoft.VisualStudio.DebuggerVisualizers.IDialogVisualizerService,Microsoft.VisualStudio.DebuggerVisualizers.IVisualizerObjectProvider)">
            <summary>
            
            </summary>
            <param name="windowService"></param>
            <param name="objectProvider"></param>
        </member>
        <member name="M:Fwk.Bases.Debug.IEntityVisualizer.TestShowVisualizer(System.Object)">
            <summary>
            Tests the visualizer by hosting it outside of the debugger.
            </summary>
            <param name="objectToVisualize">The object to display in the visualizer.</param>
        </member>
        <member name="T:Fwk.Bases.FwkMultipleEntityHistory">
            <summary>
            Administra las pilas Undo y Redo
            Cada entrada en la pila UNDO es un cambio de propiedad
            </summary>
        </member>
        <member name="M:Fwk.Bases.FwkMultipleEntityHistory.#ctor(System.Object)">
            <summary>
            El constructor nececita la referencia al objeto padre que se subscriba al manejador Undo.-
            </summary>
            <param name="parent">Clase que implementara el patron Undo Redo</param>
        </member>
        <member name="M:Fwk.Bases.FwkMultipleEntityHistory.Undo">
            <summary>
            Obtiene el valor existente de la propiedad y lo inserta en Redo.-
            Retira la ultima propiedad de del objeto en la pila Undo (esto es para establecerlo como el valor vigente de la propiedad)
            Establece al objeto padre el valor de la propiedad que esta en la pila undo
            </summary>
        </member>
        <member name="M:Fwk.Bases.FwkMultipleEntityHistory.Redo">
            <summary>
            Retira la ultima propiedad de Redo y las pasa a Undo
            </summary>
        </member>
        <member name="M:Fwk.Bases.FwkMultipleEntityHistory.AddHistoryToAllProperties(System.String[])">
            <summary>
            Establece una marca de historia para todas las propiedades a las que se le decea guardar su trazabilidad
            </summary>
            <param name="pHistoryProperties"></param>
        </member>
        <member name="P:Fwk.Bases.FwkMultipleEntityHistory.CanUndo">
            <summary>
            Si la pila Undo tiene alcgun elemento retorna TRUE.
            </summary>
        </member>
        <member name="P:Fwk.Bases.FwkMultipleEntityHistory.CanRedo">
            <summary>
             Si la pila REDO tiene alcgun elemento retorna TRUE.
            </summary>
        </member>
        <member name="T:Fwk.Bases.BaseDAC">
            <summary>
            Clase base de la que heredan estaticamente todos los componentes DAC
            </summary>
        </member>
        <member name="M:Fwk.Bases.BaseDAC.GetCnnstring(System.String)">
            <summary>
            Busca cadenas de conección.- Primero intenta buscar en el AppSetings luego si no tiene exito en el 
            ConfigarionMannager 
            </summary>
            <param name="pCompayId">Identificador de empresa</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.BaseDAC.GetCnnstring_App(System.String)">
            <summary>
            Busca cadenas de coenección en el archivo de configuracion AppSettings
            </summary>
            <param name="pCompayId">Identificador de empresa</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.BaseDAC.GetCnnstrng_ConfigMng(System.String)">
            <summary>
            Busca cadenas de coenección en el archivo de configuracion Configuracion mannager del framework
            </summary>
            <param name="pCompayId">Identificador de empresa</param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Bases.BaseBC">
            <summary>
            Clase base de la que pueden heredar todos los componentes BC
            </summary>
        </member>
        <member name="M:Fwk.Bases.BaseBC.#ctor(System.String)">
            <summary>
            Cosntructor unico
            </summary>
            <param name="pCompanyId">Identificador de empresa</param>
        </member>
        <member name="P:Fwk.Bases.BaseBC.CompanyId">
            <summary>
            Identificador de empresa
            </summary>
        </member>
        <member name="T:Fwk.Caching.ServiceCacheMannager">
            <summary>
            Componente que permite manipular los objetos IServiceContract en la cache.- 
            </summary>
        </member>
        <member name="M:Fwk.Caching.ServiceCacheMannager.Get(Fwk.Bases.IRequest)">
            <summary>
            Obtiene un response cacheado por medio de su request
            </summary>
            <param name="pRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Caching.ServiceCacheMannager.Add(Fwk.Bases.IServiceContract,Fwk.Bases.IServiceContract)">
            <summary>
            Almacena un response en cahce
            </summary>
            <param name="pRequest"></param>
            <param name="pResult"></param>
        </member>
        <member name="M:Fwk.Caching.ServiceCacheMannager.ClearAll(System.String)">
            <summary>
            Limpia todos los resultado de servicios en cache
            </summary>
            <param name="pCacheMannagerName"></param>
        </member>
        <member name="T:Fwk.BusinessFacades.SimpleFacade">
            <summary>
            Fachada de servicio por defecto a utilizar por las aplicaciones.
            </summary>
            <remarks>Esta fachada realiza las siguientes tareas: 
            
            <list type="number">
            <item>Audita la  ejecución del servicio.</item>
            <item>Provee seguridad de acceso al servicio.</item>
            <item>Verifica que el servicio está disponible para ser ejecutado.</item>
            <item>Ejecuta el servicio a través de MSDTC en caso de ser necesario.</item>
            </list>
            </remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="T:Fwk.Bases.IBusinessFacade">
            <summary>
            Interfaz para clases que ejecutan un servicio de negocio.
            </summary>
            <remarks>
            Esta interfaz deberá ser implementada por todas las clases que ejecuten un servicio de negocio. 
            Estas clases deberán implementar el comportamiento no funcional que no es provisto por el servicio que expone los servicios de negocio (seguridad, transaccionalidad, logueo, etc).
            </remarks>
        </member>
        <member name="M:Fwk.Bases.IBusinessFacade.ExecuteService(System.String,System.String,System.String)">
            <summary>
            Ejecuta un servicio de negocio.
            </summary>
            <param name="pServiceName">Nombre del servicio.</param>
            <param name="pData">XML con datos de entrada para el servicio.</param>
            <returns>XML resultado del servicio.</returns>
        </member>
        <member name="M:Fwk.BusinessFacades.SimpleFacade.ExecuteService(System.String,Fwk.Bases.IServiceContract)">
            <summary>
            Ejecuta un servicio de negocio.
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <param name="pRequest">Request con datos de entrada para la  ejecución del servicio.</param>
            <returns>XML con el resultado de la  ejecución del servicio.</returns>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.SimpleFacade.ExecuteService(System.String,System.String,System.String)">
            <summary>
            Ejecuta un servicio de negocio.
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <param name="serviceName">Nombre del servicio de negocio.</param> 
            <param name="pXmlRequest">XML con datos de entrada para la  ejecución del servicio.</param>
            <returns>XML con el resultado de la  ejecución del servicio.</returns>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.SimpleFacade.GetCaheDataById(Fwk.Bases.IRequest,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Obtiene la data de la cache. si no lo encuentra ejecuta el servicio y lo almacena en la cache para proximo busqueda
            </summary>
            <param name="pRequest"></param>
            <param name="pServiceConfiguration"></param>
            <returns>IServiceContract con el response</returns>
        </member>
        <member name="M:Fwk.BusinessFacades.SimpleFacade.GetServiceConfiguration(System.String,System.String)">
            <summary>
            Obtiene la configuracion de un servicio
            </summary>
            <param name="providerName">Nombre del proveedor de la metadata de szervicio</param>
            <param name="serviceName">Nombre del servicio a obtener</param>
            <returns>Informacion del servicio</returns>
        </member>
        <member name="M:Fwk.BusinessFacades.SimpleFacade.GetServicesList(System.String,System.Boolean)">
            <summary>
            lista los servicios configurados
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <param name="pViewXML">Permite ver como xml todos los servicios y sus datos.
            Si se espesifuca false solo se vera una simple lista</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.BusinessFacades.SimpleFacade.SetServiceConfiguration(System.String,System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Actualiza la configuración de un servicio de negocio.
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <param name="serviceName"></param>
            <param name="pServiceConfiguration">configuración del servicio de negocio.</param>
            <date>2010-08-10T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.SimpleFacade.AddServiceConfiguration(System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Almacena la configuración de un nuevo servicio de negocio.
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <param name="pServiceConfiguration">configuración del servicio de negocio.</param>
            <date>2008-04-13T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.SimpleFacade.DeleteServiceConfiguration(System.String,System.String)">
            <summary>
            Elimina la configuración de un servicio de negocio.
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <param name="serviceName">Nombre del servicio.</param>
            <date>2008-04-13T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.SimpleFacade.GetAllApplicationsId(System.String)">
            <summary>
            Obtiene una lista de todas las aplicaciones configuradas en el origen de datos configurado por el 
            proveedor
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.BusinessFacades.SimpleFacade.GetProviderInfo(System.String)">
            <summary>
            Obtiene info del proveedor de metadata
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.BusinessFacades.SimpleFacade.RetriveDispatcherInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.BusinessFacades.SimpleFacade.CheckServiceAvailability">
            <summary>
            Chequea la disponibilidad del despachador de servicio
            </summary>
            <returns>Mensaje en caso de que el servicio no esté disponible</returns>
        </member>
        <member name="T:Fwk.BusinessFacades.Utils.AuditMode">
            <summary>
            enumeración que define el modo en que se auditará la  ejecución del servicio.
            </summary>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="F:Fwk.BusinessFacades.Utils.AuditMode.Required">
            <summary>
            Se auditará la  ejecución del servicio, sin importar la configuración del mismo.
            </summary>
        </member>
        <member name="F:Fwk.BusinessFacades.Utils.AuditMode.Optional">
            <summary>
            Se auditará la  ejecución del servicio si éste está configurado para ser auditado.
            </summary>
        </member>
        <member name="F:Fwk.BusinessFacades.Utils.AuditMode.None">
            <summary>
            No se auditará la  ejecución del servicio, sin importar la configuración del mismo.
            </summary>
        </member>
        <member name="T:Fwk.BusinessFacades.Utils.FacadeHelper">
            <summary>
            Provee soporte a las clases que implementan IBusinessFacade.
            </summary>
            <remarks>
            Toda la funcionalidad que sea reutilizable por las distintas fachadas de negocio debe estar implementada por esta clase.
            </remarks>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.ReloadConfig(System.String@)">
            <summary>
            Permite volver a cargar la configuracion si es que en el inicio estatico no lo hiso correctamente
            </summary>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.RunTransactionalProcess(System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Ejecuta un servicio de negocio dentro de un ámbito transaccional.
            </summary>
            <param name="pData">XML con datos de entrada.</param>
            <param name="serviceConfiguration">configuración del servicio.</param>
            <returns>XML con datos de salida del servicio.</returns>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.RunTransactionalProcess(Fwk.Bases.IServiceContract,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Ejecuta un servicio de negocio dentro de un ámbito transaccional.
            </summary>
            <param name="pRequest">XML con datos de entrada.</param>
            <param name="serviceConfiguration">configuración del servicio.</param>
            <returns>XML con datos de salida del servicio.</returns>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.RunNonTransactionalProcess(System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Ejecuta un servicio de negocio dentro de un ámbito transaccional.
            </summary>
            <param name="pData">XML con datos de entrada.</param>
            <param name="serviceConfiguration">configuración del servicio.</param>
            <returns>XML con datos de salida del servicio.</returns>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.RunNonTransactionalProcess(Fwk.Bases.IServiceContract,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Ejecuta un servicio de negocio dentro de un ámbito transaccional.
            </summary>
            <param name="pRequest">Request con datos de entrada.</param>
            <param name="serviceConfiguration">configuración del servicio.</param>
            <returns>XML con datos de salida del servicio.</returns>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.RunService(Fwk.Bases.IServiceContract,Fwk.Bases.ServiceConfiguration,Fwk.Exceptions.ServiceError@)">
            <summary>
            Ejecuta el servicio de negocio.
            </summary>
            <param name="pRequest">Request de entrada que se pasa al servicio</param>
            <param name="pServiceConfiguration">configuración del servicio.</param>
            <param name="pserviError">serviError</param> 
            <returns>XML que representa el resultado de la  ejecución del servicio.</returns>
            <date>2007-08-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.RunService(System.String,Fwk.Bases.ServiceConfiguration,Fwk.Exceptions.ServiceError@)">
            <summary>
            Ejecuta el servicio de negocio.
            </summary>
            <param name="pData">XML con datos de entrada.</param>
            <param name="pServiceConfiguration">configuración del servicio.</param>
            <param name="pserviError"></param>
            <returns>XML que representa el resultado de la  ejecución del servicio.</returns>
            <date>2007-08-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.FillServiceError(Fwk.Exceptions.ServiceError,System.Exception)">
            <summary>
            Completa el error del que va dentro del Request con informacion de :
            Assembly, Class, Namespace, UserName,  InnerException, etc
            </summary>
            <param name="pServiceError"></param>
            <param name="pException"></param>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.GetTechnicalException(System.String,System.String,System.Exception)">
            <summary>
            Completa el error del que va dentro del Request con informacion de :
            Assembly, Class, Namespace, UserName,  InnerException, etc
            </summary>
            <param name="pMessage">Mensaje personalizado</param>
            <param name="pErrorId">Id del Error</param>
            <param name="pException">Alguna Exception que se quiera incluir</param>
            <date>2007-08-07T00:00:00</date>
            <author>moviedo</author> 
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.GetResponse(Fwk.Bases.ServiceConfiguration)">
            <summary>
            Obtiene un objeto Response :: IServiceContract
            </summary>
            <param name="pServiceConfiguration"><see cref="T:Fwk.Bases.ServiceConfiguration"/></param>
            <returns>IServiceContract</returns>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.GetServiceConfiguration(System.String,System.String)">
            <summary>
            Recupera la configuración del servicio de negocio.
            </summary>
            <remarks>Lee la configuración utilizando un ServiceConfigurationManager del tipo especificado en los settings de la aplicación.</remarks>
            <param name="providerName">Nombre del proveedor de la metadata de servicio</param>
            <param name="serviceName">Nombre del servicio de negocio.</param>
            <returns>configuración del servicio de negocio.</returns>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.GetAllServices(System.String)">
            <summary>
            Obtiene todos los servicios configurados
            </summary>
            <param name="providerName">Nombre del proveedor de la metadata de servicio</param>  
            <returns>ServiceConfigurationCollection</returns>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.SetServiceConfiguration(System.String,System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Actualiza la configuración de un servicio de negocio.
            </summary>
            <param name="providerName">Nombre del proveedor de la metadata de servicio</param>
            <param name="serviceName"></param>
            <param name="serviceConfiguration"></param>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.AddServiceConfiguration(System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Almacena la configuración de un nuevo servicio de negocio.
            </summary>
            <param name="providerName">Nombre del proveedor de la metadata de servicio</param>
            <param name="serviceConfiguration"></param>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.DeleteServiceConfiguration(System.String,System.String)">
            <summary>
            Elimina la configuración de un servicio de negocio.
            </summary>
            <param name="providerName">Nombre del proveedor de la metadata de servicio</param>
            <param name="serviceName"></param>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.GetAllApplicationsId(System.String)">
            <summary>
            Obtiene una lista de todas las aplicaciones configuradas en el origen de datos configurado por el 
            proveedor
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.GetProviderInfo(System.String)">
            <summary>
            Obtiene info del proveedor de metadata
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.RetriveDispatcherInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.ValidateAvailability(Fwk.Bases.ServiceConfiguration,Fwk.Bases.IServiceContract@)">
            <summary>
            Valida que el servicio está disponible para ser ejecutado.
            </summary>
            <param name="serviceConfiguration">configuración del servicio.</param>
            <param name="result"></param>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.CreateTransactionScopeHandler(Fwk.Bases.ServiceConfiguration)">
            <summary>
            Crea un ámbito de transacción en base a la configuración del servicio de negocio.
            </summary>
            <param name="serviceConfiguration">configuración del servicio de negocio.</param>
            <returns>ámbito de transacción. <see cref="T:Fwk.Transaction.TransactionScopeHandler"/> </returns>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.AssignData(System.String,System.Data.DataSet)">
            <summary>
            Asigna datos a un dataset.
            </summary>
            <param name="pData">XML para cargar en el dataset.</param>
            <param name="pDataSet">Dataset sobre el que se cargará el XML de entrada.</param>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.BusinessFacades.Utils.FacadeHelper.GePatch(Fwk.Bases.ServiceConfiguration)">
            <summary>
            Ruta prefija donde se deberan obtener los assemblies. 
            Por defecto se retorna \bin del servicio
            </summary>
            <param name="serviceConfiguration"></param>
            <returns>Ruta prefijada del servicio</returns>
        </member>
        <member name="T:Fwk.Net.Ftp.FTPComponent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Net.Ftp.FTPComponent.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.SendDebug(System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.SendErrorEvent(System.Exception)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.#ctor(System.ComponentModel.IContainer)">
            <summary>
            
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.BeginGetFileListAsync(System.String)">
            <summary>
            Comienza a recivir archivos
            </summary>
            <param name="mask">Filtro ej *.*</param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.GetFileList(System.String)">
            <summary>
            Retorna un string[] con la lista de arhivos remotos.-
            </summary>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.GetFileSize(System.String)">
            <summary>
            Retorna el tamaño de un archivo que se encuentra en la ruta actual
            </summary>
            <param name="fileName">Nombre del archivo remoto</param>
            <returns>long : tamaño del del archivo</returns>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.BeginDowloadAllDirAsync(System.String,System.String,System.Boolean)">
            <summary>
            Comienza la descarga de forma asincrona
            </summary>
            <param name="dir">Directorio remoto</param>
            <param name="destPath">Directorio local</param>
            <param name="recursive">Recursividad</param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.EndDowloadAllDirAsync(System.IAsyncResult)">
            <summary>
            fin de la descarga completa del directorio
            Fin de DowloadAllDirAsync
            </summary>
            <param name="res"></param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.DowloadAllDir(System.String,System.String@,System.Boolean,System.Exception@)">
            <summary>
            
            </summary>
            <param name="dir"></param>
            <param name="destPath"></param>
            <param name="recursive"></param>
            <param name="ex"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.Net.Ftp.FTPComponent.Download(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Fwk.Net.Ftp.FTPComponent.Download(System.String,System.String,System.Boolean)" -->
        <member name="M:Fwk.Net.Ftp.FTPComponent.Upload(System.String)">
            <summary>
            Sube un archivo al servidor remoto.-
            </summary>
            <param name="fileName">Nombre del archivo a subir</param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.Upload(System.String,System.Boolean)">
            <summary>
            Sube un archivo al servidor remoto.-
            </summary>
            <param name="fileName">Nombre del archivo a subir</param>
            <param name="resume">Llama al comando REST: Reiniciar cargas y descargas de FTP y despues RETR
            Las descargas se pueden reiniciar emitiendo primero un comando rest con el desplazamiento deseado y, 
            a continuación, emitiendo el comando retr.
            </param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.DeleteRemoteFile(System.String)">
            <summary>
            elimina un archivo
            </summary>
            <param name="fileName">Archivo a eliminar</param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.RenameRemoteFile(System.String,System.String)">
            <summary>
            Renombrado de archivo en el servidor remoto
            </summary>
            <param name="oldFileName">Nombre viejo del archivo</param>
            <param name="newFileName">Nuevo nombre</param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.BeginConnectAsync(Fwk.Net.Ftp.ObjectHandler)">
            <summary>
            
            </summary>
            <param name="cb"></param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.Conect">
            <summary>
            Se concta al servidor remoto
            </summary>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.Close">
            <summary>
            Cierra la conexion FTP.-
            </summary>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.SetBinaryMode(System.Boolean)">
            <summary>
            True = modo bunario para descargas
            False, Modo Ascii para descargas.
            </summary>
            <param name="mode">true o false</param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.CreateDir(System.String)">
            <summary>
            Crea un directorio en el servidor remoto
            </summary>
            <param name="dirName">directorio romoto crear</param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.RemoveDir(System.String)">
            <summary>
            Elimina un directorio en el servidor remoto
            </summary>
            <param name="dirName">Directorio remoto a eliminar</param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.ChangeDir(System.String)">
            <summary>
            Cambia el actual directorio en el servidor remoto
            </summary>
            <param name="dirName">Nombre del directorio al que se quiere cambiar</param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.GetCurrentDir">
            <summary>
            Obtiene la ruta actual
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.ReadReply">
            <summary>
            Calcula
            retValue
            mes
            reply
            </summary>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.Cleanup">
            <summary>
            Cierra el socket. Es decir la conexion con el server FTP
            </summary>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.ReadLine">
            <summary>
            Lee el buffer del socket del cliente.- 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.SendCommand(System.String)">
            <summary>
            Envia un comando FTP
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.CreateDataSocket">
            <summary>
            Crea el socket FTP al puerto 21
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Net.Ftp.FTPComponent.ParseLSTCommandResponse(System.String[])">
            <summary>
            Retorna una lista de ServerFileData parseada de una lista LSTI
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="E:Fwk.Net.Ftp.FTPComponent.EndDowloadAllDirEvent">
            <summary>
            Evento que se lanza cundo se finaliza BeginDowloadAllDirAsync
            </summary>
        </member>
        <member name="P:Fwk.Net.Ftp.FTPComponent.FTPPass">
            <summary>
            Password para conectarce al servidor ftp.- Si es anonymous, no se establece este valor
            </summary>
        </member>
        <member name="P:Fwk.Net.Ftp.FTPComponent.FTPUser">
            <summary>
            Usuario ftp.- Por defecto es anonymous
            </summary>
        </member>
        <member name="P:Fwk.Net.Ftp.FTPComponent.FTPPath">
            <summary>
            Ruta del servidor remoto
            </summary>
        </member>
        <member name="P:Fwk.Net.Ftp.FTPComponent.FTPServer">
            <summary>
            Direccion IP o Nombre del servidor remoto de ftp.- 
            </summary>
        </member>
        <member name="P:Fwk.Net.Ftp.FTPComponent.FTPPort">
            <summary>
            Puerto ftp del server remoto, en general es 21
            </summary>
        </member>
        <member name="P:Fwk.Net.Ftp.FTPComponent.Debug">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Configuration.DatabaseConfigManager">
            <summary>
            Configuration manager con origen en base de datos SQL Server.-
            </summary>
        </member>
        <member name="M:Fwk.Configuration.DatabaseConfigManager.GetProperty(System.String,System.String,System.String)">
            <summary>
            Obtiene una propiedad determinada de un archivo de configuracion .-
            </summary>
            <param name="configProvider">Proveedor de configuuracion</param>
            <param name="pGroupName">Nombre del grupo donde se encuentra la propiedad</param>
            <param name="pPropertyName">Nombre de la propiedad a obtener</param>
            <returns>String con la propiedad</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.Configuration.DatabaseConfigManager.GetConfigurationFile(Fwk.ConfigSection.ConfigProviderElement)" -->
        <member name="M:Fwk.Configuration.DatabaseConfigManager.GetGroup(System.String,System.String)">
            <summary>
            Obtiene un grupo determinado en el archivo de configuracion
            </summary>
            <param name="configProvider">Proveedor de configuuracion</param>
            <param name="pGroupName">Nombre del grupo</param>
            <returns>Hashtable con los grupos contenidos en el archivo de configuracion</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.DatabaseConfigManager.GetConfig(Fwk.ConfigSection.ConfigProviderElement,System.String)">
            <summary>
            Devuelve el contenido completo de un archivo de configuración
            dado el nombre de archivo.
            </summary>
            <param name="provider">Nombre de archivo</param>
            <param name="pCnnStringName">Nombre de cadena de coneccion.</param>
            <returns><see cref="T:Fwk.Configuration.Common.ConfigurationFile"/></returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.DatabaseConfigManager.GetFromDatabase(System.String,System.String)">
            <summary>
            Busca en la base de datos el archivo de configuracion
            </summary>
            <param name="pFileName">Nombre de archivo.</param>
            <param name="pCnnStringName">Nombre de cadena de coneccion.</param>
            <returns><see cref="T:Fwk.Configuration.Common.ConfigurationFile"/></returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.DatabaseConfigManager.AddProperty(Fwk.ConfigSection.ConfigProviderElement,Fwk.Configuration.Common.Key,System.String)">
            <summary>
            
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="key"></param>
            <param name="groupName">Nombre del gruop que contiene las propiedades</param>
        </member>
        <member name="M:Fwk.Configuration.DatabaseConfigManager.AddGroup(Fwk.ConfigSection.ConfigProviderElement,Fwk.Configuration.Common.Group)">
            <summary>
            
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="group">Grupo</param>
        </member>
        <member name="M:Fwk.Configuration.DatabaseConfigManager.RemoveProperty(Fwk.ConfigSection.ConfigProviderElement,System.String,System.String)">
            <summary>
            Elimina una porpiedad de la cinfuguracion
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="groupName">Gupo al que pertenece la propiedad</param>
            <param name="propertyName">Nombre de la propiedad</param>
        </member>
        <member name="M:Fwk.Configuration.DatabaseConfigManager.RemoveGroup(Fwk.ConfigSection.ConfigProviderElement,System.String)">
            <summary>
            Elimina un grupo de la configuracion
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="groupName">Nombre del grupo a eliminar</param>
        </member>
        <member name="M:Fwk.Configuration.DatabaseConfigManager.ChangeGroupName(Fwk.ConfigSection.ConfigProviderElement,System.String,System.String)">
            <summary>
            Cambia el nombre de un grupo.-
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="groupName">Nombre del grupo</param>
            <param name="newGroupName">Nuevo nombre del grupo</param>
        </member>
        <member name="M:Fwk.Configuration.DatabaseConfigManager.ChangeProperty(Fwk.ConfigSection.ConfigProviderElement,System.String,Fwk.Configuration.Common.Key,System.String)">
            <summary>
            Realiza cambios a una propiedad.-
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="groupName">Nombre del grupo donde se encuentra la propiedad</param>
            <param name="property">Propiedad actualizada. Este objeto puede contener todos sus valores modifcados</param>
            <param name="propertyName">Nombre de la propiedad que se mofdifico.- Este valor es el original sin modificacion</param>
        </member>
        <member name="M:Fwk.Configuration.DatabaseConfigManager.RefreshConfigurationFile(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            Vuelve a cargar el archivo de configuracion desde el origen de datos
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Exceptions.FunctionalExceptionEnums">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FunctionalExceptionEnums.MsgErrorInConfigMannagerNotFount">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.AssemblyExplorer.AssemblyClassCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.AssemblyExplorer.AssemblyClassCollection.Add(Fwk.AssemblyExplorer.AssemblyClass)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:Fwk.AssemblyExplorer.AssemblyClassCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.AssemblyExplorer.AssemblyClass">
            <summary>
            Summary description for AssemblyType.
            </summary>
        </member>
        <member name="T:Fwk.HelperFunctions.DataFunctions">
            <summary>
            Funciones de datos.
            </summary>
            <Date>12-05-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.GetDataSetFromXml(System.String)">
            <summary>
            Obtiene un System.DataSet desde un xml
            </summary>
            <param name="strXml">Cadena con formato xml</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.ValueGet(System.Data.DataSet,System.String,System.String)">
            <summary>
            Obtiene el valor de un campo del primer registro de un
            dataset en formato string. 
            </summary>
            <param name="pDataSet">El DataSet.</param>
            <param name="pTableName">El nombre de la tabla.</param>
            <param name="pColumnName">El nombre de la columna.</param>
            <returns>String.</returns>
            <Date>12-05-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.ValueGet(System.Data.DataSet,System.String,System.Int32)">
            <summary>
            Obtiene el valor de un campo del primer registro de un
            dataset en formato string. 
            </summary>
            <param name="pDataSet">El DataSet.</param>
            <param name="pTableName">El nombre de la tabla.</param>
            <param name="pColumnIndex">El nombre de la columna.</param>
            <returns>String.</returns>
            <Date>12-05-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.ValueGet(System.Data.DataSet,System.String,System.Int32,System.String)">
            <summary>
            Obtiene el valor de un campo de un registro de un
            dataset en formato string.
            </summary>
            <param name="pDataSet">El DataSet.</param>
            <param name="pTableName">El nombre de la tabla.</param>
            <param name="pRowIndex">El indice del registro.</param>
            <param name="pColumnName">El nombre de la columna.</param>
            <returns>String.</returns>
            <Date>12-05-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.ValueGet(System.Data.DataSet,System.String,System.Int32,System.Int32)">
            <summary>
            Obtiene el valor de un campo de un registro de un
            dataset en formato string.
            </summary>
            <param name="pDataSet">El DataSet.</param>
            <param name="pTableName">El nombre de la tabla.</param>
            <param name="pRowIndex">El indice del registro.</param>
            <param name="pColumnIndex">El indice de la columna.</param>
            <returns>String.</returns>
            <Date>12-05-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.ValueGet(System.Data.DataTable,System.String)">
            <summary>
            Obtiene el valor de un campo del primer registro de un
            datatable en formato string.
            </summary>
            <param name="pDataTable">El nombre del DataTable.</param>
            <param name="pColumnName">El nombre de la columna.</param>
            <returns>String.</returns>
            <Date>12-05-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.ValueGet(System.Data.DataTable,System.Int32)">
            <summary>
            Obtiene el valor de un campo del primer registro de un
            datatable en formato string.
            </summary>
            <param name="pDataTable">El nombre del DataTable.</param>
            <param name="pColumnIndex">El indice de la columna.</param>
            <returns>String.</returns>
            <Date>12-05-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.ValueGet(System.Data.DataTable,System.Int32,System.String)">
            <summary>
            Obtiene el valor de un campo de un registro de un
            datatable en formato string.
            </summary>
            <param name="pDataTable">El DataTable.</param>
            <param name="pRowIndex">El indice del registro.</param>
            <param name="pColumnName">El nombre de la columna.</param>
            <returns>String.</returns>
            <Date>12-05-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.ValueGet(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            Obtiene el valor de un campo de un registro de un
            datatable en formato string.
            </summary>
            <param name="pDataTable">El DataTable.</param>
            <param name="pRowIndex">El indice del registro.</param>
            <param name="pColumnIndex">El indice de la columna.</param>
            <returns>String.</returns>
            <Date>12-05-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.IsEmpty(System.Data.DataSet)">
            <summary>
            Indica si un DataSet tiene datos.
            </summary>
            <param name="pDataSet">DataSet a verificar.</param>
            <returns>True: El DataSet tiene datos. False: El DataSet NO tiene datos.</returns>
            <Date>12-05-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.IsEmpty(System.Data.DataTable)">
            <summary>
            Indica si un DataTable tiene datos.
            </summary>
            <param name="pDataTable">DataTable a verificar.</param>
            <returns>True: El DataSet tiene datos. False: El DataSet NO tiene datos.</returns>
            <Date>12-05-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.CompareArrays(System.Object[],System.Object[])">
            <summary>
            Compara dos arrays de valores, devolviendo true si sus posiciones son equivalentes.
            </summary>
            <param name="pLast">Primer array.</param>
            <param name="pCurrent">Segundo array.</param>
            <returns>bool.</returns>
            <Date>29-03-2006</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.ColumnEqual(System.Object,System.Object)">
            <summary>
            Compara dos valores para verificar si ambos son iguales.
            Tambien compara DBNULL.Value.
            </summary>
            <param name="A">Objeto "A".</param>
            <param name="B">Objeto "B".</param>
            <returns></returns>
            <Date>23-06-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.SelectDistinct(System.String,System.Data.DataTable,System.String)">
            <summary>
            Devuelve un DataTable con valores unicos de una columna de otro DataTable.
            </summary>
            <param name="TableName">Nombre de la tabla de devolver.</param>
            <param name="SourceTable">Tabla de origen.</param>
            <param name="FieldName">Nombre del campo por el cual distinguir.</param>
            <returns>DataTable con valores unicos.</returns>
            <Date>29-03-2009</Date>
            <Author>moviedo</Author> 
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.SelectDistinct(System.String,System.Data.DataTable)">
            <summary>
            Devuelve un DataTable con valores unicos de una columnas de otro DataTable.
            </summary>
            <param name="pTableName">Nombre de la tabla a devolver.</param>
            <param name="pSourceTable">Tabla de origen.</param>
            <returns>DataTable con valores unicos.</returns>
            <Date>29-03-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.SelectDistinct(System.String,System.Data.DataTable,System.String[])">
            <summary>
            Devuelve un DataTable con valores unicos de columnas de otro DataTable.
            </summary>
            <param name="pTableName">Nombre de la tabla a devolver.</param>
            <param name="pSourceTable">Tabla de origen.</param>
            <param name="pFields">Nombres de campos para distinguir.</param>
            <returns>DataTable con valores unicos.</returns>
            <Date>29-03-2006</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.Union(System.String,System.Data.DataTable[],System.Boolean)">
            <summary>
            Retorna una tabla con la union del conjunto de tablas que se pasa como parametro.
            La nueva tabla union contendra las columnas producto de la interseccion de columnas de 
            las tablas que se pasan como parametro.
            </summary>
            <param name="pTableName">Nombre de la tabla producto de la union.-</param>
            <param name="pTables">Conjunto de tablas a unir.-</param>
            <param name="pApplyDistinct">Determina si se eliminan filas duplicadas o no.-</param>
            <returns>Tabla producto de la union.-</returns>
            <Date>29-03-2006</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.GetValueFromRow(System.Data.DataRow,System.String)">
            <summary>
            Obtiene el valor de un registro
            </summary>
            <param name="pRow">Fila de la cual obtener el registro</param>
            <param name="pField">Nombre del cuál obtener el valor</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.GetTopRows(System.Data.DataTable,System.Int32)">
            <summary>
            Obtiene las primeras n filas de un DataTable
            </summary>
            <param name="pDataTable">DataTable del cual vamos a obtener las primeras n filas</param>
            <param name="pRowsQuantity">Cantidad de filas a obtener</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.XmlNamespaceRemove(System.Data.DataSet,System.String)">
            <summary>
            Quita el namespace del Xml del esquema de un dataset.
            </summary>
            <param name="pDataSet">DataSet.</param>
            <param name="pServiceName">Nombre de un servicio.</param>
            <returns>Xml sin el namespace.</returns>
            <Date>12-07-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DataFunctions.XmlNamespaceRemove(System.String,System.String)">
            <summary>
            Quita el namespace del Xml de un esquema.
            </summary>
            <param name="pXML">Xml del esquema.</param>
            <param name="pServiceName">Nombre de un servicio.</param>
            <returns>Xml sin el namespace.</returns>
            <Date>12-07-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="T:Fwk.ConfigSection.WrapperProviderSection">
            <summary>
            Sección 'WrapperProviderSection' del archivo de configuración App.Config.
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.WrapperProviderSection.#ctor">
            <summary>
            Constructor de ConfigProviderSection.
            </summary>
        </member>
        <member name="M:Fwk.ConfigSection.WrapperProviderSection.GetProvider(System.String)">
            <summary>
            Retorna un proveedor determinado
            </summary>
            <param name="name">nombre del proveedor configurado.</param>
            <returns>Provider (Rule).</returns>
        </member>
        <member name="P:Fwk.ConfigSection.WrapperProviderSection.Providers">
            <summary>
            Colección de proveedores de coneccion. 
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.WrapperProviderSection.DefaultProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.LoggingSection">
            <summary>
            Sección 'Logging' del archivo de configuración App.Config.
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.LoggingSection.#ctor">
            <summary>
            Constructor de LoggingSection.
            </summary>
        </member>
        <member name="M:Fwk.ConfigSection.LoggingSection.GetRuleByEventType(Fwk.Logging.EventType)">
            <summary>
            Retorna la regla (Rule) que corresponde a determinado
            tipo de evento.
            </summary>
            <param name="pEventType">Tipo de evento.</param>
            <returns>Regla (Rule).</returns>
        </member>
        <member name="P:Fwk.ConfigSection.LoggingSection.Rules">
            <summary>
            Colección de reglas de logueo. 
            </summary>
        </member>
        <member name="T:Fwk.Caching.FwkIsolatedStorageScope">
            <summary>
                Enumerates the levels of isolated storage scope that are supported by System.IO.IsolatedStorage.IsolatedStorage.
            </summary>
        </member>
        <member name="F:Fwk.Caching.FwkIsolatedStorageScope.MachineStoreForApplication">
             <summary>
            Obtains machine-scoped isolated storage corresponding to the calling code's
            application identity.
             </summary>
        </member>
        <member name="F:Fwk.Caching.FwkIsolatedStorageScope.MachineStoreForAssembly">
            <summary>
            Obtains machine-scoped isolated storage corresponding to the application
            domain identity and the assembly identity.
            </summary>
        </member>
        <member name="F:Fwk.Caching.FwkIsolatedStorageScope.MachineStoreForDomain">
             <summary>
            Obtains machine-scoped isolated storage corresponding to the application
            domain identity and the assembly identity. 
             </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Fwk.Caching.FwkIsolatedStorageScope.UserStoreForApplication" -->
        <member name="F:Fwk.Caching.FwkIsolatedStorageScope.UserStoreForAssembly">
             <summary>
            Obtains user-scoped isolated storage corresponding to the calling code's
            assembly identity. 
             </summary>
        </member>
        <member name="F:Fwk.Caching.FwkIsolatedStorageScope.UserStoreForDomain">
             <summary>
            Obtains user-scoped isolated storage corresponding to the application domain
            identity and assembly identity. 
             </summary>
        </member>
        <member name="T:Fwk.Caching.FwkSimpleStorageBase`1">
            <summary>
            Clase base que permite un almacenamiento en el IsolatedStorageFile.- 
            Esta clase no nececita configuracion de cache de ningun tipo.-
            </summary>
            <example>
            <para>Crear una clase que herede de FwkSimpleStorageBase para el caso en que deseemos implementar 
            una inicializacion personalizada de nuestro objeto.-
            </para> 
            <code>
            <![CDATA[
                internal class MyStorageSetting : FwkSimpleStorageBase<Cliente>
                {
                    public override void InitObject()
                    {
                        _Object = new Store();
                        _Object.Nombre = "Pepe";
                    }
                }
            ]]>
            </code>   
            <para>Usar directamente la clase FwkSimpleStorageBase 
            </para> 
            <code>
            <![CDATA[
            
                public FwkSimpleStorageBase<Cliente> _Store = new FwkSimpleStorageBase<Cliente>();
            ]]>
            </code>    
            </example>
        </member>
        <member name="M:Fwk.Caching.FwkSimpleStorageBase`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Caching.FwkSimpleStorageBase`1.#ctor(Fwk.Caching.FwkIsolatedStorageScope)">
            <summary>
            
            </summary>
            <param name="scope"></param>
        </member>
        <member name="M:Fwk.Caching.FwkSimpleStorageBase`1.Load">
            <summary>
            Permite cargar el almacenammiento del objeto.. Este metodo llama al metodo virtual InitObject.
            Generalmente se usa desde el Load del formulario
            <example>
            <code>
            <![CDATA[
            private void Form1_Load(object sender, EventArgs e)
            {
                _Storage.Load();
                txtNombre.Text= _Storage.StorageObject.Nombre;
            ]]>
            </code>    
            </example>
            </summary>
        </member>
        <member name="M:Fwk.Caching.FwkSimpleStorageBase`1.Get_IsolatedStorageFile">
             <summary>
            Domain 	    Isolated Storage Scoped to Application Domain Identity
            Assembly 	Isolated Storage Scoped to Identity of the Assembly
            Roaming 	The Isolated Storage Can roam.
            Application 	Isolated Storage Scoped to the Application
            
             User 	Isolated Storage scoped to User Identity
            Machine 	Isolated Storage Scoped to the Machine
             </summary>
        </member>
        <member name="M:Fwk.Caching.FwkSimpleStorageBase`1.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Caching.FwkSimpleStorageBase`1.Save">
            <summary>
            Generalmente utilizado desde un FormClosing 
            <example>
            <code>
            <![CDATA[
            private void Form1_FormClosing(object sender, FormClosingEventArgs e)
            {
                 _Storage.StorageObject.Nombre = txtNombre.Text;
                _Storage.Save();
                
            ]]>
            </code>    
            </example>
            </summary>
        </member>
        <member name="M:Fwk.Caching.FwkSimpleStorageBase`1.DeSerializeDictionary(System.IO.FileStream)">
            <summary>
            Deserializa: Convierte el stream a una lista de coneciones
            </summary>
            <param name="fs"></param>
            <param name="dict"></param>
        </member>
        <member name="M:Fwk.Caching.FwkSimpleStorageBase`1.SerializeDictionary(System.IO.FileStream,`0)">
            <summary>
            Serializa en binario el la lista de conecciones
            </summary>
            <param name="fs"></param>
            <param name="dict"></param>
        </member>
        <member name="M:Fwk.Caching.FwkSimpleStorageBase`1.InitObject">
            <summary>
            Metodo que permite inicializar el objeto de manera personalizada al sobreescribirlo.- Si no se sobreescribe
            el meto solo realiza una instancioacion de <see cref="!:T"/>
            </summary>
        </member>
        <member name="P:Fwk.Caching.FwkSimpleStorageBase`1.StorageObject">
            <summary>
            Reprecenta el objeto serializable que se almacena en la cache del sistema
            </summary>
        </member>
        <member name="T:Fwk.Net.Ftp.DowloadAllDirHandlerAsync">
            <summary>
            Componente cliente FTP 
            </summary>
            <param name="dir">Directorio remoto</param>
            <param name="destPath">Directorio local</param>
            <param name="recursive">Aplica recursividad para descarga</param>
            <param name="ex">Error en caso de que se porduzca</param>
        </member>
        <member name="T:Fwk.Params.ParamsController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Params.ParamsController.SearchParams(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
             Busca parametros por id 
             La cadena de conexión se obtiene del atributo appId del wrapper 
            </summary>
            <param name="wrapperProviderName">Proveedor que espesifica el despachador de servicios</param>
            <param name="paramTypeId"></param>
            <param name="parentId"></param>
            <param name="userId"></param>
            <returns>Lista de registros de la tabla param</returns>
        </member>
        <member name="M:Fwk.Params.ParamsController.DeleteParam(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
             Elimina un parametros
             La cadena de conexión se obtiene del atributo appId del wrapper
            </summary>
            <param name="wrapperProviderName">Proveedor que espesifica el despachador de servicios</param>
            <param name="paramId"></param>
            <param name="parentId"></param>
            <param name="userId"></param>
        </member>
        <member name="M:Fwk.Params.ParamsController.CreateParam(System.String,Fwk.Params.BE.ParamBE)">
            <summary>
             La cadena de conexión se obtiene del atributo appId del wrapper
            </summary>
            <param name="wrapperProviderName">Proveedor que espesifica el despachador de servicios</param>
            <param name="pParam"></param>
        </member>
        <member name="T:Fwk.Configuration.SVC.GetFwkConfigurationService">
            <summary>
            Obtiene info del usuario :
            
            intenta obtener el usuario en la membership 
            </summary>
        </member>
        <member name="P:Fwk.Configuration.ISVC.Param.ConfigProviderName">
            <summary>
            Nombe del provedor de configuracion del lado del Dispatcher
            </summary>
        </member>
        <member name="T:Fwk.Bases.SearchEntityArg">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.SearchEntityArg.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="pProperty">Nombre de la propiedad a buscar</param>
            <param name="pValue">Valor con el que se va a comparar</param>
        </member>
        <member name="M:Fwk.Bases.SearchEntityArg.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pProperty">Nombre de la propiedad a buscar</param>
            <param name="pValue">Valor con el que se va a comparar</param>
            <param name="pIgnoreCaseForValue">Indica </param>
        </member>
        <member name="P:Fwk.Bases.SearchEntityArg.NameProperty">
            <summary>
            Nombre de la propiedad donde se buscará.
            </summary>
        </member>
        <member name="P:Fwk.Bases.SearchEntityArg.Value">
            <summary>
            Valor a buscar dentro de la Propiedad. 
            </summary>
        </member>
        <member name="P:Fwk.Bases.SearchEntityArg.IgnoreCaseForValue">
            <summary>
            Indica si se tienen en cuenta las mayusculas y minusculas par ala comparacion del valor
            </summary>
        </member>
        <member name="T:Fwk.Logging.Logger">
            <summary>
            Clase que administra la escritura de logs de eventos (Event) 
            en el destino (Target) correspondiente.
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Logging.Logger.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="pAppId"></param>
        </member>
        <member name="M:Fwk.Logging.Logger.#ctor">
            <summary>
            Constructor de Logger.
            </summary>
        </member>
        <member name="M:Fwk.Logging.Logger.Information(System.String,System.String)">
            <summary>
            Escribe el log de un evento de tipo 'Information'.
            </summary>
            <param name="pSource">Origen del evento.</param>
            <param name="pText">Mensaje descriptivo del evento.</param>        
        </member>
        <member name="M:Fwk.Logging.Logger.Warning(System.String,System.String)">
            <summary>
            Escribe el log de un evento de tipo 'Warning'.
            </summary>
            <param name="pSource">Origen del evento.</param>
            <param name="pText">Mensaje descriptivo del evento.</param>        
        </member>
        <member name="M:Fwk.Logging.Logger.Error(System.String,System.String)">
            <summary>
            Escribe el log de un evento de tipo 'Error'.
            </summary>
            <param name="pSource">Origen del evento.</param>
            <param name="pText">Mensaje descriptivo del evento.</param>        
        </member>
        <member name="M:Fwk.Logging.Logger.Audit(System.String,System.String,System.String,System.String)">
            <summary>
            Escribe el log de un evento de tipo 'audit'.
            </summary>
            <param name="pSource">Origen del evento.</param>
            <param name="pText">Mensaje descriptivo del evento.</param>
            <param name="pUserName">Nombre usuario.</param>
             <param name="pMachine">Nombre usuario.</param>
        </member>
        <member name="M:Fwk.Logging.Logger.WriteLog(Fwk.Logging.Event)">
            <summary>
            Escribe un log
            </summary>
            <param name="pEvent"></param>
        </member>
        <member name="T:Fwk.Exceptions.ProcessConnectionsException">
            <summary>
            Clase especializada en procesar erroes producidos en el Wrappper de aplicaciones
            cuando un cliente intenta conectarce a un Despachador de servicios.-
            </summary>
        </member>
        <member name="M:Fwk.Exceptions.ProcessConnectionsException.Process(System.Exception,System.String)">
            <summary>
            Procesa la exepcion que se produce al intentar conectarce al cliente y genera un 
            ServiceError el cual es insertado al Response.-
            </summary>
            <param name="pEx">Exepcion</param>
            <param name="pURL">Direccion web del servicio web donde esta el despachador de servicio</param>
            <returns>ServiceError <see cref="T:Fwk.Exceptions.ServiceError"/></returns>
        </member>
        <member name="M:Fwk.Exceptions.ProcessConnectionsException.Process(System.Exception)">
            <summary>
            Procesa la exepcion que se produce al intentar conectarce al cliente y genera un 
            ServiceError el cual es insertado al Response.-
            </summary>
            <param name="pEx">Exepcion</param>
            <returns>ServiceError <see cref="T:Fwk.Exceptions.ServiceError"/></returns>
        </member>
        <member name="M:Fwk.Exceptions.ProcessConnectionsException.ProcessDefaultException(System.Exception)">
            <summary>
            Procesa las exepciones no detectadas <see cref="T:System.Web.Services.Protocols.SoapException"/>
            </summary>
            <param name="pException">Exception por defecto producida <see cref="T:System.Web.Services.Protocols.SoapException"/></param>
            <returns>ServiceError <see cref="T:Fwk.Exceptions.ServiceError"/></returns>
        </member>
        <member name="M:Fwk.Exceptions.ProcessConnectionsException.ProcessSoapException(System.Web.Services.Protocols.SoapException)">
            <summary>
            Procesa las exepciones tipo SoapException <see cref="T:System.Web.Services.Protocols.SoapException"/>
            </summary>
            <param name="soapException">SoapException <see cref="T:System.Web.Services.Protocols.SoapException"/></param>
            <returns>ServiceError <see cref="T:Fwk.Exceptions.ServiceError"/></returns>
        </member>
        <member name="M:Fwk.Exceptions.ProcessConnectionsException.ProcessConfigurationException(System.Configuration.ConfigurationException)">
            <summary>
            
            </summary>
            <param name="configurationErrorsException"></param>
            <returns>ServiceError <see cref="T:Fwk.Exceptions.ServiceError"/></returns>
        </member>
        <member name="M:Fwk.Exceptions.ProcessConnectionsException.ProcessWebException(System.Net.WebException,System.String)">
            <summary>
            
            </summary>
            <param name="pWebException"></param>
            <param name="pURL"></param>
            <returns>ServiceError <see cref="T:Fwk.Exceptions.ServiceError"/></returns>
        </member>
        <member name="M:Fwk.Exceptions.ProcessConnectionsException.GetGenericStatusCode(System.Net.WebException)">
            <summary>
            Obtiene el menzage general para un grupo de codigos de estados, estos pueden ser:
            3xx - Redirección
                  El explorador cliente debe realizar más acciones para cumplir la solicitud. 
                  Por ejemplo, puede que el explorador tenga que solicitar una página diferente en el servidor o repetir la solicitud 
                  utilizando un servidor proxy.
            4xx - Error del cliente 
                  Se produce un error, que parece causado por el cliente. Por ejemplo, el cliente puede solicitar una página que no existe o quizás no proporcione información de autenticación válida.
            5xx - Error del servidor
                  El servidor no puede terminar la solicitud porque encuentra un error.
            </summary>
            <param name="pWebException"></param>
            <returns>String </returns>
        </member>
        <member name="T:Fwk.Caching.CacheRefreshAction">
            <summary>
            Clase que Determina la Accion a seguir cuando Cache hace Refresh.
            </summary>
        </member>
        <member name="M:Fwk.Caching.CacheRefreshAction.#ctor(System.Boolean,System.String)">
            <summary>
            Constructor de la Clase
            </summary>
            <param name="pRefreshOnExpired"></param>
            <param name="pCacheManager"></param>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="M:Fwk.Caching.CacheRefreshAction.Refresh(System.String,System.Object,Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemRemovedReason)">
            <summary>
            En caso que se use: Metodo que es llamado cuando se refresca Cache y determina que hacer con los objetos
            que están cacheados cuando los mismo Expiran o Cuando surge algún otro motivo para remover el mismo.
            </summary>
            <param name="removedKey"></param>
            <param name="expiredValue"></param>
            <param name="removalReason"></param>
            <author>moviedo</author>
            <date>29/11/2007</date>
        </member>
        <member name="P:Fwk.Caching.CacheRefreshAction.RefreshOnExpired">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.AssemblyExplorer.AssemblyParameterCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.AssemblyExplorer.AssemblyParameterCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.AssemblyExplorer.AssemblyParameter">
            <summary>
            Summary description for AssemblyParameter.
            </summary>
        </member>
        <member name="T:Fwk.Bases.ContextInformation">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.ContextInformation.SetProviderName(System.String)">
            <summary>
            
            </summary>
            <param name="ProviderName"></param>
        </member>
        <member name="P:Fwk.Bases.ContextInformation.ProviderNameWithCultureInfo">
            <summary>
            Identifica la cultura con la q trabajara el servicio. Util para manejo de decimales 
            Idiomas llamadas a config mannager con texto o mensajes en un determinado idioma.-
            etc.-
            Generalmente este valor es establecido por la Fachada de sevicios en el framework y  es 
            obtenido de la configuracion de Service Metadata Provider. El provider se determina a traves de ExecuteService(providerName,....)
            Si DefaultCulture es distinto e null se utilizara el mismo, de lo contrario se utilizara el obtenido de la configuracion de Service Metadata Provider.
            </summary>
        </member>
        <member name="P:Fwk.Bases.ContextInformation.HostName">
            <summary>
            Indica el host que inicio la peticion del servicio .-
            </summary>
        </member>
        <member name="P:Fwk.Bases.ContextInformation.HostTime">
            <summary>
            Indica fecha y hora de inicio o fin del servicio del lado del Cliente.-
            Para un Request  -->  fecha y hora de inicio del lado del cliente (horario de inicio desde el host).-
            Para un Response -->  fecha y hora de finalizacion del lado del cliente (horario de llegada al host)-
            </summary>
        </member>
        <member name="P:Fwk.Bases.ContextInformation.ServerName">
            <summary>
            Indica el server que atendio el servicio servicio .-
            </summary>
        </member>
        <member name="P:Fwk.Bases.ContextInformation.ServerTime">
            <summary>
            Indica fecha y hora de inicio o fin del servicio del lado del Servidor o despachador de servicio.-
            Para un Request  -->  fecha y hora de inicio del lado del server .-
            Para un Response -->  fecha y hora de finalizacion del lado del server .-
            </summary>
        </member>
        <member name="P:Fwk.Bases.ContextInformation.UserName">
            <summary>
            Indica el usuario logueado en el host que inicio el servicio.-
            </summary>
        </member>
        <member name="P:Fwk.Bases.ContextInformation.UserId">
            <summary>
            Indica el identificador usuario logueado en el host que inicio el servicio.-
            Aqui puede alojar valores de cualquier tipo (guid,int, string, etc) llevados a String.-
            </summary>
        </member>
        <member name="P:Fwk.Bases.ContextInformation.AppId">
            <summary>
            Identificador de aplicaion,cliente donde este instalado o para quien este instalado.-
            Utiil para identificar logs, discriminar cadenas de conecciones, etc.-
            </summary>
        </member>
        <member name="P:Fwk.Bases.ContextInformation.ProviderName">
            <summary>
            Si el run time se encuentra en BackEnd representa el nombre del ServiceMetadataProviderName 
            Si el run time se encuentra en FrontEnd (controller o componentes win 32) representa Wrapper Provider Name
            </summary>
        </member>
        <member name="T:Fwk.Bases.ClientServiceBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.ClientServiceBase.ExecuteService``2(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="providerName">Nombre del proveedor de la metadata de servicio</param>
            <param name="pRequest">Request con datos de entrada para la  ejecución del servicio.</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.ClientServiceBase.ExecuteService``2(``0)">
            <summary>
            Ejecuta un servicio de negocio.
            </summary>
            <param name="pRequest">Request con datos de entrada para la  ejecución del servicio.</param>
            <returns>Dataset con datos de respuesta del servicio.</returns>
            <date>2007-08-24T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.ClientServiceBase.GetAllServices(System.String)">
            <summary>
            Recupera la configuración de todos los servicios de negocio.
            </summary>
            <param name="providerName">Nombre del proveedor de la metadata de servicio</param>
            <returns>Lista de configuraciones de servicios de negocio.</returns>
            <date>2006-02-10T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.ClientServiceBase.GetServiceConfiguration(System.String,System.String)">
            <summary>
            Recupera la configuración de un servicio de negocio.
            </summary>
            <param name="providerName">Nombre del proveedor de la metadata de servicio</param>
            <param name="pServiceName">Nombre del servicio.</param>
            <returns>configuración del servicio de negocio.</returns>
            <date>2006-02-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.ClientServiceBase.SetServiceConfiguration(System.String,System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Actualiza la configuración de un servicio de negocio.
            </summary>
            <param name="providerName">Nombre del proveedor de la metadata de servicio</param>
            <param name="pServiceName">Nombre del servicio de negocio.</param>
            <param name="pServiceConfiguration">configuración del servicio de negocio.</param>
            <date>2006-02-10T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.ClientServiceBase.AddServiceConfiguration(System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Almacena la configuración de un nuevo servicio de negocio.
            </summary>
            <param name="providerName">Nombre del proveedor de la metadata de servicio</param>
            <param name="pServiceConfiguration">configuración del servicio de negocio.</param>
            <date>2006-02-13T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.ClientServiceBase.DeleteServiceConfiguration(System.String,System.String)">
            <summary>
            Elimina la configuración de un servicio de negocio.
            </summary>
            <param name="providerName">Nombre del proveedor de la metadata de servicio</param>
            <param name="pServiceName">Nombre del servicio.</param>
            <date>2006-02-13T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.ClientServiceBase.GetAllApplicationsId(System.String)">
            <summary>
            Obtiene una lista de todas las aplicaciones configuradas en el origen de datos configurado por el 
            proveedor
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.ClientServiceBase.GetProviderInfo(System.String)">
            <summary>
            Obtiene info del proveedor de metadata
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Bases.IServiceWrapper">
            <summary>
            Interfaz para clases que funcionan como wrappers de interfaces de servicio.
            </summary>
            <remarks>
            Las clases que implementen esta interfaz deben ser capaces de solicitar la  ejecución de servicios de negocio a través de métodos de la intefaz de servicio utilizada, y devolver el resultado del mismo como resultado de la  ejecución.
            </remarks>
            <date>2007-06-23T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceWrapper.ExecuteService(System.String,System.String)">
            <summary>
            Ejecuta un servicio de negocio.
            </summary>
            <param name="pServiceName">Nombre del servicio.</param>
            <param name="pData">XML con datos de entrada para la  ejecución del servicio.</param>
            <returns>XML con datos de salida del servicio.</returns>
            <date>2007-06-23T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceWrapper.CheckServiceAvailability">
            <summary>
            Si retorna StringEmpty 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.IServiceWrapper.ExecuteService``2(``0)">
            <summary>
            Ejecuta un servicio de negocio.
            </summary>
            <param name="req">Clase que imlementa la interfaz IServiceContract datos de entrada para la  ejecución del servicio.</param>
            <returns>Clase que imlementa la interfaz IServiceContract con datos de respuesta del servicio.</returns>
            <date>2007-06-23T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceWrapper.GetServiceConfiguration(System.String)">
            <summary>
            Recupera la configuración de un servicio de negocio.
            </summary>
            <param name="pServiceName">Nombre del servicio.</param>
            <returns>configuración del servicio de negocio.</returns>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceWrapper.GetAllServices">
            <summary>
            Recupera la configuración de todos los servicios de negocio.
            </summary>
            <returns>Lista de configuraciones de servicios de negocio.</returns>
            <date>2010-08-10T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceWrapper.SetServiceConfiguration(System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Actualiza la configuración de un servicio de negocio.
            </summary>
            <param name="pServiceName">Nombre del servicio a actualizar.</param>
            <param name="pServiceConfiguration">configuración del servicio de negocio.</param>
            <date>2010-08-10T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceWrapper.AddServiceConfiguration(Fwk.Bases.ServiceConfiguration)">
            <summary>
            Almacena la configuración de un nuevo servicio de negocio.
            </summary>
            <param name="pServiceConfiguration">configuración del servicio de negocio.</param>
            <date>2008-04-13T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceWrapper.DeleteServiceConfiguration(System.String)">
            <summary>
            Elimina la configuración de un servicio de negocio.
            </summary>
            <param name="pServiceName">Nombre del servicio.</param>
            <date>2008-04-13T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.IServiceWrapper.GetAllApplicationsId">
            <summary>
            Obtiene una lista de todas las aplicaciones configuradas en el origen de datos configurado por el 
            proveedor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.IServiceWrapper.GetProviderInfo(System.String)">
            <summary>
            Obtiene info del proveedor de metadata
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.IServiceWrapper.RetriveDispatcherInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Fwk.Bases.IServiceWrapper.ProviderName">
            <summary>
            Proveedor del wrapper. Este valor debe coincidir con un proveedor de metadata en el dispatcher
            </summary>
        </member>
        <member name="P:Fwk.Bases.IServiceWrapper.SourceInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Bases.IServiceWrapper.ServiceMetadataProviderName">
            <summary>
            identificador del proveedor de metadata en el server.Nombre proveedor de megtadatos de servicios en el dispatcher
            </summary>
        </member>
        <member name="P:Fwk.Bases.IServiceWrapper.ConfigProviderNameWithCultureInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Bases.IServiceWrapper.AppId">
            <summary>
            identificador de aplicacion
            </summary>
        </member>
        <member name="T:Fwk.Bases.DummyContract">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.HelperFunctions.SerializationFunctions">
            <summary>
            Esta clase ayuda con los problemas que tienen que ver
            con la serialización de objetos.
            </summary>
        </member>
        <member name="M:Fwk.HelperFunctions.SerializationFunctions.SerializeToBin(System.String,System.Object)">
            <summary>
            Serializa un objeto a un archivo binario.
            </summary>
            <param name="fileName">Ruta del archivo en el cual depositar los bytes</param>
            <param name="objToSerialize">Objeto en memoria a transformar en bytes</param>
        </member>
        <member name="M:Fwk.HelperFunctions.SerializationFunctions.DeserializeFromBin(System.String)">
            <summary>
            Deserializa un objeto a partir del contenido de un archivo binario
            </summary>
            <param name="fileName">Archivo desde donde toma los bytes que se
            encuentran serializados</param>
            <returns>objeto deserializado</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.SerializationFunctions.SerializeToXml(System.Object,System.Data.DataSet@)">
            <summary>
            
            </summary>
            <param name="pObject"></param>
            <param name="pDataSet"></param>
        </member>
        <member name="M:Fwk.HelperFunctions.SerializationFunctions.Serialize(System.Object,System.Data.DataSet@)">
            <summary>
            
            </summary>
            <param name="pObj"></param>
            <param name="pDataSet"></param>
        </member>
        <member name="M:Fwk.HelperFunctions.SerializationFunctions.Deserialize(System.Type,System.Data.DataSet,System.String)">
            <summary>
            
            </summary>
            <param name="pObjType"></param>
            <param name="pDataSet"></param>
            <param name="pTableName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.SerializationFunctions.Deserialize(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="pObjType"></param>
            <param name="pXmlData"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.SerializationFunctions.Deserialize(System.Type,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="pObjType"></param>
            <param name="pXmlData"></param>
            <param name="pXPath"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.SerializationFunctions.DeserializeFromXml(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="pTipo"></param>
            <param name="pXml"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.SerializationFunctions.SerializeToXml(System.Object)">
            <summary>
            
            </summary>
            <param name="pObj"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.SerializationFunctions.Serialize(System.Object)">
            <summary>
            Serializa un objeto.
            </summary>
            <param name="pObj">Objeto a serializar</param>
            <returns>Representación en XML del objeto</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.SerializationFunctions.Serialize(System.Object,System.Boolean)">
            <summary>
            Serializa un objeto.
            </summary>
            <param name="pObj">Objeto a serializar</param>
            <param name="pRemoveDeclaration">Indica si se debe remover el nodo de declaración</param>
            <returns>Representación en XML del objeto</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.SerializationFunctions.GetStream(System.Object)">
            <summary>
            Devuelve un stream formado a partir del objeto enviado por parámetro.
            </summary>
            <param name="pObj">Objeto para extraer stream</param>
            <returns>MemoryStream</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.SerializationFunctions.ReplaseTypeNameForSerialization(System.Type,System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="pTypeNameOld"></param>
            <param name="pTypeNameNew"></param>
            <param name="pXml"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.HelperFunctions.ReflectionFunctions">
            <summary>
            Clase que permite obtener informacion de los assemblies atraves de reflection.-
            </summary>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.GetAssemblyNameFromAssemblyString(System.String)">
            <summary>
            
            </summary>
            <param name="pAssemblyString"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.CreateInstanceLoadFile(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="pAssemblyString"></param>
            <param name="pPatch"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.CreateInstance(System.String)">
            <summary>
            Crea instancia de un objetos a partir de de su nombre largo
            
            </summary>
            <param name="pAssemblyString">String separado por comas "Type.FullName,Assembly.Name"</param>
            <returns>Instancia del objeto</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.CreateInstance(System.String,System.Object[])">
            <summary>
            El método CreateInstance crea una instancia de un tipo definido en un ensamblado llamando al constructor que mejor coincida con los argumentos especificados. Si no se ha especificado 
            ningún argumento, se llama al constructor que no toma parámetros, es decir, el constructor predeterminado.
            </summary>
            <param name="pAssemblyString">String separado por comas "Type.FullName,Assembly.Name"</param>
            <param name="constructorParams">An array of arguments that match in number, order, and type the parameters of the constructor to invoke. 
            If args is an empty array or nullNothingnullptra null reference (Nothing in Visual Basic), 
            the constructor that takes no parameters (the default constructor) is invoked. </param>
            <returns>Instancia del objeto</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.CreateInstanceLoad(System.String,System.String)">
            <summary>
            Crea instancia de un objetos a partir de de su nombre largo y sus parametros.
            Efectua load assembly
            </summary>
            <param name="pClassName">Nombre de la clase (Type.FullName)</param>
            <param name="pAssemblyName">Nombre del ensamblado (Assembly.Name)</param>
            <returns>Instancia del objeto</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.CreateInstance``1">
            <summary>
            Crea un objeto de tipo T
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.CreateInstance``1(System.Object[])">
            <summary>
            Crea un objeto de tipo T
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.HelperFunctions.ReflectionFunctions.CreateInstanceLoad(System.String,System.String,System.Object[])" -->
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.ExtractTypeInformation(System.String,System.String@,System.String@)">
            <summary>
            
            </summary>
            <param name="pAssemblyString"></param>
            <param name="pClassName"></param>
            <param name="pAssembly"></param>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.CreateType(System.String)">
            <summary>
            Crea un typo cualquiera 
            </summary>
            <param name="pAssemblyString">String separado por comas "Type.FullName,Assembly.Name"</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.CreateType(System.String,System.String)">
            <summary>
            Crea un typo cualquiera 
            </summary>
            <param name="pClassName">Type.FullName</param>
            <param name="pAssemblyName">Assembly.Name</param>
            <returns>Type</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.CreateTypeFromFile(System.String,System.String)">
            <summary>
            Crea un tipo dinamicamente a partir del nombre un archivo.-
            </summary>
            <param name="pAssemblyString">Concatenacion de ClassName + , + AssemblyName</param>
            <param name="pPath">Ruta del archivo</param>
            <returns>Type definido por ClassName</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.GetPropertieValue``1(System.Object,System.String)">
            <summary>
            Retorna el valor de una propiedad.-
            Generalmente utilizado cuando el nombre de la propiedad es generada dinamicamente y no se sabe en 
            desing time que propiedad sera utilizada de un objeto.-
            </summary>
            <typeparam name="T">Tipo de la propiedad a retornar</typeparam>
            <param name="pSourceObject">Objeto que contiene la propiedad</param>
            <param name="pPropertyName">Nombre de la propiedad</param>
            <returns>Valor de la propiedad</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.GetPropertieValue(System.Object,System.String)">
            <param name="pSourceObject">Objeto que contiene la propiedad</param>
            <param name="pPropertyName">Nombre de la propiedad</param>
            <returns>Valor de la propiedad en string</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.GetPropertieType(System.Object,System.String)">
            <summary>
            Retorna el tipo de la propiedad
            </summary>
            <param name="pSourceObject">Objeto que contiene la propiedad</param>
            <param name="pPropertyName">Nombre de la propiedad</param>
            <returns>Tipo</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.GetPropertieValue``1(System.Type,System.String)">
            <summary>
            Retorna el valor de una propiedad.-
            Generalmente utilizado cuando el nombre de la propiedad es generada dinamicamente y no se sabe en 
            desing time que propiedad sera utilizada de un objeto.-
            </summary>
            <typeparam name="T">Tipo de la propiedad a retornar</typeparam>
            <param name="pSourceObject">Objeto que contiene la propiedad</param>
            <param name="pPropertyName">Nombre de la propiedad</param>
            <returns>Valor de la propiedad</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.ReflectionFunctions.MapProperties``1(``0,``0@)">
            <summary>
             Efectua un mapeo de todas las propiedades de un objeto a otro 
             el mapeo solo lo hace de los atributos del tipo T, esto es debido a que 
             puede pasarce como T una interfaz y los objetos source y destino ser de distinto tipo
             
            </summary>
            <typeparam name="T"></typeparam>
            <param name="spurce"></param>
            <param name="target"></param>
        </member>
        <member name="T:Fwk.HelperFunctions.RandomPassword">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.HelperFunctions.RandomPassword.Generate">
            <summary>
            Generar una password aleatoria.
            </summary>
        </member>
        <member name="M:Fwk.HelperFunctions.RandomPassword.Generate(System.Int32)">
            <summary>
            Generar una password aleatoria de una exacta longitud.
            </summary>
        </member>
        <member name="M:Fwk.HelperFunctions.RandomPassword.Generate(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Generar una password aleatoria.
            </summary>
            <param name="pMinLength">Longitud Mínima</param>
            <param name="pMaxLength">Longitud Máxima</param>
            <param name="pCharsSpecial">Pernite la generación incluyendo caracteres especiales</param>
            <param name="pCharsNumeric">Pernite la generación incluyendo caracteres numéricos</param>
            <param name="pLowerUpper">Pernite la generación indicando : 0 - Indistinto, 1 - Lower, 2 - Upper</param>
        </member>
        <member name="M:Fwk.HelperFunctions.RandomPassword.ComputeHash(System.String)">
            <summary>
            
            </summary>
            <param name="pPassword"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.RandomPassword.ArmarGrupoCaracteres(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Agrupa caracteres por tipo.
            </summary>
            <param name="pCharsSpecial">Pernite la generación incluyendo caracteres especiales</param>
            <param name="pCharsNumeric">Pernite la generación incluyendo caracteres numéricos</param>
            <param name="pLowerUpper">Pernite la generación indicando : 0 - Indistinto, 1 - Lower, 2 - Upper</param>
        </member>
        <member name="T:Fwk.Caching.CacheSettings">
            <summary>
            Clase Utilizada para Deserializar la configuracion para Cada Servicio Cacheable.
            </summary>
            <author>moviedo</author>
            <date>29/11/2007
            </date>
        </member>
        <member name="P:Fwk.Caching.CacheSettings.CacheOnServerSide">
            <summary>
            Bandera que indica si los resultados de la ejecucion del servicio seran primero intentados
            otener desde la cache del lado del servidor
            </summary>
            <example>
            <para>
            El siguiente ejemplo determina que el servicio se levantara de la cache del 
            lado del despachador de servicio.-
            </para>
            <code>
            BuscarPaisesClienteRequest req = new BuscarPaisesRequest();
            req.ResponseCacheId = req.ServiceName + "RRHH";
            req.CacheOnServerSide = true;
            </code>|
            </example>
        </member>
        <member name="P:Fwk.Caching.CacheSettings.CacheOnClientSide">
            <summary>
            Bandera que indica si los resultados de la ejecucion del servicio seran primero intentados
            otener desde la cache del lado del cliente
            </summary>
            <example>
            <para>
            El siguiente ejemplo determina que el servicio se levantara de la cache del 
            lado del despachador de servicio.-
            </para>
            <code>
            BuscarPaisesClienteRequest req = new BuscarPaisesRequest();
            req.CacheSettings.ResponseCacheId = req.ServiceName + "RRHH";
            req.CacheSettings.CacheOnClientSide = true;
            </code>
            </example>
        </member>
        <member name="P:Fwk.Caching.CacheSettings.ResponseCacheId">
            <summary>
            Identificador de la cache para el caso de que el servicio este cacheado 
            tanto en el lado del cliente como en el servidor.
            Puede proporcionarle cualquier identificador de cache. Por ejemplo:
            1- El mismo nombre del servicio
            2 - Nombre de servicio mas fecha
            2 - Nombre de servicio mas Dominio/ Area donde corra el cliente o servidor 
             
            Si este valor es = Empty() y alguna de las CacheOnClientSide o CacheOnServerSide estan establecidas en true
            se asume el Id de la cache del servicio con el nombre del servicio.-
            </summary>
            <example>
            <para>
            El siguiente ejemplo determina que el servicio se levantara de la cache del 
            lado del despachador de servicio.-
            </para>
            <coede>
            BuscarPaisesClienteRequest req = new BuscarPaisesRequest();
            req.ResponseCacheId = req.ServiceName + "RRHH";
            req.CacheOnServerSide = true;
            </coede>
            </example>
        </member>
        <member name="P:Fwk.Caching.CacheSettings.Priority">
            <summary>
            Especifica la prioridad relativa de los elementos almacenados en el objeto Cache.  <see cref="T:Microsoft.Practices.EnterpriseLibrary.Caching.CacheItemPriority"/>
            AboveNormal Los elementos de la memoria caché con este nivel de prioridad tienen menos posibilidades de ser eliminados cuando el servidor libera la memoria del sistema que aquéllos que tengan asignada una prioridad Normal.  
            BelowNormal Los elementos de la memoria caché con este nivel de prioridad tienen más posibilidad de ser eliminados cuando el servidor libera la memoria del sistema que aquéllos que tengan asignada una prioridad Normal.  
            Default El valor predeterminado para la prioridad de un elemento de la memoria caché es Normal.  
            High Los elementos de la memoria caché con este nivel de prioridad son los que menos posibilidades tienen de ser eliminados de la memoria caché cuando el servidor libera la memoria del sistema.  
            Low Los elementos de la memoria caché con este nivel de prioridad son los que más posibilidades tienen de ser eliminados de la memoria caché cuando el servidor libera la memoria del sistema.  
            Normal Los elementos de la memoria caché con este nivel de prioridad podrán ser eliminados de la memoria caché cuando el servidor libere la memoria del sistema sólo después de eliminarse los elementos con la prioridad Low o BelowNormal. Éste es el valor predeterminado.  
            NotRemovable Los elementos de la memoria caché con este nivel de prioridad no se eliminarán de la memoria caché cuando el servidor libere la memoria del sistema. Sin embargo, los elementos con este nivel de prioridad se quitan junto con otros elementos en función de la fecha de caducidad absoluta o variable del elemento.   
             </summary>
        </member>
        <member name="P:Fwk.Caching.CacheSettings.TimeMeasures">
            <summary>
            Medida de tiempo q se usa para reprecentar ExpirationTime 
            pueden ser dias, horas, minutos, segundos
            Por defecto es FromDays.-
            </summary>
        </member>
        <member name="P:Fwk.Caching.CacheSettings.ExpirationTime">
            <summary>
            Valor que indica la cantidad de dias que la cache espera a ser eliminada del cache repository.-
            Se pueden utilizar fracciones de dia.-
            </summary>
        </member>
        <member name="P:Fwk.Caching.CacheSettings.CacheManagerName">
             <summary>
             Determina el nombre de la configuracion de la cache
             </summary>
             <example>
             <code>
             <![CDATA[
               <cachingConfiguration defaultCacheManager="ConfigurationIsolatedManager">
                 <cacheManagers>
                     <add expirationPollFrequencyInSeconds="60" 
                         maximumElementsInCacheBeforeScavenging="1000"
                         numberToRemoveWhenScavenging="60" 
                         backingStoreName="NullStorage"
                         name="ConfigurationManager" />
             ]]>
             </code> 
            </example>
        </member>
        <member name="P:Fwk.Caching.CacheSettings.RefreshOnExpired">
            <summary>
            Indica si el tiempo de expitracion del item cacheado se renuevan al volver a consultarlos
            </summary>
        </member>
        <member name="T:Fwk.HelperFunctions.FormatFunctions">
            <summary>
            Funciones para realizar conversiones.
            </summary>
            <Date>12-07-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.FormatFunctions.ObjectToBytes(System.Object)">
            <summary>
            Convierte un valor de tipo object en un array de bytes.
            </summary>
            <param name="pObjectToConvert">El objeto a convertir</param>
            <returns>Un array de bytes</returns>
            <Date>12-05-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.FormatFunctions.ToDDMMYYYY(System.DateTime,System.Char)">
            <summary>
            Aplica a una fecha el formato "DDMMYYYY" y la retorna.
            </summary>
            <param name="pDate">Fecha a formatear.</param>
            <param name="pSeparator">Separador a emplear en el nuevo formato.</param>
            <returns>Texto con la fecha formateada.</returns>
            <Date>12-07-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.FormatFunctions.ToDDMMYYYY(System.String,System.Char)">
            <summary>
            Aplica a una fecha el formato "DDMMYYYY" y la retorna.
            </summary>
            <param name="pDate">Fecha a formatear.</param>
            <param name="pSeparator">Separador a emplear en el nuevo formato.</param>
            <returns>Texto con la fecha formateada.</returns>
            <Date>12-07-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.FormatFunctions.ToYYYYMMDD(System.String,System.Char)">
            <summary>
            Aplica a una fecha el formato "YYYYMMDD" y la retorna.
            </summary>
            <param name="pDate">Texto de la fecha a formatear.</param>
            <param name="pSeparator">Separador a emplear en el nuevo formato.</param>
            <returns>Texto con la fecha formateada.</returns>
            <Date>12-07-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.FormatFunctions.ToYYYYMMDD(System.DateTime,System.Char)">
            <summary>
            Aplica a una fecha el formato "YYYYMMDD" y la retorna.
            </summary>
            <param name="pDate">Fecha a formatear.</param>
            <param name="pSeparator">Separador a emplear en el nuevo formato.</param>
            <returns>Texto con la fecha formateada.</returns>
            <Date>12-07-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.FormatFunctions.IntDefault(System.String)">
            <summary>
            Retorna el valor por defecto de un entero
            cuando el texto es vacio.
            </summary>
            <param name="pValue">Valor a analizar.</param>
            <returns>Valor por defecto.</returns>
            <Date>12-07-2009</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.FormatFunctions.FormatearRUT(System.String)">
            <summary>
            Devuelve el Rut pasado por parametro formateado con los separadores de mil.
            </summary>
            <param name="pRUT"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.FormatFunctions.GetCharacterFromNumber(System.Int32)">
            <summary>
            Obtiene la letra correspondiente al numero enviado 
            Solo valido para enteros entre 
            </summary>
            <param name="pCode"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.FormatFunctions.GetStringBuilderWhitSeparator``1(System.Collections.Generic.IList{``0},System.Char,System.String)">
            <summary>
            Retorna un array de string sobre una propiedad de la clase en cuestion
            </summary>
            <param name="propertieName">Propiedad del objeto sobre la q se quiere reliazar el array de strings</param>
            <param name="list">lista de enumeraciones</param>
            <param name="separator">Caracter separadors</param>
            <returns>EJ "1,2,3"</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.FormatFunctions.GetStringBuilderWhitSeparator``1(System.Collections.Generic.IList{``0},System.Char)">
            <summary>
            Retorna un array de string sobre una propiedad de la clase en cuestion.-
            Realiza Convert.ToString(t) de cada uno de los elementos de la lista tipo T;
            </summary>
            <typeparam name="T">Tipo del elemento en la lista</typeparam>
            <param name="list">Lsita de elementos T</param>
            <param name="separator">Caracter separadors</param>
            <returns>EJ "Lu,Ma,Mi"</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.FormatFunctions.GetStringBuilderWhitSeparatorFromEnum(System.Collections.IList,System.Char)">
            <summary>
            Retorna un array de string separados por "separator" de una enumeracion.- 
            Utiliza la porcion nunmerica de la enumeracion.- es decir su valor numerico no el valor de nombre
            </summary>
            <param name="list">lista de enumeraciones</param>
            <param name="separator">Caracter separadors</param>
            <returns>EJ "1,2,3"</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.HelperFunctions.FormatFunctions.GetStringBuilderWhitSeparatorFromEnum(System.Collections.Generic.IList{System.Int32},System.Char)" -->
        <member name="T:Fwk.HelperFunctions.EMailFunctions">
            <summary>
            Funciones para envío de correo electrúnico.
            </summary>
            <Date>2006-04-18T00:00:00</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.EMailFunctions.SendMail(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String[],System.Net.ICredentialsByHost)">
            <summary>
            Envia un mensaje de correo electronico utilizando credenciales enviadas por parámetros.
            </summary>
            <param name="pFrom">Remitente.</param>
            <param name="pTo">Destinatario.</param>
            <param name="pCC">Destinatario con copia carbonica.</param>
            <param name="pBCC">Destinatario con copia carbonica oculta.</param>
            <param name="pSubject">Asunto.</param>
            <param name="pBody">Cuerpo del mail.</param>
            <param name="pBodyHtml">Indica si el contenido es html o no.</param>
            <param name="pAttachments">Ruta de archivos adjuntos.</param>
            <param name="pCredentials">Credenciales para autenticar el usuario que envía el mail.</param>
            <Date>2006-04-18T00:00:00</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.EMailFunctions.SendMail(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String[])">
            <summary>
            Envia un mensaje de correo electronico utilizando las credenciales especificadas en el .config de la aplicación.
            </summary>
            <remarks>
            Necesita que en el .config de la aplicación se especifique la configuración de servidor, puerto y credenciales.
            </remarks>
            <param name="pFrom">Remitente.</param>
            <param name="pTo">Destinatario.</param>
            <param name="pCC">Destinatario con copia carbonica.</param>
            <param name="pBCC">Destinatario con copia carbonica oculta.</param>
            <param name="pSubject">Asunto.</param>
            <param name="pBody">Cuerpo del mail.</param>
            <param name="pBodyHtml">Indica si el contenido es html o no.</param>
            <param name="pAttachments">Ruta de archivos adjuntos.</param>
            <example>
            Este ejemplo muestra como completar el .config.
            <code>
            <configuration>
            	<system.net>
            		<mailSettings>
            			<smtp deliveryMethod="network">
            			<network host="localhost" port="25" defaultCredentials="true"/>
            			</smtp>
            		</mailSettings>
            	</system.net>
            </configuration>
            </code>
            </example>
            <Date>2006-04-18T00:00:00</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.EMailFunctions.SendMail(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Envia un mensaje de correo electronico.
            </summary>
            <param name="pFrom">From.</param>
            <param name="pTo">To.</param>
            <param name="pSubject">Subject.</param>
            <param name="pBody">Body.</param>
            <param name="pBodyHtml">BodyHtml</param>
            <Date>2006-04-18T00:00:00</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.EMailFunctions.SendMail(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Envia un mensaje de correo electronico con copias.
            </summary>
            <param name="pFrom">From.</param>
            <param name="pTo">To.</param>
            <param name="pCC">CC.</param>
            <param name="pBCC">BCC.</param>
            <param name="pSubject">Subject.</param>
            <param name="pBody">Body.</param>
            <param name="pBodyHtml">BodyHtml</param>
            <Date>2006-04-18T00:00:00</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.EMailFunctions.MailAddressValidate(System.String)">
            <summary>
            Valida una direccion de correo electronico.
            </summary>
            <param name="pMailAddress">Direccion de correo electronico.</param>
            <returns>Indica si la validacion fue exitosa.</returns>
        </member>
        <member name="T:Fwk.Bases.ModificationHistory">
            <summary>
            Administra las pilas Undo y Redo
            Cada entrada en la pila UNDO es un cambio de propiedad
            </summary>
        </member>
        <member name="M:Fwk.Bases.ModificationHistory.#ctor(System.Object)">
            <summary>
            El constructor nececita la referencia al objeto padre que se subscriba al manejador Undo.-
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Fwk.Bases.ModificationHistory.Store(System.String,System.Object)">
            <summary>
            El objeto padre llamara este metodo par aalmacenar el valor de la propiedad 
            antes de que esta sufra algun cambio.-
            </summary>
            <param name="propName">nombre de la propiedad</param>
            <param name="propVal">El valor anterior al cambio</param>
        </member>
        <member name="M:Fwk.Bases.ModificationHistory.Undo">
            <summary>
            Obtiene el valor existente de la propiedad y lo inserta en Redo.-
            Retira la ultima propiedad de del objeto en la pila Undo (esto es para establecerlo como el valor vigente de la propiedad)
            Establece al objeto padre el valor de la propiedad que esta en la pila undo
            </summary>
        </member>
        <member name="M:Fwk.Bases.ModificationHistory.Redo">
            <summary>
            Redo
            </summary>
        </member>
        <member name="M:Fwk.Bases.ModificationHistory.AddHistoryToAllProperties(System.String[])">
            <summary>
            Establece una marca de historia para todas las propiedades a las que se le decea guarrdar su trazabilidad
            </summary>
            <param name="pHistoryProperties"></param>
        </member>
        <member name="P:Fwk.Bases.ModificationHistory.CanUndo">
            <summary>
            Si la pila Undo tiene alcgun elemento retorna TRUE.
            </summary>
        </member>
        <member name="P:Fwk.Bases.ModificationHistory.CanRedo">
            <summary>
             Si la pila REDO tiene alcgun elemento retorna TRUE.
            </summary>
        </member>
        <member name="M:Fwk.Mail.Imaservices.FetchNewMessage">
            <summary>
            No implementado
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Mail.Imaservices.GetUnseen">
            <summary>
            Obtiene la cantidad de mensajes sin leer
            </summary>
            <returns>Valor entero mayor que cero, representa la cantidad de mensajes sin leer</returns>
        </member>
        <member name="T:Fwk.ConfigSection.MailAgentSection">
            <summary>
            Sección 'MailAgentSection' del archivo de configuración App.Config.
            </summary>
            <date>2009/08/31</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.MailAgentSection.#ctor">
            <summary>
            Constructor de MailAgentSection.
            </summary>
        </member>
        <member name="M:Fwk.ConfigSection.MailAgentSection.GetProvider(System.String)">
            <summary>
            Retorna un proveedor determinado
            </summary>
            <param name="pEventType">Tipo de evento.</param>
            <returns>Provider (Rule).</returns>
        </member>
        <member name="P:Fwk.ConfigSection.MailAgentSection.Providers">
            <summary>
            Colección de proveedores de configuracion de mail agents. 
            </summary>
        </member>
        <member name="T:Fwk.Net.Ftp.Util">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Net.Ftp.Util.storage">
            <summary>
            cache de <see cref="T:Fwk.Net.SocketClient"/> 
            </summary>
        </member>
        <member name="M:Fwk.Net.Ftp.Util.ParseUnixDirList(System.String)">
            <summary>
            Convierte una linea retornada atraves del comando FTP LIST a un objeto tipificado.-
            Ejemplo: linea proveniente de un server Unix
            -rwxrwxr--   1 andrw    video     3621773 Jan 31  2003 2FOR GOOD - You And Me.MP3
            </summary>
            <param name="fileLine">Es una linea que retorna de las que retorna el comando LIST</param>
        </member>
        <member name="T:Fwk.Net.Ftp.ServerFileData">
            <summary>
            Representa una linea retornada por el comando LIST. 
            </summary>
        </member>
        <member name="M:Fwk.Net.Ftp.ServerFileData.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Net.Ftp.ServerFileData.IsDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Net.Ftp.ServerFileData.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Net.Ftp.ServerFileData.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Net.Ftp.ServerFileData.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Net.Ftp.ServerFileData.Permission">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Net.Ftp.ServerFileData.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Net.Ftp.ServerFileData.Group">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Net.SocketClient">
            <summary>
            Clase generica que representa la data de coneccion a cualquier socket
            </summary>
        </member>
        <member name="P:Fwk.Net.SocketClient.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Net.SocketClient.User">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Net.SocketClient.Server">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Net.SocketClient.Port">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Params.BE.ParamBE.#ctor">
            <summary>
            Empty Constructor
            </summary>
        </member>
        <member name="P:Fwk.Params.BE.ParamBE.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.BE.ParamBE.ParamId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.BE.ParamBE.Culture">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.BE.ParamBE.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.BE.ParamBE.ParamTypeId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.BE.ParamBE.ParentId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.BE.ParamBE.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.BE.ParamBE.Enabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.BE.ParamBE.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Params.BE.ParamTypeBE.#ctor">
            <summary>
            Empty Constructor
            </summary>
        </member>
        <member name="P:Fwk.Params.BE.ParamTypeBE.ParamTypeId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.BE.ParamTypeBE.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.BE.ParamTypeBE.ParamTypeRefId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.BE.ParamTypeBE.Description">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.ConfigProviderSection">
            <summary>
            Sección 'ConfigProvider' del archivo de configuración App.Config.
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.ConfigProviderSection.#ctor">
            <summary>
            Constructor de ConfigProviderSection.
            </summary>
        </member>
        <member name="M:Fwk.ConfigSection.ConfigProviderSection.GetProvider(System.String)">
            <summary>
            Retorna un proveedor determinado
            </summary>
            <param name="name">nombre del proveedor configurado.</param>
            <returns>Provider (Rule).</returns>
        </member>
        <member name="M:Fwk.ConfigSection.ConfigProviderSection.AddNewProvider(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            Agrega un nuevo proveedor si este no existe
            </summary>
            <param name="newProvider"></param>
        </member>
        <member name="P:Fwk.ConfigSection.ConfigProviderSection.Providers">
            <summary>
            Colección de proveedores de coneccion. 
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.ConfigProviderSection.DefaultProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.ConfigProviderType">
            <summary>
            Enumeracion que defino los tipos de 
            </summary>
        </member>
        <member name="F:Fwk.ConfigSection.ConfigProviderType.local">
            <summary>
            Lee de un archivo local, puede ser carpeta compartida en la red.-
            </summary>
        </member>
        <member name="F:Fwk.ConfigSection.ConfigProviderType.servicewrapper">
            <summary>
            Consulta por medio de un servicio del dispatcher del framework
            puede ser web service o remoting , depende del wrapper configurado
            </summary>
        </member>
        <member name="F:Fwk.ConfigSection.ConfigProviderType.sqldatabase">
            <summary>
            Consulta directa,mente a una base de datos
            </summary>
        </member>
        <member name="T:Fwk.Bases.FwkHistoryAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.FwkHistoryAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="pName"></param>
        </member>
        <member name="P:Fwk.Bases.FwkHistoryAttribute.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Exceptions.FwkExceptionTypes">
            <summary>
            Enumeracion que reprecenta los tipos de excepciones de 
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FwkExceptionTypes.TechnicalException">
            <summary>
            TechnicalException
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FwkExceptionTypes.FunctionalException">
            <summary>
            FunctionalException
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FwkExceptionTypes.DispatcherTecnicalExeption">
            <summary>
            DispatcherTecnicalExeption
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FwkExceptionTypes.WrapperConnectionsException">
            <summary>
            WrapperConnectionsException
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FwkExceptionTypes.BlockingFunctionalException">
            <summary>
            BlockingFunctionalException
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.FwkExceptionTypes.OtherException">
            <summary>
            OtherException
            </summary>
        </member>
        <member name="T:Fwk.Exceptions.ExceptionHelper">
            <summary>
            Clase que procesa excepciones.
            </summary>
            <Author>moviedo</Author>
            <Date>28-12-2005</Date>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.GetServiceError(System.Exception)">
            <summary>
            Realiza el mapeo de una Exception a un ServiceError
            </summary>
            <param name="ex">Exception</param>
            <returns><see cref="T:Fwk.Exceptions.ServiceError"/></returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.ProcessException(System.Exception)">
            <summary>
            Procesa la excepcion original y la retorna.
            </summary>
            <param name="pexception">Excepcion original.</param>
            <returns>Excepcion procesada.</returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.ProcessException(Fwk.Exceptions.ServiceError)">
            <summary>
            Procesa la excepcion original y la retorna.
            </summary>
            <param name="err"><see cref="T:Fwk.Exceptions.ServiceError"/></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.ProcessException(System.Exception,System.Object)">
            <summary>
            Procesa la excepcion original y la retorna.
            Si es SqlException Number >= 50000 retorna --> FunctionalException
            Si la excepcion es FunctionalException, o TechnicalException directamente las retorna
            Si es cualquier otro tipo de Excepcion, retorna una TechnicalException
            </summary>
            <param name="exception">Excepcion original.</param>
            <param name="sourceObject">Origen.</param>
            <returns>Excepcion procesada.</returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.ToSoapException(Fwk.Exceptions.FunctionalException,System.String)">
            <summary>
            <para>Transforma una excepción funcional en una SoapException,
            para poder serializarla a través de Soap.</para>
            </summary>
            <param name="pfex"></param>
            <param name="pabosoluteURI"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.IsFunctionalException(System.Web.Services.Protocols.SoapException)">
            <summary>
            Determina si una SoapException es de tipo funcional.
            </summary>
            <param name="psoapEx">SoapException.</param>
            <returns>Verdadero si la SoapException es de tipo funcional.</returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.IsFunctionalException(System.Runtime.Remoting.RemotingException)">
            <summary>
            Determina si una RemotingException es de tipo funcional.
            </summary>
            <param name="premEx">RemotingException.</param>
            <returns>Verdadero si la RemotingException es de tipo funcional.</returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.GetAllMessageException(System.Exception)">
            <summary>
            Genera un string con el contenido del InnerException .-
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.GetAllMessageException(System.Exception[])">
            <summary>
            Genera un string con el contenido del InnerException .-
            </summary>
            <param name="pExceptions">Array de excepciones</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.GetFwkExceptionTypes(System.Exception)">
            <summary>
            Retorna el tipo <see cref="T:Fwk.Exceptions.FwkExceptionTypes"/> de acuerdo al ex.GetType() de la excepción poasada por parametro
            </summary>
            <param name="ex">excepción</param>
            <returns><see cref="T:Fwk.Exceptions.FwkExceptionTypes"/></returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.GetFwkExceptionTypesName(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.GetFwkErrorId(System.Exception)">
            <summary>
            Retorna el error id de la excepción
            </summary>
            <param name="ex">excepción</param>
            <returns>ErrorId de la excepción </returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.GetExceptionType(System.Web.Services.Protocols.SoapException)">
            <summary>
            Retorna el tipo de una SoapException.
            </summary>
            <param name="psoapEx">SoapException</param>
            <returns>Tipo de la SoapException.</returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.ProcessRaiseErrorMsg(System.String,System.String[]@)">
            <summary>
            Procesa los de SqlServer con el formato "Identificador_Mensaje;Param1;Param2...".
            </summary>
            <param name="pSqlEx">Mensaje de error con formato "Identificador_Mensaje;Param1;Param2...".</param>
            <param name="pParams">Parametros a reemplazar en el mensaje.</param>
            <returns>Mensaje de error.</returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.GetSoapException(System.Exception,System.String)">
            <summary>
            Obtiene una SoapException.
            </summary>
            <param name="ex">Excepcion original.</param>
            <param name="pabosoluteURI">URI.</param>
            <returns>SoapException.</returns>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.SetTechnicalException``1(Fwk.Exceptions.TechnicalException)">
            <summary>
            Establece los valores basicos de error producido en el componente ADHelper
            </summary>
            <param name="te"></param>
        </member>
        <member name="M:Fwk.Exceptions.ExceptionHelper.SetTechnicalException(Fwk.Exceptions.TechnicalException,System.Type)">
            <summary>
            Establece los valores basicos de error producido en el componente ADHelper
            </summary>
            <param name="te"></param>
        </member>
        <member name="T:Fwk.AssemblyExplorer.AssemblyMethodCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.AssemblyExplorer.AssemblyMethodCollection.Add(Fwk.AssemblyExplorer.AssemblyMethod)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.AssemblyExplorer.AssemblyMethodCollection.IndexOf(Fwk.AssemblyExplorer.AssemblyMethod)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.AssemblyExplorer.AssemblyMethodCollection.Insert(System.Int32,Fwk.AssemblyExplorer.AssemblyMethod)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Fwk.AssemblyExplorer.AssemblyMethodCollection.Remove(Fwk.AssemblyExplorer.AssemblyMethod)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Fwk.AssemblyExplorer.AssemblyMethodCollection.Contains(Fwk.AssemblyExplorer.AssemblyMethod)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:Fwk.AssemblyExplorer.AssemblyMethodCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.AssemblyExplorer.AssemblyMethod">
            <summary>
            Summary description for AssemblyMethod.
            </summary>
        </member>
        <member name="T:Fwk.Remoting.FwkRemoteObject">
            <summary>
            Clase remota que se ejecuta en el servicio remoting dispatcher
            </summary>
        </member>
        <member name="M:Fwk.Remoting.FwkRemoteObject.ExecuteService(System.String,Fwk.Bases.IServiceContract)">
            <summary>
            Ejecuta un servicio 
            </summary>
            <param name="providerName">Proveedor de metadata</param>
            <param name="pReq">Interfaz de contrato de servicio.- interfaz que implementan todos los request y responsees</param>
            <returns><see cref="T:Fwk.Bases.IServiceContract"/></returns>
        </member>
        <member name="M:Fwk.Remoting.FwkRemoteObject.ExecuteService(System.String,System.String,Fwk.Bases.IServiceContract)">
            <summary>
            Ejecuta un servicio 
            </summary>
            <param name="providerName">Proveedor de metadata</param>
            <param name="pServiceName">Nombre del servicio</param>
            <param name="pReq">Interfaz de contrato de servicio.- interfaz que implementan todos los request y responsees</param>
            <returns><see cref="T:Fwk.Bases.IServiceContract"/></returns>
        </member>
        <member name="M:Fwk.Remoting.FwkRemoteObject.CheckServiceAvailability">
            <summary>
            Chequea la disponibilidad del despachador de servicio
            </summary>
            <returns>Mensaje en caso de que el servicio no esté disponible</returns>
        </member>
        <member name="M:Fwk.Remoting.FwkRemoteObject.GetServiceConfiguration(System.String,System.String)">
            <summary>
            Obtiene la metadata de un servicio 
            </summary>
            <param name="providerName">Proveedor de metadata</param>
            <param name="pServiceName">Nombre del servicio</param>
            <returns><see cref="T:Fwk.Bases.ServiceConfiguration"/></returns>
        </member>
        <member name="M:Fwk.Remoting.FwkRemoteObject.GetServicesList(System.String)">
            <summary>
            Obtiene una lista de servicios
            </summary>
            <param name="providerName">Proveedor de metadata</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Remoting.FwkRemoteObject.SetServiceConfiguration(System.String,System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Actualiza la configuración de un servicio de negocio.
            </summary>
            <param name="providerName">Proveedor de metadata</param>
            <param name="pServiceName">Nombre del servicio a actualizar.</param>
            <param name="pServiceConfiguration">configuración del servicio de negocio.</param>
            <date>2006-02-10T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Remoting.FwkRemoteObject.AddServiceConfiguration(System.String,Fwk.Bases.ServiceConfiguration)">
            <summary>
            Almacena la configuración de un nuevo servicio de negocio.
            </summary>
            <param name="providerName">Proveedor de metadata</param>
            <param name="pServiceConfiguration">configuración del servicio de negocio.</param>
            <date>2006-02-13T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Remoting.FwkRemoteObject.DeleteServiceConfiguration(System.String,System.String)">
            <summary>
            Elimina la configuración de un servicio de negocio.
            </summary>
            <param name="providerName">Proveedor de metadata</param>
            <param name="pServiceName">Nombre del servicio.</param>
            <date>2006-02-13T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Remoting.FwkRemoteObject.GetAllApplicationsId(System.String)">
            <summary>
            Obtiene una lista de todas las aplicaciones configuradas en el origen de datos configurado por el 
            proveedor
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Remoting.FwkRemoteObject.GetProviderInfo(System.String)">
            <summary>
            Obtiene info del proveedor de metadata
            </summary>
            <param name="providerName">Nombre del proveedor de metadata de servicios.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Remoting.FwkRemoteObject.RetriveDispatcherInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Remoting.FwkRemoteObject.CreateSimpleFacade">
            <summary>
            Factory de SimpleFacade
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fwk.ServiceManagement.XmlServiceConfigurationManager">
            <summary>
            Manejador de configuración de servicios que trabaja con un archivo XML como repositorio de configuración.
            </summary>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ServiceManagement.XmlServiceConfigurationManager.GetAllServices(System.String)">
            <summary>
            Busca el archivo BPConfig y lo carga a _Services que es un ServiceConfigurationCollection
            </summary>
            <returns></returns>
            <date>2007-07-13T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ServiceManagement.XmlServiceConfigurationManager.LoadAllServices(System.String)">
             <summary>
             Busca el archivo  lo carga a _Services que es un ServiceConfigurationCollection
             </summary>
            <param name="xmlConfigFile"></param>
             <returns></returns>
             <date>2007-07-13T00:00:00</date>
             <author>moviedo</author>
        </member>
        <member name="M:Fwk.ServiceManagement.XmlServiceConfigurationManager.SetServiceConfiguration(System.String,Fwk.Bases.ServiceConfigurationCollection)">
            <summary>
            Guarda los cambios en el archivo
            </summary>
            <param name="xmlConfigFile">Nombre del archivo que contiene la metadata.</param>
            <param name="services">Repositorio de servicios enmemoria.</param>
        </member>
        <member name="M:Fwk.ServiceManagement.XmlServiceConfigurationManager.AddServiceConfiguration(Fwk.Bases.ServiceConfiguration,System.String,Fwk.Bases.ServiceConfigurationCollection)">
            <summary>
            Almacena la configuración de un nuevo servicio de negocio.
            </summary>
            <param name="pServiceConfiguration">configuración del servicio de negocio.</param>
            <param name="xmlConfigFile">Nombre del archivo que contiene la metadata.</param>
            <param name="services"></param>
        </member>
        <member name="M:Fwk.ServiceManagement.XmlServiceConfigurationManager.DeleteServiceConfiguration(System.String,Fwk.Bases.ServiceConfigurationCollection)">
            <summary>
            Elimina la configuración de un servicio de negocio.
            </summary>
            <param name="xmlConfigFile">Nombre del archivo que contiene la metadata.</param>
            <param name="services">Repositorio de servicios enmemoria.</param>
            <date>2010-08-11T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ServiceManagement.XmlServiceConfigurationManager.SaveServiceConfigFile(System.String,Fwk.Bases.ServiceConfigurationCollection)">
            <summary>
            Guarda los cambios en el archivo
            </summary>
            <param name="xmlConfigFile">Nombre del archivo que contiene la metadata.</param>
            <param name="services">Repositorio de servicios enmemoria.</param>
        </member>
        <member name="T:Fwk.Mail.Pop3.Pop3Exception">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.MailAgentFactory">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Fwk.Configuration.LocalFileConfigurationManager" -->
        <member name="M:Fwk.Configuration.LocalFileConfigurationManager.GetProperty(System.String,System.String,System.String)">
            <summary>
            Obtiene una propiedad determinada de un archivo de configuracion .-
            </summary>
            <param name="configProvider">Proveedor de configuuracion</param>
            <param name="pGroupName">Nombre del grupo donde se encuentra la propiedad</param>
            <param name="pPropertyName">Nombre de la propiedad a obtener</param>
            <returns>String con la propiedad</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.LocalFileConfigurationManager.GetConfigurationFile(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            Devuelve el contenido completo de un archivo de configuración
            dado el nombre de archivo.
            </summary>
            <param name="provider">Proveedor de configuración.</param>
            <returns>ConfigurationFile</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.LocalFileConfigurationManager.GetGroup(System.String,System.String)">
            <summary>
            Obtiene un grupo determinado en el archivo de configuracion
            </summary>
            <param name="configProvider">Proveedor de configuuracion</param>
            <param name="pGroupName"></param>
            <returns>Hashtable con los grupos contenidos en el archivo de configuracion</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.LocalFileConfigurationManager.RemoveConfigManager(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Fwk.Configuration.LocalFileConfigurationManager.GetConfig(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            Devuelve el contenido completo de un archivo de configuración
            dado el nombre de archivo.
            </summary>
            <param name="provider">Proveedor de configuración.</param>
            <returns>ConfigurationFile</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.LocalFileConfigurationManager.SetConfigurationFile(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            Obtiene un String con el contenido del archivo xml de configuracion. 
            Si este metodo es accedido desde el servicio web extrae la informacion de estado del archivo:
            Encrypt
            TTL
            ForceUpdate
            CurrentVersion
            BaseConfigFile
            Cacheable
            </summary>
            <param name="provider">Proveedor de configuración.</param>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.Configuration.LocalFileConfigurationManager.AddProperty(Fwk.ConfigSection.ConfigProviderElement,Fwk.Configuration.Common.Key,System.String)">
            <summary>
            
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="key"></param>
            <param name="groupName">Nombre del gruop que contiene las propiedades</param>
        </member>
        <member name="M:Fwk.Configuration.LocalFileConfigurationManager.AddGroup(Fwk.ConfigSection.ConfigProviderElement,Fwk.Configuration.Common.Group)">
            <summary>
            
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="group"></param>
        </member>
        <member name="M:Fwk.Configuration.LocalFileConfigurationManager.RemoveProperty(Fwk.ConfigSection.ConfigProviderElement,System.String,System.String)">
            <summary>
            Elimina una porpiedad de la cinfuguracion
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="groupName">Gupo al que pertenece la propiedad</param>
            <param name="propertyName">Nombre de la propiedad</param>
        </member>
        <member name="M:Fwk.Configuration.LocalFileConfigurationManager.RemoveGroup(Fwk.ConfigSection.ConfigProviderElement,System.String)">
            <summary>
            Elimina un grupo de la configuracion
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="groupName">Nombre del grupo a eliminar</param>
        </member>
        <member name="M:Fwk.Configuration.LocalFileConfigurationManager.ChangeGroupName(Fwk.ConfigSection.ConfigProviderElement,System.String,System.String)">
            <summary>
            Cambia el nombre de un grupo.-
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="groupName">Nombre del grupo</param>
            <param name="newGroupName">Nuevo nombre del grupo</param>
        </member>
        <member name="M:Fwk.Configuration.LocalFileConfigurationManager.ChangeProperty(Fwk.ConfigSection.ConfigProviderElement,System.String,Fwk.Configuration.Common.Key,System.String)">
            <summary>
            Realiza cambios a una propiedad.-
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <param name="groupName">Nombre del grupo donde se encuentra la propiedad</param>
            <param name="property">Propiedad actualizada. Este objeto puede contener todos sus valores modifcados</param>
            <param name="propertyName">Nombre de la propiedad que se mofdifico.- Este valor es el original sin modificacion</param>
        </member>
        <member name="M:Fwk.Configuration.LocalFileConfigurationManager.RefreshConfigurationFile(Fwk.ConfigSection.ConfigProviderElement)">
            <summary>
            Vuelve a cargar el archivo de configuracion desde el origen de datos
            </summary>
            <param name="provider">Proveedor de configuracion</param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Configuration.Common.Helper">
            <summary>
            Es una clase de ayuda que abstrae al sistema de configuracion de complejidades tecnicas reutilizables.
            </summary>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="T:Fwk.Params.Back.ParamDAC">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Params.Back.ParamDAC.RetriveByParams(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Retorna parametros por id, id padre, y filtra x vigentes o no vigentes
            </summary>
            <param name="paramTypeId">Tipo (gasto, clase, forma pago etc)</param>
            <param name="parentId">Relacion con otro param</param>
            <param name="enabled">Vigentes o no</param>
            <param name="culture">Cultura que se desea consultar: th-TH, en-US, es-AR etc etc</param>
            <param name="cnnStringName">Cadena de coneccion</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Params.Back.ParamDAC.RetriveParamType(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retorna registros de la tabla ParamType por parametros. Permite filtrar por padre y vigencia
            </summary>
            <param name="parentId">Id tipo parametro padre</param>
            <param name="enabled">Vigencia</param>
            <param name="cnnStringName">Cadena de conexion</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Params.Back.ParamDAC.Create(Fwk.Params.BE.ParamBE,System.Guid,System.String)">
            <summary>
            
            </summary>
            <param name="paramBE"></param>
            <param name="userId"></param>
            <param name="cnnStringName"></param>
        </member>
        <member name="M:Fwk.Params.Back.ParamDAC.Delete(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            
            </summary>
            <param name="paramId"></param>
            <param name="parentId"></param>
            <param name="cnnStringName"></param>
        </member>
        <member name="M:Fwk.Params.Back.ParamDAC.IsUsed(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Bases.IClientServiceBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Bases.IClientServiceBase.Wrapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Bases.IClientServiceBase.EntityResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Bases.IClientServiceBase.EntityParam">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Logging.Targets.FileTarget">
            <summary>
            Destino de tipo archivo .log.
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Logging.Targets.FileTarget.#ctor">
            <summary>
            Constructor de FileTarget.
            </summary>
        </member>
        <member name="M:Fwk.Logging.Targets.FileTarget.SearchByParam(Fwk.Logging.Event)">
            <summary>
            
            </summary>
            <param name="pEvent"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Logging.Targets.FileTarget.SearchByParam(Fwk.Logging.Event,System.DateTime)">
            <summary>
            
            </summary>
            <param name="pEvent"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Logging.Targets.FileTarget.Write(Fwk.Logging.Event)">
            <summary>
            Implementación de la escritura del log del evento
            en archivo .log.
            </summary>
            <param name="pEvent">Evento a loguear.</param>
        </member>
        <member name="M:Fwk.Logging.Targets.FileTarget.Remove(System.Collections.Generic.List{System.String})">
            <summary>
            No se implementa Remove en un evento proveniente un archivo comun.- Solo de xml y database
            </summary>
            <param name="eventIdList"></param>
        </member>
        <member name="M:Fwk.Logging.Targets.FileTarget.Remove(System.Collections.Generic.List{System.Guid})">
            <summary>
            No se implementa Remove en un evento proveniente un archivo comun.- Solo de xml y database
            </summary>
            <param name="eventIdList"></param>
        </member>
        <member name="M:Fwk.Logging.Targets.FileTarget.CheckOpenStreamWriter">
             <summary>
            Chequea si existe previamente el archiivo o no tambien el directorio de logs
             
             </summary>
             <returns>StreamWriter.</returns>
        </member>
        <member name="T:Fwk.Exceptions.TechnicalException">
            <summary>
            Excepcion Tecnica.
            </summary>
            <Author>moviedo</Author>
            <Date>28-12-2005</Date>
        </member>
        <member name="F:Fwk.Exceptions.TechnicalException.EXCEPTIONSMESSAGES_GROUPNAME">
            <summary>
            EXCEPTIONSMESSAGES_GROUPNAME.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.TechnicalException.TECHNICALMESSAGE_ATTRIBUTENAME">
            <summary>
            TECHNICALMESSAGE_ATTRIBUTENAME
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.TechnicalException.mAssembly">
            <summary>
            Assembly.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.TechnicalException.mNamespace">
            <summary>
            Namespace.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.TechnicalException.mClass">
            <summary>
            Class.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.TechnicalException.mMachine">
            <summary>
            Machine.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.TechnicalException.mUserName">
            <summary>
            UserName.
            </summary>
        </member>
        <member name="F:Fwk.Exceptions.TechnicalException.mMsg">
            <summary>
            Message.
            </summary>
        </member>
        <member name="M:Fwk.Exceptions.TechnicalException.#ctor">
            <summary>
            Excepcion tecnica.
            </summary>
        </member>
        <member name="M:Fwk.Exceptions.TechnicalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Excepcion tecnica.
            </summary>
            <param name="pinfo">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="pcontext">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Fwk.Exceptions.TechnicalException.#ctor(System.String)">
            <summary>
            Excepcion tecnica.
            </summary>
            <param name="pmsg">Mensaje del error.</param>
        </member>
        <member name="M:Fwk.Exceptions.TechnicalException.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Excepcion tecnica.
            </summary>
            <param name="passembly">Nombre del assembly donde se produce el error.</param>
            <param name="pnamespace">Namespace de la clase donde se produce el error.</param>
            <param name="pclass">Clase donde se produce el error.</param>
            <param name="pmachine">Equipo donde se produce el error.</param>
            <param name="puserName">Nombre de usuario.</param>
        </member>
        <member name="M:Fwk.Exceptions.TechnicalException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Excepcion tecnica.
            </summary>
            <param name="passembly">Nombre del assembly donde se produce el error.</param>
            <param name="pnamespace">Namespace de la clase donde se produce el error.</param>
            <param name="pclass">Clase donde se produce el error.</param>
            <param name="pmachine">Equipo donde se produce el error.</param>
            <param name="puserName">Nombre de usuario.</param>
            <param name="pmsg">Mensaje del error.</param>
        </member>
        <member name="M:Fwk.Exceptions.TechnicalException.#ctor(System.String,System.String,System.String,System.String,System.String,System.Exception)">
            <summary>
            Excepcion tecnica.
            </summary>
            <param name="passembly">Nombre del assembly donde se produce el error.</param>
            <param name="pnamespace">Namespace de la clase donde se produce el error.</param>
            <param name="pclass">Clase donde se produce el error.</param>
            <param name="pmachine">Equipo donde se produce el error.</param>
            <param name="puserName">Nombre de usuario.</param>
            <param name="pinner">Excepcion original.</param>
        </member>
        <member name="M:Fwk.Exceptions.TechnicalException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Exception)">
            <summary>
            Excepcion tecnica.
            </summary>
            <param name="passembly">Nombre del assembly donde se produce el error.</param>
            <param name="pnamespace">Namespace de la clase donde se produce el error.</param>
            <param name="pclass">Clase donde se produce el error.</param>
            <param name="pmachine">Equipo donde se produce el error.</param>
            <param name="puserName">Nombre de usuario.</param>
            <param name="pmsg">Mensaje del error.</param>
            <param name="pinner">Excepcion original.</param>
        </member>
        <member name="M:Fwk.Exceptions.TechnicalException.#ctor(System.String,System.Exception)">
            <summary>
            Excepcion tecnica.
            </summary>
            <param name="pmsg">Mensaje del error.</param>
            <param name="pinner">Excepcion original.</param>
        </member>
        <member name="M:Fwk.Exceptions.TechnicalException.AddMessage_Top(System.String)">
            <summary>
            Agrega texto al comienzo del mensaje
            </summary>
            <param name="pmsg"></param>
        </member>
        <member name="M:Fwk.Exceptions.TechnicalException.AddMessage_Down(System.String)">
            <summary>
            Agrega texto al final del mensae
            </summary>
            <param name="pmsg"></param>
        </member>
        <member name="M:Fwk.Exceptions.TechnicalException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the System.Runtime.Serialization.SerializationInfo with information about the exception.
            </summary>
            <param name="pinfo">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="pcontext">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Fwk.Exceptions.TechnicalException.ErrorId">
            <summary>
            Identificador del error
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.TechnicalException.Assembly">
            <summary>
            Assembly donde se produce la excepcion.
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.TechnicalException.Namespace">
            <summary>
            Namespace de la clase donde se produce la excepcion.
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.TechnicalException.Class">
            <summary>
            Clase donde se produce la excepcion.
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.TechnicalException.Machine">
            <summary>
            Nombre del Equipo del cliente donde se produce la excepcion.
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.TechnicalException.UserName">
            <summary>
            Nombre del usuario cliente.
            </summary>
        </member>
        <member name="P:Fwk.Exceptions.TechnicalException.Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="T:Fwk.HelperFunctions.EnvironmentFunctions">
            <summary>
            Funciones que obtienen datos del Sistema Operativo.
            </summary>
        </member>
        <member name="M:Fwk.HelperFunctions.EnvironmentFunctions.IsInDesigntime">
            <summary>
            Determina si una aplicacione se encuentra en tiempo de diceño o no.
            </summary>
            <returns>Boolean</returns>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.EnvironmentFunctions.GetDriverSerealNumber">
            <summary>
            Obtiene el numero de serio del disco maestro. 
            Para Windows 7 obtiene SerialNumber del disco c:
            PAra windows xp obtiene VolumeSerialNumber del disco c:
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.EnvironmentFunctions.GetOSVersion">
            <summary>
            Obtiene la version del sistema operativo .-
            </summary>
            <returns>enumeracion <see cref="T:Fwk.Bases.OSVersion"/></returns>
        </member>
        <member name="P:Fwk.HelperFunctions.EnvironmentFunctions.Dot">
            <summary>
            Valor constante que reoprecenta el separador '.'
            </summary>
        </member>
        <member name="P:Fwk.HelperFunctions.EnvironmentFunctions.Coma">
            <summary>
            /// Valor constante que reoprecenta el separador ','
            </summary>
        </member>
        <member name="P:Fwk.HelperFunctions.EnvironmentFunctions.NumberDecimalSeparator">
            <summary>
            Indica el separador decimal actual
            </summary>
        </member>
        <member name="P:Fwk.HelperFunctions.EnvironmentFunctions.NumberGroupSeparator">
            <summary>
            Indica el separador miles.-
            </summary>
        </member>
        <member name="T:Fwk.Bases.SingletonFactory`1">
            <summary>
            Clase que se encarga de crear una instancia de cualquier objeto.-
            No se pasan parametros 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Fwk.Bases.SingletonFactory`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Bases.SingletonFactory`1.#ctor(System.Object[])">
            <summary>
            Constructor con parametros que inicializaran la clase T
            </summary>
            <param name="constructorParams">Parametros del contructor la clase T</param>
        </member>
        <member name="M:Fwk.Bases.SingletonFactory`1.GetObject">
            <summary>
            Retorna un objeto tipo T.-
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fwk.Bases.PropertyValue">
            <summary>
            Esta clace almacena el valor y nombre de una propiedad
            </summary>
        </member>
        <member name="M:Fwk.Bases.PropertyValue.#ctor(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="propName"></param>
            <param name="propVal"></param>
        </member>
        <member name="P:Fwk.Bases.PropertyValue.PropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Bases.PropertyValue.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.HelperFunctions.ExportFunctions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.ServiceProviderElement">
            <summary>
            ConfigProvider . 
            </summary>
            <date>2010/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.ConfigSection.ServiceProviderElement.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.ServiceProviderElement.Name">
            <summary>
            Nombre de la regla. Es el identificador de una regla
            por lo tanto este nombre no debe repetirse.
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.ServiceProviderElement.ProviderType">
            <summary>
            Determina el tipo de origen de la metadata de sercvicios
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.ServiceProviderElement.SourceInfo">
            <summary>
            Archivo contenedor de la configuracion
             
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.ServiceProviderElement.ApplicationId">
            <summary>
            Identificador de aplicacion para buscarlo en la base de datos
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.ServiceProviderElement.SecurityProviderName">
            <summary>
            Proveedor de seguridad de usuarios reglas y roles, con la que ocorreran los servicios
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.MetadataProvider">
            <summary>
            entidad serializable auxiliar de ServiceProviderElement para uso de herramientas 
            </summary>
        </member>
        <member name="M:Fwk.ConfigSection.MetadataProvider.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.ConfigSection.MetadataProvider.#ctor(Fwk.ConfigSection.ServiceProviderElement)">
            <summary>
            
            </summary>
            <param name="provider"></param>
        </member>
        <member name="P:Fwk.ConfigSection.MetadataProvider.ApplicationId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.MetadataProvider.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.MetadataProvider.ConfigProviderType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.MetadataProvider.SecurityProviderName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.MetadataProvider.SourceInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.MetadataProvider.DefaultCulture">
            <summary>
            Reprecenta la cultura con la que trabajara el proveedor de configurador de servicios .- Este valor es utilizado y esta disponible 
            en cada servicio desde la capa SVC hacia abajo 
            
            Estas son las formas de poder obtenerlo en las capas BackEnd:
            
            string cultura = Fwk.ServiceManagement.ServiceMetadata.ProviderSection.GetProvider(providerName).DefaultCulture;
            string cultura = pServiceRequest.ContextInformation.DefaultCulture;
            
            </summary>
        </member>
        <member name="T:Fwk.ConfigSection.DispatcherInfo">
            <summary>
            Información configurada en un dispatcher
            </summary>
        </member>
        <member name="M:Fwk.ConfigSection.DispatcherInfo.#ctor">
            <summary>
            Constructor. Inicializa diccionarios
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.DispatcherInfo.MetadataProviders">
            <summary>
            Service Metadata Providers  configurados
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.DispatcherInfo.AppSettings">
            <summary>
            Todos los AppSettings configurados
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.DispatcherInfo.CnnStringSettings">
            <summary>
            Lista de cadenas de conección
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.DispatcherInfo.ServiceDispatcherConnection">
            <summary>
            Cadena de coneccion que posee el dispatcher para obtener su entorno de configuracion. 
            spesifica donde esta registrada la instancia del dispatcher
            </summary>
        </member>
        <member name="P:Fwk.ConfigSection.DispatcherInfo.ServiceDispatcherName">
            <summary>
            Nombre de instancia del dispatcher
            </summary>
        </member>
        <member name="T:Fwk.Params.Svc.DeleteParametroService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.Isvc.DeleteParam.Params.ParamId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.Isvc.DeleteParam.Params.CnnStringName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.Isvc.DeleteParam.Params.ParentId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Logging.EventType">
            <summary>
            Tipo de evento (Event).
            </summary>
            <date>2006/09/02</date>
            <author>moviedo</author>
        </member>
        <member name="F:Fwk.Logging.EventType.Information">
            <summary>
            Representa mensajes de información.
            </summary>
        </member>
        <member name="F:Fwk.Logging.EventType.Warning">
            <summary>
            Representa mensajes de advertencia.
            </summary>
        </member>
        <member name="F:Fwk.Logging.EventType.Error">
            <summary>
            Representa mensajes de error.
            </summary>
        </member>
        <member name="F:Fwk.Logging.EventType.None">
            <summary>
            Representa la ausencia de tipo de evento.
            </summary>
        </member>
        <member name="F:Fwk.Logging.EventType.Audit">
            <summary>
            Representa la ausencia de tipo de evento.
            </summary>
        </member>
        <member name="T:Fwk.Exceptions.BlockingFunctionalException">
            <summary>
            Summary description for BlockingFunctionalException.
            </summary>
        </member>
        <member name="M:Fwk.Exceptions.BlockingFunctionalException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="pMessage"></param>
        </member>
        <member name="M:Fwk.Exceptions.BlockingFunctionalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="pInfo"></param>
            <param name="pContext"></param>
        </member>
        <member name="M:Fwk.Exceptions.BlockingFunctionalException.#ctor(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="pMsgId"></param>
            <param name="pParams"></param>
        </member>
        <member name="M:Fwk.Exceptions.BlockingFunctionalException.#ctor(System.String,System.Exception,System.String[])">
            <summary>
            
            </summary>
            <param name="pMsgId"></param>
            <param name="pInner"></param>
            <param name="pParams"></param>
        </member>
        <member name="T:Fwk.AssemblyExplorer.AssemblyCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.AssemblyExplorer.AssemblyCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.AssemblyExplorer.Assembly">
            <summary>
            Summary description for Assembly.
            </summary>
        </member>
        <member name="T:Fwk.HelperFunctions.DateFunctions">
            <summary>
            Utilidades para fechas.
            </summary>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.Interseccion(System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Algoritmo que determina si hay o no InterSección entre dos rangos de fechas
            </summary>
            <param name="D1">Fecha Desde del primer rango</param>
            <param name="H1">Fecha Hasta del primer rango</param>
            <param name="D2">Fecha Desde del segundo rango</param>
            <param name="H2">Fecha Hasta del segundo rango</param>
            <returns>Retorna el rango de InterSección en una DataRow un bool que dice si hay o no interseccion</returns>
            <Date>29-03-2006</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.GetHH_MM_SS_FromInt32(System.Int32)">
            <summary>
            Retorna un string con el formato hh:mm:ss.-
            Por ejemplo si la acantidad de horas se superace en una unidad de 
            las 24 horas, el valor retornado es por ejemplo: 26:00:01
            </summary>
            <param name="pSeconds"></param>
            <returns>String con el formato hh:mm:ss</returns>
            <Date>18-01-2007</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.GetDateTimeFromSeconds(System.Int32)">
            <summary>
            Retorna una fecha con dia mes año actual mas el parceo pSeconds a hh:mm:ss
            </summary>
            <param name="pSeconds"></param>
            <returns></returns>
            <Date>18-03-2008</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.GetFirstDayOfMonth(System.Int16,System.Int16)">
            <summary>
            Retorna el 1° día del Mes. Por ejemplo: 01/08/1978 11:59:59
            </summary>
            <param name="pMonth">Mes del que se desea obtener el primer día</param>
            <param name="pYear">Año del que se desea obtener</param>
            <returns>DateTime del 1° dia del mes. Por Ej: 01/10/2008 11:59:59</returns>
            <Date>15-01-2009</Date>
            <Author>Andres Aguirre</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.GetLastDayOfMonth(System.Int16,System.Int16)">
            <summary>
            Retorna el último dia del Mes. Por Ejemplo: 31/08/2009 11:59:59
            </summary>
            <param name="pMonth">Mes del que se desea obtener el primer día</param>
            <param name="pYear">Año del que se desea obtener</param>
            <returns>DateTime del último dia del mes. Por Ej: 31/01/2008 11:59:59</returns>
            <Date>15-01-2009</Date>
            <Author>Andres Aguirre</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.ToDateTimeISO(System.DateTime)">
            <summary>
            Retorna un string con la fecha en formato ISO. Por Ejemplo: 2009-07-14T15:43:25.683
            </summary>
            <param name="pDateTime">Fecha</param>
            <returns>String en formato ISO del DateTime pasado. Por Ej: 2009-07-14T15:43:25.683</returns>
            <Date>23-07-2009</Date>
            <Author>Marcelo Oviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.Get_Year_Mont_Day_String(System.DateTime,System.Char)">
            <summary>
            Retorna la fecha en formato YYYY[sep]MM[sep]dd
            EJ: 2010_11_02
            </summary>
            <param name="date"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.IsSqlDateTimeOutOverflow(System.DateTime)">
            <summary>
            Detecta si la fecha esta fuera de rango permitido para SQL Server
            La fecha debe estar entre 1/1/1753 12:00:00 AM y 12/31/9999 11:59:59 PM."}
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.Get_Year_Mont_Day_Hour_Min_Sec_String(System.DateTime,System.Char)">
            <summary>
            Retorna la fecha en formato YYYY[sep]MM[sep]dd
            EJ: 2010_11_02_41_33_1
            </summary>
            <param name="date"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.DateTimeToUnixTimeStamp(System.DateTime)">
            <summary>
            Convierte DateTime a UnixTimeStamp (Total acumulado en segundo desde 1-ENE-1970 hasta la fecha pasada por parametros)
            The unix time stamp is a way to track time as a running total of seconds. 
            This count starts at the Unix Epoch on January 1st, 1970. Therefore, the unix time stamp is merely the number of seconds between a particular date and the Unix Epoch. This is very useful to computer systems for tracking and sorting dated information in dynamic and distributed applications both online and client side.
            </summary>
            <param name="date">Fehca</param>
            <returns>Total acumulado en segundo desde o intervalo de tiempo en segundos  </returns>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.UnixTimeStampToDateTime(System.Int64)">
            <summary>
            Convierte UnixTimeStamp a DateTime Retorna la fecha correspondiente de un 
            acumulado en segundos desde desde 1-ENE-1970 a su fecha correspondiente
            </summary>
            <param name="unixtimestamp">Total acumulado en segundo desde 1-ENE-1970 (intervalo en segundos)</param>
            <returns>Fecha</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.UnixLongTimeToDateTime(System.Int64)">
            <summary>
            Convierte una fecha long (generalmente proveninte de unix) a datetime
            </summary>
            <param name="unixDate">Fecha long de unix</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.Get_Age(System.DateTime,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Obtiene la edad
            </summary>
            <param name="birthDate"></param>
            <param name="ageInYears"></param>
            <param name="ageInMonths"></param>
            <param name="ageInDays"></param>
            <returns>Years,Months and Days</returns>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.GetStartDateTime(System.DateTime)">
            <summary>
            Retorna fecha con hh:mm:ss  00:00:00
            </summary>
            <param name="datetime"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.DateFunctions.GetEndDateTime(System.DateTime)">
            <summary>
            Retorna la fecha con hh:mm:ss = 23:59:59
            </summary>
            <param name="datetime"></param>
            <returns></returns>
        </member>
        <member name="P:Fwk.HelperFunctions.DateFunctions.NullDateTime">
            <summary>
            Valor constante que reprecenta el separador una fecha = 01/01/0001
            </summary>
        </member>
        <member name="P:Fwk.HelperFunctions.DateFunctions.BeginningOfTimes">
            <summary>
            Indica el principio de los tiempos  = 01/01/1000
            </summary>
        </member>
        <member name="P:Fwk.HelperFunctions.DateFunctions.EndOfTimes">
            <summary>
            Indica el fin de los tiempos = 01/01/9999
            </summary>
        </member>
        <member name="T:Fwk.HelperFunctions.DateFunctions.TimeMeasuresEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.DateFunctions.TimeMeasuresEnum.FromDays">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.DateFunctions.TimeMeasuresEnum.FromHours">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.DateFunctions.TimeMeasuresEnum.FromMinutes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.DateFunctions.TimeMeasuresEnum.FromSeconds">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Mail.Common.LoginResponseEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Mail.Common.LoginResponseEnum.USER_ALREADY_CONNECT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Mail.Common.LoginResponseEnum.LOGIN_SUCCESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Mail.Common.LoginResponseEnum.LOGIN_FAIL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Mail.Common.LoginResponseEnum.CONNECTION_FAIL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Mail.Common.LoginResponseEnum.CONNECTION_SUCCESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Mail.Common.LoginResponseEnum.DISCONNECTION_FAIL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Mail.Common.LoginResponseEnum.DISCONNECTION_SUCCESS">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Configuration.Common.ConfigFileRegistry">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Configuration.Common.ConfigFileRegistry.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Configuration.Common.ConfigFileRegistry.CurrentVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Configuration.Common.ConfigFileRegistry.Available">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Bases.Constants">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Bases.Constants.RegExpConstants">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.Constants.RegExpConstants.AlphaNumericNotAllowSimbols">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.Constants.RegExpConstants.Numeric">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.Constants.RegExpConstants.NumericDecimal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.Constants.RegExpConstants.NumericDecimalWhitchPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.Constants.RegExpConstants.Email">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Bases.Enums">
            <summary>
            Enumeraciones utilizadas por el framework
            </summary>
        </member>
        <member name="M:Fwk.Bases.Enums.GetSearchTypeValue(System.String,Fwk.Bases.SearchtypeEnum)">
            <summary>
            Obtine una expresion con el patron start, contain o finaliza
            <example> 
            string value = GetSearchTypeValue("a",SearchtypeEnum.Contain);
            
            </example>
            </summary>
            <param name="pValue">String</param>
            <param name="pSearchType">Tipo de busqueda <see cref="T:Fwk.Bases.SearchtypeEnum"/></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Bases.SearchtypeEnum">
            <summary>
            Tipo Busqueda
            </summary>
        </member>
        <member name="F:Fwk.Bases.SearchtypeEnum.Start">
            <summary>
            Que Comience
            </summary>
        </member>
        <member name="F:Fwk.Bases.SearchtypeEnum.Contain">
            <summary>
             Que contenga
            </summary>
        </member>
        <member name="F:Fwk.Bases.SearchtypeEnum.Finalize">
            <summary>
            Que finalice
            </summary>
        </member>
        <member name="F:Fwk.Bases.SearchtypeEnum.Equal">
            <summary>
            Igual
            </summary>
        </member>
        <member name="T:Fwk.Bases.EntityUpdateEnum">
            <summary>
            Enumeracion de Estados de una entidad
            util tambien  para determinar el modo en que que se visualiza el control (Edicion, creacion o eliminacion)
            </summary>
        </member>
        <member name="F:Fwk.Bases.EntityUpdateEnum.NEW">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.EntityUpdateEnum.REMOVED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.EntityUpdateEnum.UPDATED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.EntityUpdateEnum.NONE">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Bases.EntityState">
            <summary>
            List of possible state for an entity.
            </summary>
        </member>
        <member name="F:Fwk.Bases.EntityState.Unchanged">
            <summary>
            Entity is unchanged
            </summary>
        </member>
        <member name="F:Fwk.Bases.EntityState.Added">
            <summary>
            Entity is new
            </summary>
        </member>
        <member name="F:Fwk.Bases.EntityState.Changed">
            <summary>
            Entity has been modified
            </summary>
        </member>
        <member name="F:Fwk.Bases.EntityState.Deleted">
            <summary>
            Entity has been deleted
            </summary>
        </member>
        <member name="T:Fwk.Bases.OperatorEnum">
            <summary>
            Operador de compraracion 
            </summary>
        </member>
        <member name="F:Fwk.Bases.OperatorEnum.Equal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.OperatorEnum.Distinct">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.OperatorEnum.Mayor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.OperatorEnum.Minor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Bases.MessageBoxIcon">
            <summary>
            Enumeración con los iconos posibles
            para un MessageBox
            </summary>
        </member>
        <member name="F:Fwk.Bases.MessageBoxIcon.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.MessageBoxIcon.Error">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.MessageBoxIcon.Question">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.MessageBoxIcon.Exclamation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.MessageBoxIcon.Warning">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Bases.MessageBoxIcon.Information">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Bases.ServiceConfigurationCollection">
            <summary>
            Colección de configuraciones de servicios de negocio.
            </summary>
            <remarks>
            Permite búsquedas indexadas por nombre de servicio (<see cref="P:Fwk.Bases.ServiceConfiguration.Name"/>).
            </remarks>
            <date>2010-08-10T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.ServiceConfigurationCollection.GetServiceConfiguration(System.String,System.String)">
            <summary>
            Retorna un ServiceConfiguration
            </summary>
            <param name="name">Nombre del servicio</param>
            <param name="appId">Nombre de aplicacion, puede ser nula</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.ServiceConfigurationCollection.Exists(System.String,System.String)">
            <summary>
            Determina si existe un ServiceConfiguration
            </summary>
            <param name="name">Nombre del servicio</param>
            <param name="appId">Nombre de aplicacion, puede ser nula</param>
            <returns>bool</returns>
        </member>
        <member name="T:Fwk.Bases.ServiceConfiguration">
            <summary>
            Clase que contiene la configuración de un servicio de negocio.
            </summary>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.ServiceConfiguration.GetServiceConfigurationFromXml(System.String)">
            <summary>
            Metodo estatico que retorna un objeto ServiceConfiguration apartir de un xml.-
            </summary>
            <param name="pXml">String con el xml</param>
            <returns>ServiceConfiguration</returns>
        </member>
        <member name="M:Fwk.Bases.ServiceConfiguration.Clone">
            <summary>
            Realiza un clon del objeto
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.ServiceConfiguration.ToString">
            <summary>
            Sobreescribe el metodo para retornar informacion del servicio
            </summary>
            <returns></returns>
        </member>
        <member name="P:Fwk.Bases.ServiceConfiguration.CreatedUserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Bases.ServiceConfiguration.CreatedDateTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Bases.ServiceConfiguration.Name">
            <summary>
            Nombre del servicio de negocio.
            </summary>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="P:Fwk.Bases.ServiceConfiguration.Description">
            <summary>
            Descripción del servicio de negocio.
            </summary>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="P:Fwk.Bases.ServiceConfiguration.Handler">
            <summary>
            Nombre completo de la clase del servicio y nombre del assembly.
            </summary>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="P:Fwk.Bases.ServiceConfiguration.Request">
            <summary>
            Nombre completo del request del servicio y nombre del assembly.
            </summary>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="P:Fwk.Bases.ServiceConfiguration.Response">
            <summary>
            Nombre completo del response del servicio y nombre del assembly.
            </summary>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="P:Fwk.Bases.ServiceConfiguration.Available">
            <summary>
            Indica si el servicio está disponible para ser ejecutedo.
            </summary>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="P:Fwk.Bases.ServiceConfiguration.Audit">
            <summary>
            Indica si la  ejecución del servicio debe ser auditadao.el servicio está disponible para ser ejecutedo.
            </summary>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="P:Fwk.Bases.ServiceConfiguration.TransactionalBehaviour">
            <summary>
            Opciones de comportamiento del ámbito transaccional.
            </summary>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="P:Fwk.Bases.ServiceConfiguration.IsolationLevel">
            <summary>
            Nivel de aislamiento de la transacción.
            </summary>
            <date>2008-04-07T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="P:Fwk.Bases.ServiceConfiguration.ApplicationId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Xml.Document">
            <summary>
            Manejo de XmlDocument.
            </summary>
            <Author>moviedo</Author>
            <Date>28-12-2005</Date>
        </member>
        <member name="M:Fwk.Xml.Document.DocumentCreateFromString(System.String)">
            <summary>
            Crea y retorna un XmlDocument a partir de una definicion xml.
            </summary>
            <param name="pxmlString">La definicion xml.</param>
            <returns>XmlDocument.</returns>
        </member>
        <member name="M:Fwk.Xml.Document.DocumentCreateFromFilePath(System.String)">
            <summary>
            Crea y retorna un XmlDocument a partir de un archivo xml en disco.
            </summary>
            <param name="pxmlFilePath">La ubicacion del archivo xml en disco.</param>
            <returns>XmlDocument.</returns>
        </member>
        <member name="T:Fwk.HelperFunctions.FileFunctions">
            <summary>
            Summary description for FileFunctions.
            </summary>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.GetTextFromReader(System.IO.TextReader)">
            <summary>
            Obtiene el texto de un TextReader
            </summary>
            <param name="reader">TextReader</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.OpenFileDialog_Open(System.String,System.String,System.String)">
            <summary>
            Muestra dialog box para abrir un archivo .-
            </summary>
            <param name="pFilter">Filtro ej: "(*.xml)|*.xml"</param>
            <param name="pTitle">titulo personalizado del cuadro de diálogo</param>
            <param name="pInitialDirectory">Directorio inicial de FileDialog</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.OpenFileDialog_Open(System.String,System.String)">
            <summary>
            Muestra dialog box para abrir un archivo .-
            </summary>
            <param name="pFilter">Filtro ej: "(*.xml)|*.xml"</param>
            <param name="pTitle">titulo personalizado del cuadro de diálogo</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.OpenFileDialog_Open(System.String)">
            <summary>
            Muestra dialog box para abrir un archivo .-
            </summary>
            <param name="pFilter">Filtro ej: "(*.xml)|*.xml"</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.OpenFileDialog_New(System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Crea un nuevo archivo de texto
              wDialog.AddExtension = true;
              wDialog.RestoreDirectory = true;
            </summary>
            <param name="pFileName">Nombre sujerido para el archivo</param>
            <param name="pContent">Contenido del archivo</param>
            <param name="pFilter">Filtro ej: "(*.xml)|*.xml Puede utilizar la enumeracion ref<see cref="T:Fwk.HelperFunctions.FileFunctions.OpenFilterEnums"/></param>
            <param name="pIsXml">Espesifica si el contenido es de un xml para almacenarlo con la indentacion correcta</param>
            <param name="pTitle">titulo personalizado del cuadro de diálogo</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.OpenFileDialog_New(System.String,System.String,System.Boolean)">
            <summary>
            Crea un nuevo archivo  de texto
            </summary>
            <param name="pContent">Contenido del archivo</param>
            <param name="pFilter">Filtro ej: "(*.xml)|*.xml"</param>
            <param name="pIsXml">Espesifica si el contenido es de un xml para almacenarlo con la indentacion correcta</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.OpenTextFile(System.String)">
            <summary>
            Abre un archivo de texto
            </summary>
            <param name="pFileName">Nombre completo del archivo</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.PadPath(System.String)">
            <summary>
            
            </summary>
            <param name="pPath"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.SaveTextFile(System.String,System.String)">
            <summary>
            Agrega texto a un archivo. Este metoo sobreescribe el archivo existente.
            </summary>
            <param name="pFileName">Nombre completo del archivo</param>
            <param name="pContent">Contenido del archivo</param>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.SaveTextFile(System.String,System.String,System.Boolean)">
            <summary>
            Agrega el texto a un archivo. Si el archivo no existe, este método crea uno nuevo. 
            </summary>
            <param name="pFileName">Nombre completo del archivo</param>
            <param name="pContent">Contenido del archivo</param>
            <param name="pAppend">Determina si se van a agregar datos al archivo. 
            Si ya existe el archivo y append es false, el archivo se sobrescribirá. 
            Si ya existe el archivo y append es true, los datos se anexarán al archivo. De lo contrario, se crea un nuevo archivo. 
            </param>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.SaveBinaryFile(System.String,System.Byte[])">
            <summary>
            
            </summary>
            <param name="pFileName"></param>
            <param name="pContent"></param>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.OpenBinaryFile(System.String)">
            <summary>
            
            </summary>
            <param name="pFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.AddFileSecurity(System.String,System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            Establece una nueva configuracion de seguridad apra el archivo.-
            Ej: AddFileSecurity(fileInfo.FullName, @"ALCO\moviedo",FileSystemRights.FullControl, AccessControlType.Allow);
            </summary>
            <param name="pFileName"></param>
            <param name="pAccount">ej: @"ALCO\moviedo"</param>
            <param name="pRights"><see cref="T:System.Security.AccessControl.FileSystemRights"/> </param>
            <param name="pControlType"><see cref="T:System.Security.AccessControl.AccessControlType"/></param>
        </member>
        <member name="M:Fwk.HelperFunctions.FileFunctions.RemoveFileSecurity(System.String,System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)">
            <summary>
            
            </summary>
            <param name="pFileName"></param>
            <param name="pAccount">ej: @"ALCO\moviedo"</param>
            <param name="pRights"><see cref="T:System.Security.AccessControl.FileSystemRights"/></param>
            <param name="pControlType"><see cref="T:System.Security.AccessControl.AccessControlType"/></param>
        </member>
        <member name="T:Fwk.HelperFunctions.FileFunctions.OpenFilterEnums">
            <summary>
            Tipos de filtro standars para un objeto <see cref="T:System.Windows.Forms.OpenFileDialog"/>
            </summary>
        </member>
        <member name="P:Fwk.HelperFunctions.FileFunctions.OpenFilterEnums.OpenImageFilter">
            <summary>
            "Image Files(*.BMP;*.JPG;*.GIF;*.PNG)|*.PNG;*.BMP;*.JPG;*.GIF|All files (*.*)|*.*"
            </summary>
        </member>
        <member name="P:Fwk.HelperFunctions.FileFunctions.OpenFilterEnums.OpenAllXmlFilesFilter">
            <summary>
            "Xml Files(*.XSD;*.XML;*.CONFIG;)|*.XSD;*.XML;*.CONFIG;|All files (*.*)|*.*"
            </summary>
        </member>
        <member name="P:Fwk.HelperFunctions.FileFunctions.OpenFilterEnums.OpenXmlFilter">
            <summary>
            "Xml Files(*.XSD;*.XML;*.CONFIG;)|*.XSD;*.XML;*.CONFIG;|All files (*.*)|*.*"
            </summary>
        </member>
        <member name="P:Fwk.HelperFunctions.FileFunctions.OpenFilterEnums.OpenAssembliesFilter">
            <summary>
            "DLL Files (*.dll;*.exe)|*.dll;*.exe|All Files (*.*)|*.*"
            </summary>
        </member>
        <member name="T:Fwk.Mail.ObjCache">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Mail.ObjCache.ConnectionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Mail.ObjCache.UserPassword">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Mail.ObjCache.UserMail">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Mail.Imap.Imap">
            <summary>
            Imap class implementes IMAP client API
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.Imap.m_bIsLoggedIn">
            <summary>
            If user has logged in to his mailbox.
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.Imap.m_sMailboxName">
            <summary>
            Mailbox (Folder) name. Default INBOX.
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.Imap.m_bIsFolderSelected">
            <summary>
            If folder is selected.
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.Imap.m_bIsFolderExamined">
            <summary>
            if folder is examined.
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.Imap.m_nTotalMessages">
            <summary>
            Total number of messages in mailbox.
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.Imap.m_nRecentMessages">
            <summary>
            Number of recent messages in mailbox.
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.Imap.m_nFirstUnSeenMsgUID">
            <summary>
            First unseen message UID
            </summary>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.Login(System.String,System.String,System.String,System.Boolean)">
            <summary>
             Login to specified Imap host and default port (143)
            </summary>
            <param name="sHost">Imap Server name</param>
            <param name="sUserId">User's login id</param>
            <param name="sPassword">User's password</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.Mail.Imap.Imap.Login(System.String,System.UInt16,System.String,System.String,System.Boolean)" -->
        <member name="M:Fwk.Mail.Imap.Imap.LogOut">
            <summary>
            Logout the user: It logout the user and disconnect the connetion from IMAP server.
            </summary>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.GetStatus">
            <summary>
            Get the status mailbox
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.Mail.Imap.Imap.SelectFolder(System.String)" -->
        <member name="M:Fwk.Mail.Imap.Imap.ExamineFolder(System.String)">
            <summary>
            Examine the sFolder/mailbox after login
            </summary>
            <param name="sFolder">Mailbox folder</param>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.Restore(System.Boolean,System.Boolean)">
            <summary>
            Restore the connection using available old data
            Select the sFolder if previously selected
            </summary>
            <param name="bSelectFolder">If true then it selects the folder</param>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.HasEnoughQuota(System.String)">
            <summary>
            Check if enough quota is available
            </summary>
            <param name="sFolderName">Mailbox folder</param>
            <returns>true if enough mail quota</returns>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.GetQuota(System.String,System.Boolean@,System.Int32@,System.Int32@)">
            <summary>
            Get the quota for specific folder
            </summary>
            <param name="sFolderName">Mailbox folder</param>
            <param name="bUnlimitedQuota">Is unlimited quota</param>
            <param name="nUsedKBytes">Used quota in Kbytes</param>
            <param name="nTotalKBytes">Total quota in KBytes</param>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.SearchMessage(System.String[],System.Boolean,System.Collections.ArrayList)">
            <summary>
            Search the messages by specified criterias
            </summary>
            <param name="asSearchData">Search criterias</param>
            <param name="bExactMatch">Is it exact search</param>
            <param name="asSearchResult">search result</param>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.FetchPartBody(System.String,System.String,System.String@)">
            <summary>
            Fetch the body for specified part
            </summary>
            <param name="sMessageUID"> Message uid</param>
            <param name="sMessagePart">Message part</param>
            <param name="aArray">Body data as Array</param>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.FetchPartHeader(System.String,System.String,System.Collections.ArrayList)">
            <summary>
            Fetch Header of the message uid and part
            </summary>
            <param name="sMessageUID"> Message UID</param>
            <param name="sMessagePart"> Message part</param>
            <param name="asMessageHeader">Output Array</param>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.FetchMessage(System.String,System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Fetch the full message
            </summary>
            <param name="sMessageUID">Message UID </param>
            <param name="oXmlDoc">Message is stored as XmlDocument object</param>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.GetBodyStructure(System.String,System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Get the Body structure of the message.
            If message is single part then first part is 1
            If message is multipart then first part is 0
            </summary>
            <param name="sMessageUID"> Message UID</param>
            <param name="oXmlElem"> Body structure as XmlElement</param>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.ParseBodyStructure(System.String,System.String@,System.Xml.XmlWriter,System.String,System.Boolean)">
            <summary>
            Parse the bodystructure and store as XML Element
            </summary>
            <param name="sMessageUID"></param>
            <param name="sBodyStruct"></param>
            <param name="oXmlBodyPart"></param>
            <param name="sPartPrefix"></param>
            <param name="bFetchBody"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.GetBody(System.String,System.String,System.String@)">
            <summary>
            Get the message body for specified part
            </summary>
            <param name="sMessageUid">Message uid</param>
            <param name="sPartNumber">Body part</param>
            <param name="aArray">Out data</param>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.GetHeader(System.String,System.String,System.Collections.ArrayList)">
            <summary>
            Get the header for specific partNumber and Message UID
            </summary>
            <param name="sMessageUid">Unique Identifier of message</param>
            <param name="sPartNumber"> Message part number</param>
            <param name="asMessageHeader">Return array </param>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.IsMultipart(System.Collections.ArrayList)">
            <summary>
            Check if this message is multipart
            To Identify multipart message, the content-type is either
            multipart or rfc822
            </summary>
            <param name="asHeader"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.IsNilString(System.String@)">
            <summary>
            Returns true if starts with NIL
            </summary>
            <param name="sBodyStruct">Body Structure</param>
            <returns>true/false</returns>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.GetContentType(System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Get the content type
            </summary>
            <param name="sBodyStruct">Body Structure</param>
            <param name="sType">Content Type</param>
            <param name="sSubType">Sub Type</param>
            <param name="sContentType">Content Type Value</param>
            <returns>True/false</returns>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.GetContentDisposition(System.String@,System.String@)">
            <summary>
            Get Content Disposition
            </summary>
            <param name="sBodyStruct"> Body Structure</param>
            <param name="sDisp">Content Disposition</param>
            <returns>true if success</returns>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.ParseQuotedString(System.String@,System.String@)">
            <summary>
            Parse the quoted string in body structure
            </summary>
            <param name="sBodyStruct">Body Structure</param>
            <param name="sString">"Quoted string</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.ParseString(System.String@,System.String@)">
            <summary>
            Parse the string (seperated by spaces or parenthesis)
            </summary>
            <param name="sBodyStruct">Body Struct</param>
            <param name="sString">string</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.ParseLanguage(System.String@,System.String@)">
            <summary>
            Parse the language or list of languages in body structure
            </summary>
            <param name="sBodyStruct">Bosy structure</param>
            <param name="sString">Languages</param>
            <returns>true if success</returns>		
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.ParseParameters(System.String@,System.Collections.ArrayList)">
            <summary>
            Parse the parameter in body structure
            </summary>
            <param name="sBodyStruct">Body structure</param>
            <param name="asParams">parameter</param>
            <returns>true if success</returns>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.ParseExtension(System.String@,System.String@)">
            <summary>
            Parse the extension in body structure
            </summary>
            <param name="sBodyStruct">body structure</param>
            <param name="sString">extension</param>
            <returns>true if success</returns>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.ParseAddressList(System.String@,System.String@)">
            <summary>
            Parse the address string
            </summary>
            <param name="sBodyStruct">body structure</param>
            <param name="sString">address</param>
            <returns>true if success</returns>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.ParseAddress(System.String@,System.String@)">
            <summary>
            Parse one address and format the string
            </summary>
            <param name="sBodyStruct">body structure</param>
            <param name="sString">address</param>
            <returns>true if success</returns>
        </member>
        <member name="M:Fwk.Mail.Imap.Imap.FindAndRemove(System.String@,System.Char)">
            <summary>
            find the given character and remove
            </summary>
            <param name="sBodyStruct">body structure</param>
            <param name="ch">first character to find and remove</param>
            <returns>true if success</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Fwk.Mail.Imap.Imap.GetResponseSize(System.String)" -->
        <member name="T:Fwk.Configuration.ConfigurationManager_CRUD">
            <summary>
            Esta clase fue tiene como objetivo realizar todo tipo de operaciones transaccionales coon los objetos ConfiguracionFile de configuracion
            Dependiendo del tipo de proveedor de configucracion realizara operaciones de IO o DataBase
            </summary>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager_CRUD.AddProperty(System.String,System.String,Fwk.Configuration.Common.Key)">
            <summary>
            Agrega una nueva propiedad
            </summary>
            <param name="configProvider">Proveedor de configuracion</param>
            <param name="groupName">Nombre del gruop que contiene las propiedades</param>
            <param name="property"></param>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager_CRUD.RemoveProperty(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="configProvider">Proveedor de configuracion</param>
            <param name="propertyName">Nombre de la propiedad o key.name</param>
            <param name="groupName">Nombre del gruop que contiene las propiedades</param>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager_CRUD.AddGroup(System.String,Fwk.Configuration.Common.Group)">
            <summary>
            
            </summary>
            <param name="configProvider">Proveedor de configuracion</param>
            <param name="group"></param>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager_CRUD.RemoveGroup(System.String,System.String)">
            <summary>
            Elimina un grupo compoleto de la configuracion
            </summary>
            <param name="configProvider">Proveedor de configuracion</param>
            <param name="groupName">Nombre del grupo</param>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager_CRUD.ChangeGroupName(System.String,System.String,System.String)">
            <summary>
            Cambia el nombre de un grupo.-
            </summary>
            <param name="configProvider">Proveedor de configuracion</param>
            <param name="groupName">Nombre del grupo</param>
            <param name="newGroupName">Nuevo nombre del grupo</param>
        </member>
        <member name="M:Fwk.Configuration.ConfigurationManager_CRUD.ChangeProperty(System.String,System.String,Fwk.Configuration.Common.Key,System.String)">
            <summary>
            Realiza cambios a una propiedad.-
            </summary>
            <param name="configProvider">Nombre del proveedor de configuracion</param>
            <param name="groupName">Nombre del grupo donde se encuentra la propiedad</param>
            <param name="property">Propiedad actualizada. Este objeto puede contener todos sus valores modifcados</param>
            <param name="propertyName">Nombre de la propiedad que se mofdifico.- Este valor es el original sin modificacion</param>
        </member>
        <member name="T:Fwk.HelperFunctions.MathFunctions">
            <summary>
            Funciones matemáticas.
            </summary>
            <Date>17-01-2005</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.MathFunctions.MaxCommonDivisor(System.Collections.ArrayList)">
            <summary>
            Calcula el Maximo Comun Divisor de una lista de valores enteros,
            aplicando propiedad asociativa si hay más de dos valores.
            </summary>
            <returns>Numero entero Maximo Comun Divisor</returns>
            <Date>17-01-2005</Date>
            <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.HelperFunctions.MathFunctions.IsFactor(System.Decimal,System.Decimal)">
            <summary>
            Determina si pMultiplo es multiplo de pFactor
            ej:IsFactor (16,4) = true 
            </summary>
            <param name="pFactor">Es el factor </param>
            <param name="pMultiplo">Valor sobre el cual se quiere saber si es Factor</param>
            <returns>boolean </returns>
        </member>
        <member name="T:Fwk.HelperFunctions.CryptographyFunctions">
            <summary>
            Framework Library Integration Facades
            Usa --&gt; Proveee una fachada estatica que no es instanciada por polyce injection .-
            
            Esta clase nececita un proveedor de encriptacion simetrica configurado .-
            
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.CryptographyManager"/>
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.CryptographyFunctions.HASH_PROVIDER">
            <summary>
            Nombre del proveedor espesificado por mediode el archivo de configuracion
            Ver:  securityCryptographyConfiguration -->hashProviders
            </summary>
        </member>
        <member name="F:Fwk.HelperFunctions.CryptographyFunctions.SYMM_PROVIDER">
            <summary>
            Nombre del proveedor espesificado por medio del arhivo de configuracion
            Ver:  securityCryptographyConfiguration -->hashProviders
            </summary>
        </member>
        <member name="M:Fwk.HelperFunctions.CryptographyFunctions.Decrypt(System.String)">
            <summary>
            Desencripta simetricamente con el provider "FwkSympPovider"
            </summary>
            <param name="cryptedText">Texto encriptado en base64</param>
            <returns></returns>
        </member>
        <member name="T:Fwk.HelperFunctions.CryptographyFunctions.TripleDES">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.HelperFunctions.CryptographyFunctions.TripleDES.EncryptData(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strKey"></param>
            <param name="strData"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.HelperFunctions.CryptographyFunctions.TripleDES.DecryptData(System.String,System.String)">
            <summary>
            Function to decrypt data
            </summary>
            <param name="strKey"></param>
            <param name="strData"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Bases.WrapperFactory">
            <summary>
            Esta clace es utilizada por la clase generica Request la cual permite compartir un wrapper estatico entre 
            todos los request.-
            Cuando las llamadas a servicios es a travez de la clase request se utiliza esta clase
            </summary>
        </member>
        <member name="F:Fwk.Bases.WrapperFactory._WraperPepository">
            <summary>
            Representa los diferentes wrapers de la aplicacion cliente
            se crea uno por FwkWrapperProvider
            </summary>
        </member>
        <member name="F:Fwk.Bases.WrapperFactory._ProviderSection">
            <summary>
            Seccion de configuracion de wrapper
            </summary>
        </member>
        <member name="F:Fwk.Bases.WrapperFactory._DefaultProviderName">
            <summary>
            Se utiliza este miembro solo para poder cambiar el provider por defecto entiempo de ejecución. 
            El _ProviderSection.DefaultProvider no puede ser swichado luego de inicializar la aplicación
            </summary>
        </member>
        <member name="M:Fwk.Bases.WrapperFactory.ChangeDefaultProvider(System.String)">
            <summary>
            Establece cual sera el proveedor por defecto a utilizar en <see cref="T:Fwk.Bases.WrapperFactory"/>
            Util cuando todas las llamadas al metod Execute son SIN espesificar el provider y por alguna regla o cambio 
            en el sistema las llamadas deben apuntar a un proveedor q no esta configurado como por defecto.-
            </summary>
            <param name="providerName"></param>
        </member>
        <member name="M:Fwk.Bases.WrapperFactory.#cctor">
            <summary>
            Levanta la seccion FwkWrapper.-
            Inicialisa el repositorio de wrappers. (no lo llena con los wrappers)
            </summary>
        </member>
        <member name="M:Fwk.Bases.WrapperFactory.ExecuteService``2(System.String,``0)">
            <summary>
            Ejecuta un servicio de negocio
            Si se produce el error:
            The parameter is incorrect. (Exception from HRESULT: 0x80070057 (E_INVALIDARG))
            Se debe a un error que lanza una llamada asincrona en modo debug  
            </summary>
            <typeparam name="TRequest">Tipo del Request</typeparam>
            <typeparam name="TResponse">Tipo del Response</typeparam>
            <param name="providerName">Proveedor del wrapper</param>
            <param name="pRequest">Objeto request del tipo </param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Bases.WrapperFactory.ExecuteService``2(``0)">
            <summary>
            Ejecuta un servicio de negocio con el proveedor de wrapper por defecto
            Si se produce el error:
            The parameter is incorrect. (Exception from HRESULT: 0x80070057 (E_INVALIDARG))
            Se debe a un error que lanza una llamada asincrona en modo debug  
            </summary>
            <param name="pRequest">Request con datos de entrada para la  ejecución del servicio.</param>
            <returns>Dataset con datos de respuesta del servicio.</returns>
            <date>2007-08-24T00:00:00</date>
            <author>moviedo</author>
        </member>
        <member name="M:Fwk.Bases.WrapperFactory.InitWrapper(System.String)">
            <summary>
            Inicializa un wrapper deacuerdo el nombre del proveedor
            Carga al wrapper el nombre
            </summary>
            <param name="providerName">Proveedor del wrapper. Este valor debe coincidir con un proveedor de metadata en el dispatcher</param>
        </member>
        <member name="M:Fwk.Bases.WrapperFactory.CheckWrapperExist(System.String)">
            <summary>
            Solo chequea si existe el proveedor. Si no, lanza una excepción.-
            </summary>
            <param name="providerName"></param>
        </member>
        <member name="M:Fwk.Bases.WrapperFactory.GetWrapper(System.String)">
            <summary>
            Get wrapper from IServiceWrapper factory`s dictionary
            </summary>
            <param name="providerName"></param>
        </member>
        <member name="P:Fwk.Bases.WrapperFactory.ProviderSection">
            <summary>
            Seccion de configuracion de wrapper
            </summary>
        </member>
        <member name="T:Fwk.Bases.ConfigurationsHelper">
            <summary>
            Clase que expone atributos de configuracion utilizados por el framework.-
            </summary>
        </member>
        <member name="P:Fwk.Bases.ConfigurationsHelper.HostApplicationName">
            <summary>
            Indica el nombre de la aplicacion que esta corriendo y utilizando el framework
            Ejemplo: Nombre de un servicio, nombre de sitio web, nombre de aplicacion de windows
            Este nombre lo utilizanlos componentes del framework para establecer el source u origen de 
            eventos lanzado por la aplicacion
            </summary>
        </member>
        <member name="T:Fwk.Mail.Imap.ImapException">
            <summary>
            Imap Exception class which implements Imap releted exceptions
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.message">
            <summary>
            Exception message string
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.errorType">
            <summary>
            Error Type: ImapErrorEnum
            </summary>
        </member>
        <member name="M:Fwk.Mail.Imap.ImapException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">string</param>
        </member>
        <member name="M:Fwk.Mail.Imap.ImapException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">string</param>
            <param name="inner">Exception</param>
        </member>
        <member name="M:Fwk.Mail.Imap.ImapException.#ctor(Fwk.Mail.Imap.ImapException.ImapErrorEnum)">
            <summary>
            Constructor
            </summary>
            <param name="Type">ImapErrorEnum</param>
        </member>
        <member name="M:Fwk.Mail.Imap.ImapException.#ctor(Fwk.Mail.Imap.ImapException.ImapErrorEnum,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="Type">ImapErrorEnum</param>
            <param name="error">string</param>
        </member>
        <member name="M:Fwk.Mail.Imap.ImapException.GetDescription(Fwk.Mail.Imap.ImapException.ImapErrorEnum)">
            <summary>
            Get Description for specified Type
            </summary>
            <param name="Type">ImapErrorEnum type</param>
            <returns>string</returns>
        </member>
        <member name="P:Fwk.Mail.Imap.ImapException.Message">
            <summary>
            Property Message (string)
            </summary>
        </member>
        <member name="P:Fwk.Mail.Imap.ImapException.Type">
            <summary>
            Property : Type (ImapErrorEnum)
            </summary>
        </member>
        <member name="T:Fwk.Mail.Imap.ImapException.ImapErrorEnum">
            <summary>
            enum for Imap exception errors
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_URI">
            <summary>
            failure parsing the url
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_MESSAGEUID">
            <summary>
            invalid message uid in the url
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_AUTHFAILED">
            <summary>
            invalid username/password in the url
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_CONNECT">
            <summary>
            failure connecting to imap server
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_NOTCONNECTED">
            <summary>
            not connected to any IMAP
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_LOGIN">
            <summary>
            failure logging into imap server
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_LOGOUT">
            <summary>
            failure to logout from imap server
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_INSUFFICIENT_DATA">
            <summary>
            not enough data to restore
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_TIMEOUT">
            <summary>
            timeout while waiting for response
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_SOCKET">
            <summary>
            socket error while receiving
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_QUOTA">
            <summary>
            failure getting the quota information
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_SELECT">
            <summary>
            failure selecting a IMAP folder
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_EXAMINE">
            <summary>
            failure examining an IMAP folder
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_NOTSELECTED">
            <summary>
             No folder is currently selected
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_SEARCH">
            <summary>
            failure to search
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_SEARCH_EXACT">
            <summary>
            failed to do exact match after search
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_INVALIDSEARCHKEY">
            <summary>
            unsupported search key
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_GETMIME">
            <summary>
            failure to get message MIME
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_INVALIDHEADER">
            <summary>
            Message Header is in invalid format
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_FETCHBODYSTRUCT">
            <summary>
            Failed to fetch the bodystructure
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_FETCHMSG">
            <summary>
            failure to fetch a IMAP message
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_MEMALLOC">
            <summary>
            failure to allocate memory
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_ENCODINGERROR">
            <summary>
            failure to encode the audio content
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_FILEIO">
            <summary>
            failure to read/write the audio content
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_STOREMSG">
            <summary>
            failure to store the message in IMAP
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_EXPUNGE">
            <summary>
            failure to issue expunge command
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_INVALIDPARAM">
            <summary>
            invalid parameter to API
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_CAPABILITY">
            <summary>
            Capability command error
            </summary>
        </member>
        <member name="F:Fwk.Mail.Imap.ImapException.ImapErrorEnum.IMAP_ERR_SERIOUS">
            <summary>
            Serious Problem
            </summary>
        </member>
        <member name="T:Fwk.Params.Svc.SearchParamTypeService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.Isvc.SearchParamType.Params.Enabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Params.Isvc.SearchParamType.Params.ParamTypeId">
            <summary>
            Tipo de parametro
            </summary>
        </member>
        <member name="P:Fwk.Params.Isvc.SearchParamType.Params.ParentId">
            <summary>
            Param de referencia. Referencia a un parametro padre
            </summary>
        </member>
    </members>
</doc>
