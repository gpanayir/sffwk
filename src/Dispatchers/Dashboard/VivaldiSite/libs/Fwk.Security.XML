<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fwk.Security</name>
    </assembly>
    <members>
        <member name="T:Fwk.Security.SVC.ResetUserPasswordService">
            <summary>
            Este servicio permite resetear la clave de un usuario 
            </summary>
        </member>
        <member name="M:Fwk.Security.SVC.ResetUserPasswordService.Execute(Fwk.Security.ISVC.ResetUserPassword.ResetUserPasswordReq)">
            <summary>
            
            </summary>
            <param name="pServiceRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Security.ISVC.ResetUserPassword.ResetUserPasswordReq">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.ISVC.ResetUserPassword.ResetUserPasswordReq.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.ISVC.ResetUserPassword.Param">
            <summary>
            Parametros de reseteo
            </summary>
        </member>
        <member name="P:Fwk.Security.ISVC.ResetUserPassword.Param.UserName">
            <summary>
            Nombre de usuario al que se le resseteara la password
            </summary>
        </member>
        <member name="P:Fwk.Security.ISVC.ResetUserPassword.Param.NewPassword">
            <summary>
            Buevo valor de la password
            </summary>
        </member>
        <member name="T:Fwk.Security.ISVC.ResetUserPassword.ResetUserPasswordRes">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.FwkMembership">
            <summary>
            Esta clase contiene metodos estaticos para interactuar con seguridad basada en memberships de asp_netdb 
            
            Permite trabajar con :
            Roles
            Usuarios
            Membership Applications
            Reglas
            Proveedores de autorizacion
            
            
            Este componente require que la base de datos a la que el proveedor de membership apunta contenga las tablas que se definene
            en el siguiente script: Fwk_Security.sql
            </summary>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CreateCategory(Fwk.Security.FwkCategory,System.String)">
            <summary>
            
            </summary>
            <param name="pFwkCategory"></param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CreateCategory(Fwk.Security.FwkCategory,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="pFwkCategory"></param>
            <param name="connectionStringName">Nombre de cadena de coneccion del archivo de configuracion.-</param>
            <param name="applicationName">Nombre de la aplicacion. Coincide con CompanyId en la arquitectura</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetAllCategories(System.String)">
            <summary>
            Obtiene las Categorias de una determinada aplicacion
            </summary>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetAllCategories(System.String,System.String)">
            <summary>
            Obtiene las Categorias de una determinada aplicacion. Recibe el Nombre de cadena de coneccion del archivo de configuracion.-
            </summary>
            <param name="applicationName">Nombre de la aplicacion. Coincide con CompanyId en la arquitectura</param>
            <param name="connectionStringName">Nombre de cadena de coneccion del archivo de configuracion.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetFwkRules_By_Category(System.Int32,System.String)">
            <summary>
            Busca las reglas agrupadas en una determinada categoria.-
            </summary>
            <param name="pCategoryId">Identificador de categoria</param>
            <param name="connectionStringName">Cadena de coanexion</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CreateRuleInCategory(Fwk.Security.FwkCategory,System.String)">
            <summary>
            Crea una categoria nueva
            </summary>
            <param name="pFwkCategory"></param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CreateRuleInCategory(Fwk.Security.FwkCategory,System.String,System.String)">
            <summary>
            Elimina todas las filas de RuleInCategory y las agrega nuevamente.- 
            Las que agrega son las que se mofificaron desde el front end u otro origen.-
            </summary>
            <param name="pFwkCategory"></param>
            <param name="applicationName">Nombre de la aplicacion. Coincide con CompanyId en la arquitectura</param>
            <param name="connectionStringName">Nombre de cadena de coneccion del archivo de configuracion.-</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetSubCategoriesByCategoryId(System.Int32,System.String)">
            <summary>
            Busca las subcategorias de una categoria padre.-
            </summary>
            <param name="pCategoryId">Id de la categoria padre.-</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetSubCategoriesByCategoryId(System.Int32,System.String,System.String)">
            <summary>
            Obtiene las subcategorias de una categoria.-
            </summary>
            <param name="pCategoryId"></param>
            <param name="applicationName">Nombre de la aplicacion de membership</param>
            <param name="connectionStringName">Nombre de cadena de coneccion</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.RemoveCategory(System.Int32,System.String)">
            <summary>
             Remueve una categoria y sus subcategorias recursivamente
            </summary>
            <param name="parentFwkCategoryId"></param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.RemoveCategory(System.Int32,System.String,System.String)">
            <summary>
            Elimina de la base de datos una categoria y sus subcategorias recursivamente
            </summary>
            <param name="parentFwkCategoryId"></param>
            <param name="applicationName">Nombre de la aplicacion. Coincide con CompanyId en la arquitectura</param>
            <param name="connectionStringName">Nombre de cadena de coneccion del archivo de configuracion.-</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.ExistCategory(System.String,System.Int32,System.String)">
            <summary>
            Verifica la existencia de una determinada categoria
            </summary>
            <param name="pCategoryName">Nombre de la categoria</param>
            <param name="pParentCategoryId">Id de la categora padre</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.ExistCategory(System.String,System.Int32,System.String,System.String)">
            <summary>
            Verifica la existencia de una determinada categoria
            </summary>
            <param name="pCategoryName">Nombre de la categoria</param>
            <param name="pParentCategoryId">Id de la categora padre</param>
            <param name="applicationName">Nombre de la app</param>
            <param name="connectionStringName">Nombre de la cadena de conecci√≥n</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CategoryContainChilds(System.Int32,System.String)">
            <summary>
            Determina si la categoria contiene subcategorias.-
            </summary>
            <param name="parentFwkCategoryId">id de categoria</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CategoryContainChilds(System.Int32,System.String,System.String)">
            <summary>
            Determina si la categoria contiene subcategorias.-
            </summary>
            <param name="parentFwkCategoryId">id de categoria</param>
            <param name="applicationName">Nombre de la aplicacion. Coincide con CompanyId en la arquitectura</param>
            <param name="connectionStringName">Nombre de cadena de coneccion del archivo de configuracion.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.UpdateParentCategory(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Actualiza parent category id una determinada categoria
            </summary>
            <param name="category_to_move_Id"></param>
            <param name="currentParentCategoryId"></param>
            <param name="newParentCategoryId"></param>
            <param name="providerName"></param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.UpdateParentCategory(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Actualiza parent category id una determinada categoria
            </summary>
            <param name="category_to_move_Id"></param>
            <param name="currentParentCategoryId"></param>
            <param name="newParentCategoryId"></param>
            <param name="applicationName"></param>
            <param name="connectionStringName"></param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.ValidateUser(System.String,System.String,System.String)">
            <summary>
            Verifican que usuario y password sean validos
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CreateUser(System.String,System.String,System.String,System.String)">
            <summary>
            Crea un usuario
            Si el usuario existe lanza una (System.Web.Security.MembershipCreateUserException ex) 
            </summary>
            <param name="userName">Usuario</param>
            <param name="password">Clave</param>
            <param name="email">Email</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CreateUser(System.String,System.String,System.String)">
            <summary>
            Crea un usuario
            Si el usuario existe lanza una (System.Web.Security.MembershipCreateUserException ex) 
            </summary>
            <param name="userName">Usuario</param>
            <param name="password">Clave</param>   
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@,System.String)">
            <summary>
            Crea un usuario
            </summary>
            <param name="userName">Nombre de usuario, nombre de logging</param>
            <param name="password">Clave</param>
            <param name="email">Correo electronico</param>
            <param name="passwordQuestion">Pregunta secreta</param>
            <param name="passwordAnswer">Respuesta secreta</param>
            <param name="isApproved">True si esta aprovado </param>
            <param name="pStatus"><see cref="T:System.Web.Security.MembershipCreateStatus"/></param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns><see cref="T:Fwk.Security.Common.User"/></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.DeleteUser(System.String,System.String)">
            <summary>
            Elimina un usuario de la Base de Datos
            </summary>
            <param name="userName">Nombre de Usuario</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.UpdateUser(Fwk.Security.Common.User,System.String,System.String)">
            <summary>
            Actualiza informacion de un usuario. Incluso el nombre
            </summary>
            <param name="fwkUser">Usuario con los nuevos datos </param>
            <param name="userName">Nombre de usuario a modificar. Nombre del usuario actual</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetAllUsers(System.String)">
            <summary>
            Obtiene una lista de usuarios
            </summary>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns>lista de <see cref="T:Fwk.Security.Common.User"/></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetUserAnRoles(System.String,System.String)">
            <summary>
            Obtiene la informacion de un usuario y junto a sus roles
            </summary>
            <param name="userName">Nombre de usuario</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetUser(System.String,System.String)">
            <summary>
            Obtiene un usuario
            </summary>
            <param name="userName">Nombre del Usuario que se desea obtener</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns><see cref="T:Fwk.Security.Common.User"/></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetMembershipUser(System.String,System.String)">
            <summary>
            Obtiene un objeto <see cref="T:System.Web.Security.MembershipUser"/> por medio del SqlMembershipProvider correspondiente
            </summary>
            <param name="userName">Nombre de usuario</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.UserExist(System.String,System.String)">
            <summary>
            Determina si existe el usuario para un determinado proveedor de seguridad. 
            </summary>
            <param name="userName">Nombre de usuario a chequear</param>
            <param name="providerName">Proveedor de seguridad configurado</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.UnApproveUser(System.String,System.String)">
            <summary>
            Desaprueva un usuario
            </summary>
            <param name="userName">Nombre del usuario que se desea bloquear</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.ApproveUser(System.String,System.String)">
            <summary>
             Aprueva un usuario
            </summary>
            <param name="userName">Nombre del usuario a desbloquear</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.UnlockUser(System.String,System.String)">
            <summary>
            Toma como entrada un nombre de usuario y actualiza el campo en el origen de datos que asigna a la propiedad 
            IsLockedOut el valor false. 
            El m√©todo UnlockUser devuelve true si el registro para el usuario suscripto se actualiza correctamente; de lo contrario, false.
            
            The asp.net membership has the mechanism that it locks out a user's account if she tries to authenticate herself with false password five times, 
            by default, or within 10 minute window. It is all for possible hacks. And I had no mechanism to unlock the user account.
            Because locked user can not login, I needed some way to unlock the user. 
            Firstly, I was frustrated since I saw the MembershipUser class's IsLockedOut read only property.
            </summary>
            <param name="userName">Nombre del usuario a desbloquear</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.ResetUserPassword(System.String,System.String)">
            <summary>
            Resetea el Password de un usuario
            </summary>
            <param name="userName">Nombre del Usuario</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns>Password auto generado</returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.ChangeUserPassword(System.String,System.String,System.String,System.String)">
            <summary>
            Cambia el password de un usuario
            </summary>
            <param name="userName">Nombre del Usuario</param>
            <param name="pOldPassword">Password Viejo</param>
            <param name="pNewPassword">Password Nuevo</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns>Bool indicando el resultado de la operaci√≥n</returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetUserNameByEmail(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="email">e-mail</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns>Nombre del usuario</returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetUsersInRole(System.String,System.String)">
            <summary>
            Obtiene una lista de usuarios de un determinado rol.- Solo obtiene nombre de usuario
            </summary>
            <param name="roleName">Nombre del rol</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns>lista de <see cref="T:Fwk.Security.Common.User"/> </returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetUsersDetailedInRole(System.String,System.String)">
            <summary>
            Obtiene una lista de usuarios con sus detalles pertenecientes a un determinado rol
            </summary>
            <param name="roleName">Nombre del rol</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns>lista de <see cref="T:Fwk.Security.Common.User"/> </returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CreateRolesToUser(Fwk.Security.Common.RolList,System.String,System.String)">
            <summary>
            Asigna roles a un usuario
            </summary>
            <param name="pRolList">Lista de roles</param>
            <param name="userName">Usuario</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.RemoveUserFromRole(System.String,System.String,System.String)">
            <summary>
            Quita a un usuario de un rol
            </summary>
            <param name="userName">Nombre de Usuario</param>
            <param name="roleName">Nombre de Rol</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.RemoveUserFromRoles(System.String,Fwk.Security.Common.RolList,System.String)">
            <summary>
            Quita a un usuario de una lista de Roles
            </summary>
            <param name="userName">Nombre de Usuario</param>
            <param name="pRolList">Lista de Nombres de Roles</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.RemoveUsersFromRole(System.String[],System.String,System.String)">
            <summary>
            Quita un array de usuarios de un Rol
            </summary>
            <param name="pUsersName">Array de usuario</param>
            <param name="roleName">Nombre del Rol</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.RemoveUsersFromRoles(System.String[],Fwk.Security.Common.RolList,System.String)">
            <summary>
            Quita una array de Usuarios de una lista de Roles
            </summary>
            <param name="pUsersName">Array de Nombres</param>
            <param name="pRolList">Lista de Roles</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetApplicationID(System.String,System.String)">
            <summary>
            Retorna el GUID de la aplicaci√≥n busca en la bse de datos configurada por defecto 
            </summary>
            <param name="pCompanyId">Nombre de la aplicaci√≥n </param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns>GUID de la aplicacion</returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetApplication(System.String,System.String)">
            <summary>
            Obtiene de la bases de datos aspnet y tabla aspnet_Applications el Guid de la Aplicacion
            </summary>
            <param name="applicationName">Nombre de la aplicacion. Coincide con CompanyId en la arquitectura</param>
            <param name="cnnstringName"></param>
            <returns></returns>
        </member>
        <member name="F:Fwk.Security.FwkMembership.providerCnnStrings">
            <summary>
            Dictionary con (providerName,cnnstringName)
            </summary>
        </member>
        <member name="M:Fwk.Security.FwkMembership.#cctor">
            <summary>
            Constructor estatico de las FwkMembership
            Inicia las secciones configuradas securityConfiguration y system.web/membership
            </summary>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetAllMembershiproviderNameArray">
            <summary>
            Obtiene la lista de proovedores membership
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetRoleProvider(System.String)">
            <summary>
            
            </summary>
            <param name="providerName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetSqlMembershipProvider(System.String)">
            <summary>
            Esta funcion permite encontrar el proveedor Sql configurado por medio de su nombre
            </summary>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetProvider_ConnectionString(System.String)">
            <summary>
            
            </summary>
            <param name="providerName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetProvider_ConnectionStringName(System.String)">
            <summary>
            Obtiene la cadena de coneccion relacionada al proveedor
            </summary>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetErrorMessage(System.Web.Security.MembershipCreateStatus)">
            <summary>
             Obtiene el mensaje de error para las constantes<see cref="T:System.Web.Security.MembershipCreateStatus"/> (Ingles)
            </summary>
            <param name="status">MembershipCreateStatus</param>
            <returns>Mensaje de error</returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.BuildRuleExpression(System.Collections.Generic.List{Fwk.Security.Common.Rol},System.Collections.Generic.List{Fwk.Security.Common.User})">
            <summary>
            Construye la lista de usuarios y de roles desde la expresion de la regla.-
            </summary>
            <param name="assignedRoleList"></param>
            <param name="excludeUserList"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.BuildRolesAndUsers_FromRuleExpression(System.String,Fwk.Security.Common.RolList@,Fwk.Security.Common.UserList@)">
            <summary>
            Retorba las lista de usuarios y roles desde la expresion de la regla
            </summary>
            <param name="wexpression"></param>
            <param name="assignedRoleList"></param>
            <param name="excludeUserList"></param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetAllRoles(System.String)">
            <summary>
            Obtiene todos los Roles
            The GetAllRoles method calls the RoleProvider.GetAllRoles method of the  role provider to get a list of all the roles from the data source for an application. 
            Only the roles for the application that is specified in the ApplicationName property are retrieved.
            </summary>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns>RolList con todos los roles</returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetRolesForUser(System.String,System.String)">
            <summary>
            Obtiene una lista de Roles (RolList) de un usuario
            </summary>
            <param name="userName">Nombre de Usuario</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns>RolList con los roles del usuario</returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetRolesForUser_StringArray(System.String,System.String)">
            <summary>
            Obtiene una lista de Roles  de un usuario
            </summary>
            <param name="userName">Nombre de Usuario</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns>String[] con los roles del usuario</returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CreateRole(System.String,System.String,System.String)">
            <summary>
             Crea un nuevo Rol
            </summary>
            <param name="roleName">Nombre del rol</param>
            <param name="description">Descripcion del rol</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.DeleteRole(System.String,System.String)">
            <summary>
            Elimina un Rol.- Lanza exepcion si el rol tiene miembros asociados
            </summary>
            <param name="roleName">Nombre del Rol</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.UpdateRole(System.String,System.String,System.String)">
            <summary>
            Actualiza un rol
            </summary>
            <param name="roleName">Nombre del rol</param>
            <param name="description">Descripcion del rol</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CreateUsersToRole(System.String,System.Collections.Generic.List{Fwk.Security.Common.User},System.String)">
            <summary>
            Asigna usuarios a un determinado rol 
            </summary>
            <param name="rolName">Nombre del rol</param>
            <param name="userList">Lista usuarios</param>
            <param name="providerName">Nombre del proveedor de membership</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetRulesByRole(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="roleName">Nombre del rol.</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetRulesByRole(System.String,System.String,System.String)">
            <summary>
            Retorna las reglas en las que esta vinculado un Rol
            </summary>
            <param name="roleName">Nombre del rol.</param>
            <param name="applicationName">Nombre de la aplicacion. Coincide con CompanyId en la arquitectura</param>
            <param name="connectionStringName">Nombre de cadena de coneccion del archivo de configuracion.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.AnyRulesHasRole(System.String,System.String)">
            <summary>
            Verifica si alguna regla en la base de datos esta vinculada al rol
            </summary>
            <param name="roleName">Nombre del rol.</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.AnyRulesHasRole(System.String,System.String,System.String)">
            <summary>
            Verifica si alguna regla en la base de datos esta vinculada al rol
            </summary>
            <param name="roleName">Nmbre del rol </param>
            <param name="applicationName">App Id</param>
            <param name="connectionStringName">nombde de cadena de coneccion</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetRule(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="ruleName"></param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetRule(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="ruleName"></param>
            <param name="applicationName"></param>
            <param name="connectionStringName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetRules(System.String)">
            <summary>
            Obtiene las reglas de una determinada aplicacion
            </summary>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetRules(System.String,System.String)">
            <summary>
            Obtiene las reglas de una determinada aplicacion
            Reemplaza aspnet_Rules_s
            </summary>
            <param name="connectionStringName">Nombre de cadena de coneccion del archivo de configuracion.-</param>
            <param name="applicationName">Nombre de la aplicacion. Coincide con CompanyId en la arquitectura</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetRulesList(System.String)">
            <summary>
            
            </summary>
            <param name="providerName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetRulesList(System.String,System.String)">
            <summary>
            Retorna una lista de reglas de una determinada coneccion 
            </summary>
            <param name="applicationName">Nombre de la aplicacion. Coincide con CompanyId en la arquitectura</param>
            <param name="connectionStringName">Nombre de cadena de coneccion del archivo de configuracion.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetRulesAuxList(System.String)">
            <summary>
            Retorna una lista de reglas de una determinada coneccion 
            </summary>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.GetRulesAuxList(System.String,System.String)">
            <summary>
            Retorna una lista de reglas de una determinada coneccion 
            </summary>
            <param name="applicationName">Nombre de la aplicacion. Coincide con CompanyId en la arquitectura</param>
            <param name="connectionStringName">Nombre de cadena de coneccion del archivo de configuracion.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.ExistRule(System.String,System.String)">
            <summary>
            Determina si existe una regla.-
            </summary>
            <param name="pRuleName">Nombre de la regla</param>
            <param name="providerName">Nombre del proveedor de membership</param>
            <returns>boolean</returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.ExistRule(System.String,System.String,System.String)">
            <summary>
            Determina si existe una regla.-
            </summary>
            <param name="pRuleName">Nombre de la regla</param>
            <param name="applicationName">Nombre de la aplicaci√≥n</param>
            <param name="connectionStringName">Nombre de la regla</param>
            <returns>boolean</returns>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CreateRule(Fwk.Security.FwkAuthorizationRule,System.String)">
             <summary>
             crea una regla rule si es que la regla todavia no existe
             </summary>
            <param name="rule">aspnet_Rules</param>
             <param name="providerName">Nombre del proveedor de membership</param>
             <returns>void</returns>
             <Date>2010-12-22T11:29:57</Date>
             <Author>moviedo</Author>
        </member>
        <member name="M:Fwk.Security.FwkMembership.CreateRule(Fwk.Security.FwkAuthorizationRule,System.String,System.String)">
            <summary>
            Crea una regla
            </summary>
            <param name="rule"></param>
            <param name="applicationName">Nombre de la aplicacion. Coincide con CompanyId en la arquitectura</param>
            <param name="connectionStringName">Nombre de cadena de coneccion del archivo de configuracion.-</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.UpdateRuleAndRuleName(Fwk.Security.FwkAuthorizationRule,System.String,System.String)">
            <summary>
            Update rule and also allow change the name.-
            Update all rules in category relationships
            </summary>
            <param name="rule">Rule object <see cref="T:Fwk.Security.FwkAuthorizationRule"/></param>
            <param name="newRuleName">New rule name</param>
            <param name="providerName">Membership provider name</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.UpdateRule(Fwk.Security.FwkAuthorizationRule,System.String)">
            <summary>
            Update rule. Not allow update the ruel name .-
            </summary>
            <param name="rule">Rule object <see cref="T:Fwk.Security.FwkAuthorizationRule"/></param>
            <param name="providerName">Membership provider name</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.UpdateRule(Fwk.Security.FwkAuthorizationRule,System.String,System.String,System.String)">
            <summary>
            UpdateRule
            </summary>
            <param name="rule"></param>
            <param name="applicationName">Nombre de la aplicacion. Coincide con CompanyId en la arquitectura</param>
            <param name="connectionStringName">Nombre de cadena de coneccion del archivo de configuracion.-</param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.Rule_AppenRol(Fwk.Security.Common.Rol,Fwk.Security.FwkAuthorizationRule)">
            <summary>
            Agrega un rol a la expresion de la regla.- Modifica Expression
            </summary>
            <param name="pRol"></param>
            <param name="pRule"></param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.RemoveRol_From_Rule(Fwk.Security.Common.Rol,Fwk.Security.FwkAuthorizationRule)">
            <summary>
             Quita un rol de la expresion de la regla.- Modifica Expression
            </summary>
            <param name="pRol"></param>
            <param name="pRule"></param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.DeleteRule(System.String,System.String)">
            <summary>
            Elimina una regla de la base de datos
            </summary>
            <param name="ruleName"></param>
            <param name="providerName"></param>
        </member>
        <member name="M:Fwk.Security.FwkMembership.DeleteRule(System.String,System.String,System.String)">
            <summary>
            Elimina una regla de la base de datos
            </summary>
            <param name="ruleName"></param>
            <param name="applicationName"></param>
            <param name="connectionStringName"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Security.ActiveDirectory.ADProperties">
            <summary>
            This class will have the properties corresponding to the information of the AD User.  
            This is a static class. This class is having all the properties as constant string for ADUser.  
            This class is giving readable name to all the properties of user details. 
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.OBJECTCLASS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.CONTAINERNAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.LASTNAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.COUNTRYNOTATION">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.CITY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.STATE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.TITLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.POSTALCODE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.PHYSICALDELIVERYOFFICENAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.FIRSTNAME">
            <summary>
            givenName
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MIDDLENAME">
            <summary>
            initials
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.DISTINGUISHEDNAME">
            <summary>
            DN Es uno de los mas importantes atributos LDAP
            CN=Jay Jamieson, OU= Newport,DC=cp,DC=com
            CN=GS_CalidadTP_R,OU=Avanzados,OU=Analistas,OU=Seguridad,DC=Datacom,DC=org
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.INSTANCETYPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.WHENCREATED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.WHENCHANGED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.DISPLAYNAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.USNCREATED">
            <summary>
            uSNCreated
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MEMBEROF">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.USNCHANGED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.COUNTRY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.DEPARTMENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.COMPANY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.PROXYADDRESSES">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.STREETADDRESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.DIRECTREPORTS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.NAME">
            <summary>
            Reprecenta la propiedad: name 
            Nombre completo
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.OBJECTGUID">
            <summary>
            Reprecenta la propiedad: objectGUID
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.USERACCOUNTCONTROL">
            <summary>
            Reprecenta la propiedad: userAccountControl Se utiliza para dehabilitar una cuenta.-
            Valor 514 dehabilita, mientras 512 mantiene la cuenta lista para logon.-
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.BADPWDCOUNT">
            <summary>
            Reprecenta la propiedad: badPwdCount
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.CODEPAGE">
            <summary>
            Reprecenta la propiedad: codePage
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.COUNTRYCODE">
            <summary>
            Reprecenta la propiedad: countryCode
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.BADPASSWORDTIME">
            <summary>
            Reprecenta la propiedad: badPasswordTime
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.LASTLOGOFF">
            <summary>
            Reprecenta la propiedad: lastLogoff
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.LASTLOGON">
            <summary>
            Reprecenta la propiedad: lastLogon
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.PWDLASTSET">
            <summary>
            Reprecenta la propiedad: pwdLastSet
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.PRIMARYGROUPID">
            <summary>
            Reprecenta la propiedad: primaryGroupID
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.OBJECTSID">
            <summary>
            Reprecenta la propiedad: objectSid
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.ADMINCOUNT">
            <summary>
            Reprecenta la propiedad: adminCount
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.ACCOUNTEXPIRES">
            <summary>
            Reprecenta la propiedad: accountExpires
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.LOGONCOUNT">
            <summary>
            Reprecenta la propiedad: logonCount
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.LOGINNAME">
            <summary>
            Reprecenta la propiedad: sAMAccountName
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.SAMACCOUNTTYPE">
            <summary>
            Reprecenta la propiedad: sAMAccountType
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.SHOWINADDRESSBOOK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.LEGACYEXCHANGEDN">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.USERPRINCIPALNAME">
            <summary>
             Reprecenta la propiedad: userPrincipalName
             Nombre usuario como jhendrix@actionline.com
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.EXTENSION">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.SERVICEPRINCIPALNAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.OBJECTCATEGORY">
            <summary>
            Defines the Active Directory Schema category. For example, objectCategory = Person
            Ej: CN=Group,CN=Schema,CN=Configuration,DC=Datacom,DC=org
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.DSCOREPROPAGATIONDATA">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.LASTLOGONTIMESTAMP">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.EMAILADDRESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MANAGER">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MOBILE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.PAGER">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.FAX">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.HOMEPHONE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MSEXCHUSERACCOUNTCONTROL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MDBUSEDEFAULTS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MSEXCHMAILBOXSECURITYDESCRIPTOR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.HOMEMDB">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MSEXCHPOLICIESINCLUDED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.HOMEMTA">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MSEXCHRECIPIENTTYPEDETAILS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MAILNICKNAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MSEXCHHOMESERVERNAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MSEXCHVERSION">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MSEXCHRECIPIENTDISPLAYTYPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.MSEXCHMAILBOXGUID">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.NTSECURITYDESCRIPTOR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.DESCRIPTION">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.LOCKOUTTIME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADProperties.ISACCOUNTLOCKED">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.SVC.CreateUserService">
            <summary>
            Servicio que crea un usuario en las memberships
            </summary>
        </member>
        <member name="M:Fwk.Security.SVC.CreateUserService.Execute(Fwk.Security.ISVC.CreateUsers.CreateUserReq)">
            <summary>
            
            </summary>
            <param name="pServiceRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Fwk.Security.SVC.AuthenticateUserService_old">
            <summary>
            Servicio de autenticacion de usuarios
            El servicio reliza las siguientes actividades:
                Autentica contra LDAP
                Autentica contra Memberships
                Retorna usuario y roles de Membersuips
                En caso de error de autentuicacion  (Bloqueo de usuario inexistencia , dominio inexistente, config no configurados) se rerna la correspondiente 
                exepcion
            </summary>
        </member>
        <member name="T:Fwk.Security.Common.WaitCursorHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.WaitCursorHelper.#ctor(System.Windows.Forms.Control)">
            <summary>
            
            </summary>
            <param name="owner"></param>
        </member>
        <member name="T:Fwk.Security.ActiveDirectory.ADHelper">
            <summary>
            Wrapper de Active Directory con funcionalidades para interactuar contra un controlador de dominio .-
            
            </summary>
        </member>
        <member name="T:Fwk.Security.ActiveDirectory.DirectoryServicesBase">
            <summary>
            Wrapper base de para interactuar con Servicios de Directorio
            
            </summary>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.DirectoryServicesBase.LogonUser(System.String,System.String,System.String,System.Int32,System.Int32,Fwk.Security.ActiveDirectory.SafeTokenHandle@)">
            <summary>
            
            </summary>
            <param name="lpszUsername"></param>
            <param name="lpszDomain"></param>
            <param name="lpszPassword"></param>
            <param name="dwLogonType"></param>
            <param name="dwLogonProvider"></param>
            <param name="phToken"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.DirectoryServicesBase.CloseHandle(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.DirectoryServicesBase.GetLastError">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.DirectoryServicesBase._directoryEntrySearchRoot">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.DirectoryServicesBase._LDAPPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.DirectoryServicesBase._LDAPDomain">
            <summary>
            Domain DC name
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.DirectoryServicesBase._LDAPUser">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.DirectoryServicesBase._LDAPPassword">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.DirectoryServicesBase._LDAPDomainName">
            <summary>
            Domain name ej Pelsoft-ar
            </summary>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.DirectoryServicesBase.GetGroupFromMemberOf(System.String)">
            <summary>
            
            </summary>
            <param name="memberOf"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.DirectoryServicesBase.DomainsUrl_GetList(System.String)">
            <summary>
            Busca la lista de dominios en una base de datos
            </summary>
            <param name="cnnStringName">Nombre de la cadena de coneccion configurada</param>
            <returns>Lista de DomainsUrl</returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.DirectoryServicesBase.DomainsUrl_GetList2(System.String)">
            <summary>
            Busca la lista de dominios en una base de datos.- A diferencia de DomainsUrl_GetList. Este metodo recive como parametro 
            la cadena de coneccion y no su nombre de App.config
            </summary>
            <param name="cnnString">Cadena de coneccion</param>
            <returns>Lista de DomainsUrl</returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.DirectoryServicesBase.DomainsUrl_Get(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="cnnString"></param>
            <param name="domainName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.DirectoryServicesBase.SetError(Fwk.Exceptions.TechnicalException)">
            <summary>
            Establece los valores basicos de error producido en el componente ADHelper
            </summary>
            <param name="te"></param>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.DirectoryServicesBase.LDAPDomainName">
            <summary>
            Domain name ej Pelsoft-ar
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.DirectoryServicesBase.LDAPPath">
             <summary>
            Ej: 
            LDAP://domain/DC=xxx,DC=com
            LDAP://CORRSF71NT13.Datacom.org/DC=Datacom,DC=org
            LDAP://Pc1.alcoDatacom.com.ar/OU=Datacom Sabattini,dc=alcoDatacom,dc=com,dc=ar
             </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.DirectoryServicesBase.LDAPUser">
             <summary>
            LDAPUser property
             </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.DirectoryServicesBase.LDAPPassword">
             <summary>
             LDAPPassword property
            This property is reading the LDAP Password from the config file.
             </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.DirectoryServicesBase.LDAPDomain">
            <summary>
            Dominio
            </summary>
        </member>
        <member name="T:Fwk.Security.ActiveDirectory.IDirectoryService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.IDirectoryService.User_Get_ByName(System.String)">
            <summary>
            Obtiene un usuario por nombre sin tener en cuenta las credenciales del usuario
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.IDirectoryService.User_Exists(System.String)">
            <summary>
            Verifica si el usuario existe.- 
            </summary>
            <param name="userName">Nombre de loging de usuario</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.IDirectoryService.User_SearchGroupList(System.String)">
            <summary>
            Retorna los grupos a los que pertenece el usuario .-
            </summary>
            <param name="userName">Nombre completo del usuario</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.IDirectoryService.User_CheckLogin(System.String,System.String)">
            <summary>
            Retorna la lista de usuarios pertenecientes a un determinado grupo
            </summary>
            <param name="groupName">Nombre del grupo</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.IDirectoryService.Group_GetByName(System.String)">
            <summary>
            Obtiene un ADGroup que reprecenta un grupo 
            </summary>
            <param name="pName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.IDirectoryService.Groups_GetAll">
            <summary>
            Obtiene todo los grupos pertenecientes al dominio.-
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.IDirectoryService.LDAPPath">
            <summary>
            Ej: 
            LDAP://domain/DC=xxx,DC=com
            LDAP://CORRSF71NT13.Datacom.org/DC=Datacom,DC=org
            LDAP://Pc1.alcoDatacom.com.ar/OU=Datacom Sabattini,dc=alcoDatacom,dc=com,dc=ar
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.IDirectoryService.LDAPUser">
            <summary>
            LDAPUser property
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.IDirectoryService.LDAPPassword">
            <summary>
            LDAPPassword property
            This property is reading the LDAP Password from the config file.
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.IDirectoryService.LDAPDomain">
            <summary>
            Dominio
            </summary>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="domainName"></param>
            <param name="cnnStringName"></param>
            <param name="performWindowsContextImpersonalization"></param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.#ctor(System.String,System.String)">
            <summary>
            Esta sobrecarga obtiene datos de impersonalizacion en la tabla Domain controllers atravez de 
            la conexion pasada por parametros
            </summary>
            <param name="domainName"></param>
            <param name="cnnStringName"></param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="path">Domain path Ej </param>
            <param name="user">AD admin user</param>
            <param name="pwd">password de un usuario con pivilegios suficiente</param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_Get(System.String,System.String,Fwk.Security.ActiveDirectory.LoginResult@)">
            <summary>
            Busca un usuario con autenticacion 
            Returna como parametro el resultado de loging
            </summary>
            <param name="userName">nombre de loging de usuario</param>
            <param name="password">password</param>
            <param name="loginResult">resultado de loging</param>
            <returns>DirectoryEntry</returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_Get(System.String)">
            <summary>
            Obtiene un usuario por nombre sin tener en cuenta las credenciales del usuario
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.Person_Get(System.String)">
            <summary>
            Obtiene un usuario por nombre sin tener en cuenta las credenciales del usuario
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_IsAccountActive(System.String)">
            <summary>
            
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_IsAccountLocked(System.String)">
            <summary>
             Gets or sets a value indicating if the user account is locked out
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_Unlock(System.String)">
            <summary>
            Unlock user
            </summary>
            <param name="userName"></param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_SetLockedStatus(System.String,System.Boolean)">
            <summary>
            Alternate of Unlock user method
            </summary>
            <param name="userName"></param>
            <param name="lockUser">true = loock user</param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_SetActivation(System.String,System.Boolean)">
            <summary>
            Enable or disable user acount 
            </summary>
            <param name="userName"></param>
            <param name="disabled"></param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_ResetPwd(System.String,System.String,System.Boolean)">
            <summary>
            Reset password. To execute it ensure that you was used impersonalization constructor. 
            </summary>
            <param name="userName">user name</param>
            <param name="password">new passsword</param>
            <param name="unlockAccount">Lock or unlock flag</param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_Get_ByName(System.String)">
            <summary>
            Obtiene un usuario por nombre sin tener en cuenta las credenciales del usuario
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_Exists(System.String)">
            <summary>
            Verifica si el usuario existe.- 
            </summary>
            <param name="userName">Nombre de loging de usuario</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_SearchGroupList(System.String)">
            <summary>
            Retorna los grupos a los que pertenece el usuario .-
            </summary>
            <param name="userName">Nombre completo del usuario</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_SearchGroupStringList(System.String)">
            <summary>
            Obtiene todo los usuarios pertenecientes al dominio.-
            Busca por cn nombre@mail retorna el sAMAccountName ejemplo: moviedo
            </summary>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.Users_SearchByGroupName(System.String)">
            <summary>
            Retorna la lista de usuarios pertenecientes a un determinado grupo
            </summary>
            <param name="groupName">Nombre del grupo</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.Users_Search_StartName(System.String)">
            <summary>
            Retorna una lista de usuarios cuyo nombre comiense con fname.-
            Ejemplo: evel*
            </summary>
            <param name="fName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_CheckLogin(System.String,System.String)">
            <summary>
            Este metodo permite determinar si un usuario puede loguearce en un dominio
            tambien chequea si la cuenta esta activa
            </summary>
            <param name="userName">Nombre de usuario a autenticar</param>
            <param name="password">Password del usuario.-</param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_ChangeEmail(System.String,System.String)">
            <summary>
            Metodo de prueva
            </summary>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_IsAccountActive(System.DirectoryServices.DirectoryEntry)">
            <summary>
            Este metodo realiza una aperacion logica con el valor userAccountControl para detern√ßminar si la cuenta de usuario 
            esta abilitada o no.-
            La bandera para determinar si la cuenta est√° activa es un valor binario (decimal = 2)
            Los valores predeterminados de UserAccountControl para  Usuario normal: 0x200 (512)
            </summary>
            <param name="de"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.User_IsAccountLockout(System.DirectoryServices.DirectoryEntry)">
            <summary>
            Este metodo realiza una aperacion logica con el valor userAccountControl para detern√ßminar si la cuenta de usuario 
            esta habilitada o no.-
            La bandera para determinar si la cuenta est√° bloqueada es un valor binario (decimal = 16)
            Los valores predeterminados de UserAccountControl para  Usuario normal: 0x200 (512)
            En un dominio basado en Windows Server 2003, LOCK_OUT y 
            PASSWORD_EXPIRED han sido reemplazados con un nuevo atributo denominado ms-DS-User-Account-Control-Computed
            </summary>
            <param name="de"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.Group_GetByName(System.String)">
            <summary>
            Obtiene un ADGroup que reprecenta un grupo 
            </summary>
            <param name="pName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.Groups_GetAll">
            <summary>
            Obtiene todo los grupos pertenecientes al dominio.-
            </summary>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.Group_GetUsersArray(System.String)">
            <summary>
            Lista simple de grupos de usuario
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.Domain_GetList1">
            <summary>
            Obtiene la lista de dominios
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.Domain_GetList">
            <summary>
            Obtiene la lista de dominios
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.GlobalCatalogs(System.String)">
            <summary>
            Lista de Global Catalog 
            Global Catalog : es una parte de la base de datos de nuestro Active Directory usado para realizar b√∫squedas en este.
            </summary>
            <param name="domainName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.ProcessActiveDirectoryException(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.GetValue(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="nameValue"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.GetStringProperties(System.DirectoryServices.DirectoryEntry)">
            <summary>
            Obtiene un string con todas las propiedades de un objeto de AD
            </summary>
            <param name="pDirectoryEntry"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.GetStringProperties(System.DirectoryServices.SearchResult)">
            <summary>
            Obtiene un string con todas las propiedades de un objeto de AD
            </summary>
            <param name="pSearchResult"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.GetGroupFromMemberOf(System.String)">
            <summary>
            
            </summary>
            <param name="memberOf"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.GetProperty(System.DirectoryServices.DirectoryEntry,System.String)">
            <summary>
            Obtiene una propiedad del objeto de active directory .-
            </summary>
            <param name="userDetail"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.GetProperty(System.DirectoryServices.SearchResult,System.String)">
            <summary>
            Obtiene una propiedad del objeto de active directory .-
            </summary>
            <param name="result"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.FilterOutDomain(System.String)">
            <summary>
            Quita el dominio en la especificacion del nombre de usuario, si es 
            que existe tal valor.-
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADHelper.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ISVC.UpdateUser.Param.UserName">
            <summary>
            Nombre de usuario a modificar. Nombre del usuario actual
            Si no se espes√ßifica se toma que el nobre de usuario no se modifica y se utilizara el username de 
            la clase UsersBE
            </summary>
        </member>
        <member name="T:Fwk.Security.SVC.SearchAllRulesService">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.SVC.UpdateRulesCategoryService">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.BE.UserInfoList">
            <summary>
            Colecci√≥n de UserInfo
            </summary>
        </member>
        <member name="M:Fwk.Security.BE.UserInfoList.GetUsersListFromXml(System.String)">
            <summary>
            Metodo estatico que retorna un objeto UsersList apartir de un xml.-
            </summary>
            <param name="pXml">String con el xml</param>
            <returns>UsersList</returns>
        </member>
        <member name="T:Fwk.Security.BE.UserInfo">
            <summary>
            Clase ReadOnlyque contiene 
            informaci√≥n breve sobre un usuario.
            </summary>
        </member>
        <member name="M:Fwk.Security.BE.UserInfo.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase UserInfo
            con valores por defecto (vacios).
            </summary>
        </member>
        <member name="M:Fwk.Security.BE.UserInfo.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Inicializa una nueva instancia de la clase UserInfo
            </summary>
            <param name="userId">Identificador del usuario</param>
            <param name="userName">Nombre del usuario</param>
            <param name="fullName">Nombre completo del usuario</param>
        </member>
        <member name="M:Fwk.Security.BE.UserInfo.#ctor(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <param name="userName"></param>
        </member>
        <member name="M:Fwk.Security.BE.UserInfo.GetUserInfoFromXml(System.String)">
            <summary>
            Metodo estatico que retorna un objeto UsersBE apartir de un xml.-
            </summary>
            <param name="pXml">String con el xml</param>
            <returns>UsersBE</returns>
        </member>
        <member name="P:Fwk.Security.BE.UserInfo.UserId">
            <summary>
            Identificador del usuario.
            </summary>
        </member>
        <member name="P:Fwk.Security.BE.UserInfo.Name">
            <summary>
            Nombre del usuario
            </summary>
        </member>
        <member name="P:Fwk.Security.BE.UserInfo.FullName">
            <summary>
            Nombre del usuario
            </summary>
        </member>
        <member name="P:Fwk.Security.BE.UserInfo.ActiveFlag">
            <summary>
            Obtiene o establece si el usuario esta activo.
            </summary>
        </member>
        <member name="P:Fwk.Security.BE.UserInfo.Roles">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.BE.UserInfo.AuthenticationMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.Common.FwkPrincipal">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.FwkPrincipal.#ctor(System.Security.Principal.IIdentity,System.String[])">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.FwkPrincipal.IsInRole(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.FwkPrincipal.Identity">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.ActiveDirectory.ADUser">
            <summary>
            Clase que reprecenta un usuario de active directory.- 
            1.       This class has read only properties for fetching First Name, Last Name, City, Login Name etc.
            2.       Constructor of the class is taking one parameter of type DirectoryEntry class.
            3.       In Constructor all the information about ADUser is getting fetched using static class ADProperties.
            4.       There are two static functions inside this class. GetUser and GetProperty
            5.       Get Property is returning a string which holds property of AD User.
            6.       GetUser static function is returning an ADUser. 
            </summary>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADUser.#ctor(System.DirectoryServices.DirectoryEntry)">
            <summary>
            Constructor
            </summary>
            <param name="directoryUser"></param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADUser.#ctor(System.DirectoryServices.SearchResult)">
            <summary>
            Constructor
            </summary>
            <param name="resultUserUser"></param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADUser.FilterByName(System.String,System.Collections.Generic.List{Fwk.Security.ActiveDirectory.ADUser})">
            <summary>
            
            </summary>
            <param name="pName"></param>
            <param name="pSource"></param>
            <returns></returns>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.LoginResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.UserAccountControl">
            <summary>
            Reprecenta la propiedad: userAccountControl Se utiliza para dehabilitar una cuenta.-
            Valor 514 dehabilita, mientras 512 mantiene la cuenta lista para logon.-
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.Department">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.FirstName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.MiddleName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.LastName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.LoginName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.LoginNameWithDomain">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.StreetAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.City">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.State">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.PostalCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.Country">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.HomePhone">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.Extension">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.Mobile">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.Fax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.EmailAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.Company">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADUser.ManagerName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.SVC.DeleteRulesCategoryService">
            <summary>
            Elimina una categoriua y sus subvategorias asocoadas de forma recursiva
            </summary>
        </member>
        <member name="T:Fwk.Security.BE.UsersBEList">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.BE.UsersBE">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.BE.UsersBE.DNI">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.BE.UsersBE.LastName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.Common.ObjectDomain">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.ObjectDomain.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.ObjectDomain.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="pName"></param>
        </member>
        <member name="M:Fwk.Security.Common.ObjectDomain.FilterByName``1(System.String,System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pName"></param>
            <param name="pSource"></param>
            <returns></returns>
        </member>
        <member name="P:Fwk.Security.Common.ObjectDomain.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.ObjectDomain.Category">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.ObjectDomain.FullName">
            <summary>
            Nombre completo EJ: Marcelo Fabian Oviedo
            </summary>
        </member>
        <member name="T:Fwk.Security.Common.ObjectDomainGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.ObjectDomainGroup.#ctor(System.DirectoryServices.DirectoryEntry)">
            <summary>
            
            </summary>
            <param name="pDirectoryEntry"></param>
        </member>
        <member name="M:Fwk.Security.Common.ObjectDomainGroup.#ctor">
            <summary>
            Constructor vasio. 
            Deja null CN y OU.
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.ObjectDomainGroup.#ctor(System.String)">
            <summary>
            Info de active directory respecto al grupo. No es el nombre 
            </summary>
            <param name="pNameInfo">Cadena: "CN=GS_Bin_Desarrollo_RW,OU=Seguridad,DC=Datacom,DC=org"</param>
        </member>
        <member name="M:Fwk.Security.Common.ObjectDomainGroup.RefreshADUsers">
            <summary>
            Vuelve a cargar los grupos del cual es muiembro desde el dominio
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.ObjectDomainGroup.ActiveDirectoryMembersGroups">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.ObjectDomainGroup.Users">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.ObjectDomainGroup.CN">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.ObjectDomainGroup.OU">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.ObjectDomainGroup.Domain">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.ObjectDomainGroup.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.ObjectDomainGroup.DistinguishedName">
            <summary>
            CN=GS_CalidadTP_R,OU=Avanzados,OU=Analistas,OU=Seguridad,DC=Datacom,DC=org
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.ObjectDomainGroup.UserPrincipalName">
            <summary>
            Nombre usuario como moviedo@actionline.com.- A munudo abreviado como UPN y se ve como 
            un e-mail.- Este valor debe ser unico en el Arbol (Forest) y es usado para loguearce en este.- 
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.ObjectDomainGroup.FirstName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.SVC.SearchAllUsersService">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.SVC.CreateRuleService">
            <summary>
            Servicio que crea una nueva regla
            </summary>
        </member>
        <member name="P:Fwk.Security.ISVC.DeleteRulesCategory.Param.CategoryId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.FwkAuthorizationRule">
            <summary>
            Represents the configuration data for a
            rule that is governed by an 
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationRuleProvider"/>.
            </summary>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRule.#ctor">
            <summary>
            Initializes a new instance of the 
            </summary>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRule.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="!:AuthorizationRuleData"/> class with the specified name and expression.
            </summary>
            <param name="name">The name of the rule</param>
            <param name="expression">The expression to evaluate.</param>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRule.#ctor(System.String,System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="!:AuthorizationRuleData"/> class with the specified name and expression.
            </summary>
            <param name="name">The name of the rule</param>
            <param name="expression">The expression to evaluate.</param>
            <param name="applicationId">Apliocacion  la que pertenece.</param>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRule.#ctor(Fwk.Security.FwkAuthorizationRuleAux)">
            <summary>
            Initializes a new instance of the <see cref="T:Fwk.Security.FwkAuthorizationRuleAux"/> class with the specified name and expression.
            </summary>
            <param name="pFwkAuthorizationRule">Framework rule</param>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRule.SetExpression(System.String)">
            <summary>
            
            </summary>
            <param name="newExpresion"></param>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRule.GetXml">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRule.SetXml(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRule.Clone">
            <summary>
            Crea una copia espejo de la clase.-
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRule.System#ICloneable#Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Fwk.Security.FwkAuthorizationRule.Expression">
            <summary>
            Gets or sets the expression associated with
            this rule.
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkAuthorizationRule.CategoryId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkAuthorizationRule.ApplicationId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkAuthorizationRule.ApplicationName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkAuthorizationRule.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkAuthorizationRule.Description">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.FwkAuthorizationRuleList">
            <summary>
            Lista de reglas de autorizacion
            </summary>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRuleList.Populate(Fwk.Security.FwkAuthorizationRuleAuxList)">
            <summary>
            
            </summary>
            <param name="pFwkAuthorizationRuleauxList"></param>
        </member>
        <member name="T:Fwk.Security.FwkCategory">
            <summary>
            Categorias de reglass
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkCategory.ParentId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkCategory.CategoryId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkCategory.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkCategory.FwkRulesInCategoryList">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.FwkCategoryList">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.FwkAuthorizationRuleAux">
            <summary>
            Esta clace es una auxiliar de FwkAuthorizationRule con la exepcion de que no  hereda de NamedConfigurationElement
            lo que la hace serializable .-
            </summary>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRuleAux.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Fwk.Security.FwkAuthorizationRuleAux"/> class.
            </summary>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRuleAux.#ctor(Fwk.Security.FwkAuthorizationRule)">
            <summary>
            Initializes a new instance of the <see cref="T:Fwk.Security.FwkAuthorizationRuleAux"/> class with the specified name and expression.
            </summary>
            <param name="pFwkAuthorizationRule">Framework rule</param>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRuleAux.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="!:AuthorizationRuleData"/> class with the specified name and expression.
            </summary>
            <param name="name">The name of the rule</param>
            <param name="expression">The expression to evaluate.</param>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRuleAux.SetExpression(System.String)">
            <summary>
            
            </summary>
            <param name="newExpresion"></param>
        </member>
        <member name="P:Fwk.Security.FwkAuthorizationRuleAux.Expression">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkAuthorizationRuleAux.CategoryId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkAuthorizationRuleAux.ApplicationId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkAuthorizationRuleAux.ApplicationName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkAuthorizationRuleAux.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkAuthorizationRuleAux.Description">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.FwkAuthorizationRuleAuxList">
            <summary>
            Esta clace es una auxiliar de FwkAuthorizationRuleList con la exepcion de que no  hereda de NamedConfigurationElement
            lo que la hace serializable .-
            </summary>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRuleAuxList.Populate(Fwk.Security.FwkAuthorizationRuleList)">
            <summary>
            
            </summary>
            <param name="pFwkAuthorizationRuleList"></param>
        </member>
        <member name="T:Fwk.Security.SVC.SearchAllRulesCategoryService">
            <summary>
            Busca todas las cateegorias de un provider
            Por cada categoria tambien trae las reglas asociadas
            </summary>
        </member>
        <member name="T:Fwk.Security.SVC.SearchRulesCategoryByParamService">
            <summary>
            Busca todas las cateegorias de un provider
            Por cada categoria tambien trae las reglas asociadas
            </summary>
        </member>
        <member name="T:Fwk.Security.Common.User">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.Common.User._FirstName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.User.#ctor(System.Web.Security.MembershipUser)">
            <summary>
            
            </summary>
            <param name="pMembershipUser"></param>
        </member>
        <member name="M:Fwk.Security.Common.User.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="pUserName"></param>
        </member>
        <member name="M:Fwk.Security.Common.User.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.User.AddRoles(Fwk.Security.Common.RolList)">
            <summary>
            Crea el array de roles.- Eleimina los qe exuisten 
            </summary>
            <param name="rolList"><see cref="T:Fwk.Security.Common.RolList"/></param>
        </member>
        <member name="M:Fwk.Security.Common.User.GetRolList">
            <summary>
            Obtiene la lista de roles de usuarios en formato de RolList
            </summary>
            <returns></returns>
        </member>
        <member name="P:Fwk.Security.Common.User.ModifiedDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.CreationDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.ModifiedByUserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.MustChangePassword">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.FirstName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.LastName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.Roles">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.UserId">
            <summary>
            Identificador de usuario int 32. No es la clave GUID. 
            Este valor es para comp'atibilidad con sistenmas existentes
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.AnswerPassword">
            <summary>
            Answer security password
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.QuestionPassword">
            <summary>
            Question security password
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.Password">
            <summary>
            User Password
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.Comment">
            <summary>
            User comment or description
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.AppName">
            <summary>
            Application name
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.UserName">
            <summary>
            User name
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.LastActivityDate">
            <summary>
            Last user activity
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.IsLockedOut">
            <summary>
            Get User Lock
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.IsApproved">
            <summary>
            User Approved 
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.Email">
            <summary>
            User Email
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.User.AuthenticationMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.Common.UserList">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.UserList.GetArraNames">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fwk.Security.Common.Rol">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.Rol.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.Rol.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="pname"></param>
        </member>
        <member name="M:Fwk.Security.Common.Rol.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="description"></param>
        </member>
        <member name="M:Fwk.Security.Common.Rol.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Fwk.Security.Common.Rol.RolName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.Rol.Description">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.RolList.GetArrayNames">
            <summary>
            retorna los roles separados por coma
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fwk.Security.ActiveDirectory.ADGroup">
            <summary>
            Grupo de Active Directory
            </summary>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADGroup.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADGroup.#ctor(System.DirectoryServices.DirectoryEntry)">
            <summary>
            
            </summary>
            <param name="directoryGroup"></param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.ADGroup.FilterByName(System.String,System.Collections.Generic.List{Fwk.Security.ActiveDirectory.ADGroup})">
            <summary>
            
            </summary>
            <param name="pName"></param>
            <param name="pSource"></param>
            <returns></returns>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADGroup.Domain">
            <summary>
            Nombre del domijio al que pertenece el grupo
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADGroup.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADGroup.FirstName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADGroup.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADGroup.DistinguishedName">
            <summary>
            Ejemplos:
            CN=GS_Comite_comunicacion_RW,OU=Seguridad,DC=Datacom,DC=org
            CN=GS_CalidadTP_R,OU=Avanzados,OU=Analistas,OU=Seguridad,DC=Datacom,DC=org
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADGroup.Category">
            <summary>
            Defines the Active Directory Schema category. For example, objectCategory = Person
            Ej: CN=Group,CN=Schema,CN=Configuration,DC=Datacom,DC=org
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADGroup.CN">
             <summary>
            Common Name
             </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADGroup.OU">
            <summary>
            Reprecenta la lista de unidades organizacionales del dominio
            OU = Organizational Unit 
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.ADGroup.Users">
            <summary>
            Lista de usuarios del grupo
            </summary>
        </member>
        <member name="T:Fwk.Security.SVC.GetUserInfoByParamsService">
            <summary>
            Obtiene info del usuario :
            Retorna User y Roles
            intenta obtener el usuario en la membership 
            </summary>
        </member>
        <member name="F:Fwk.Security.ISVC.AuthenticateUser.Params._Name">
            <summary>
            No utilizado para la llamada al servicio solo se pone
            por que se debe utilizar si o si una clase en el request.
            </summary>
        </member>
        <member name="T:Fwk.Security.ActiveDirectory.ADAccountOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_TEMP_DUPLICATE_ACCOUNT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_NORMAL_ACCOUNT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_INTERDOMAIN_TRUST_ACCOUNT">
            <summary>
            Dec = 512 
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_WORKSTATION_TRUST_ACCOUNT">
            <summary>
            Dec =2048
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_SERVER_TRUST_ACCOUNT">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_DONT_EXPIRE_PASSWD" -->
        <member name="F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_SCRIPT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_ACCOUNTDISABLE">
            <summary>
            ACCOUNTDISABLE: la cuenta de usuario est√° desactivada. (dec = 2)
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_HOMEDIR_REQUIRED">
            <summary>
            HOMEDIR_REQUIRED: se requiere la carpeta principal. 
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_LOCKOUT">
            <summary>
            16
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_PASSWD_NOTREQD">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_PASSWD_CANT_CHANGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_ACCOUNT_LOCKOUT">
            <summary>
            16
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADAccountOptions.UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM">
            <summary>
            The ADS_USER_FLAG_ENUM enumeration defines the flags used for setting user properties in the directory. These flags correspond to values of the userAccountControl attribute in Active Directory when using the LDAP provider, and the userFlags attribute when using the WinNT system provider.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_SCRIPT">
            <summary>
            The logon script is executed. This flag does not work for the ADSI LDAP provider on either read or write operations. For the ADSI WinNT provider, this flag is read-only data, and it cannot be set for user objects.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_ACCOUNTDISABLE">
            <summary>
            The user account is disabled.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_HOMEDIR_REQUIRED">
            <summary>
            The home directory is required.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_LOCKOUT">
            <summary>
            The account is currently locked out.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_PASSWD_NOTREQD">
            <summary>
            No password is required.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_PASSWD_CANT_CHANGE">
            <summary>
            The user cannot change the password. This flag can be read, but not set directly. 
            For more information and a code example that shows how to prevent a user from changing the password, see User Cannot Change Password.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED">
            <summary>
            The user can send an encrypted password.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_TEMP_DUPLICATE_ACCOUNT">
            <summary>
            This is an account for users whose primary account is in another domain. This account provides user access to this domain, but not to any domain that trusts this domain. Also known as a local user account.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_NORMAL_ACCOUNT">
            <summary>
            This is a default account type that represents a typical user.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_INTERDOMAIN_TRUST_ACCOUNT">
            <summary>
            This is a permit to trust account for a system domain that trusts other domains.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_WORKSTATION_TRUST_ACCOUNT">
            <summary>
            This is a computer account for a Windows 2000 Professional or Windows 2000 Server that is a member of this domain.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_SERVER_TRUST_ACCOUNT">
            <summary>
            This is a computer account for a system backup domain controller that is a member of this domain.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_DONT_EXPIRE_PASSWD">
            <summary>
            When set, the password will not expire on this account.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_MNS_LOGON_ACCOUNT">
            <summary>
            This is an Majority Node Set (MNS) logon account. With MNS, you can configure a multi-node Windows cluster without using a common shared disk.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_SMARTCARD_REQUIRED">
            <summary>
            When set, this flag will force the user to log on using a smart card.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_TRUSTED_FOR_DELEGATION">
            <summary>
            When set, the service account (user or computer account), under which a service runs, is trusted for Kerberos delegation. Any such service can impersonate a client requesting the service.
            To enable a service for Kerberos delegation, set this flag on the userAccountControl property of the service account.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_NOT_DELEGATED">
            <summary>
            When set, the security context of the user will not be delegated to a service even if the service account is set as trusted for Kerberos delegation.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_USE_DES_KEY_ONLY">
             <summary>
             Restrict this principal to use only Data Encryption Standard (DES) encryption types for keys.
            Active Directory Client Extension:  Not supported.
             </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_DONT_REQUIRE_PREAUTH">
            <summary>
            This account does not require Kerberos preauthentication for logon.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_PASSWORD_EXPIRED" -->
        <member name="F:Fwk.Security.ActiveDirectory.ADS_USER_FLAG_ENUM.ADS_UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION">
            <summary>
            The account is enabled for delegation. This is a security-sensitive setting; accounts with this option enabled should be strictly controlled. This setting enables a service running under the account to assume a client identity and authenticate as that user to other remote servers on the network.
            </summary>
        </member>
        <member name="T:Fwk.Security.ActiveDirectory.LoginResult">
            <summary>
            Determina el resultado de loging de usuario
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.LoginResult.LOGIN_OK">
            <summary>
            Logoing exitoso
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.LoginResult.LOGIN_USER_DOESNT_EXIST">
            <summary>
            Uario no existe
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.LoginResult.LOGIN_USER_ACCOUNT_INACTIVE">
            <summary>
            Cuenta inactiva
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.LoginResult.LOGIN_USER_OR_PASSWORD_INCORRECT">
            <summary>
            Clave incorrecta
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.LoginResult.LOGIN_USER_ACCOUNT_LOCKOUT">
            <summary>
            Cuenta de usuario bloqueada
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.LoginResult.ERROR_SERVER_IS_NOT_OPERATIONAL">
            <summary>
            Este mensaje de error puede deberse a cualquiera de las siguientes situaciones:
                La configuraci√≥n de red del cliente es incorrecta. Esto incluye la ausencia de direcciones incorrecta para los servidores DNS localizar y resolver los controladores de dominio o.
                La configuraci√≥n del cliente Winsock Proxy es incorrecta, impedir la resoluci√≥n correcta de controladores de dominio disponibles y sus direcciones.
                Conectividad de red entre el cliente y los controladores de dominio descubiertos consultando DNS no est√° disponible.
                Comunicaci√≥n a trav√©s de la red para el controlador de dominio funciona correctamente, pero devolvi√≥ una respuesta no v√°lida al cliente.
                El controlador de dominio utilizado como origen de datos mientras est√° abierto el complemento ha convertido en no disponible.
            </summary>
        </member>
        <member name="T:Fwk.Security.ActiveDirectory.LOGON32">
            <summary>
            
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.LOGON32.LOGON32_PROVIDER_DEFAULT">
            <summary>
            This parameter causes LogonUser to create a primary token.
            Use the standard logon provider for the system. 
            This is the recommended value for the dwLogonProvider parameter. 
            It provides maximum compatibility with current and future releases of Windows NT.
            </summary>
        </member>
        <member name="F:Fwk.Security.ActiveDirectory.LOGON32.LOGON32_LOGON_INTERACTIVE">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.ActiveDirectory.LDAPHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.LDAPHelper.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="domainName"></param>
            <param name="pConnString"></param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.LDAPHelper.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="domainName">Nombre corto del dominio, por ej "ALCO"</param>
            <param name="connStringName">Nombre de la cadena conexi√≥n de la base de datos de la tabla UrlDomains</param>
            <param name="pSecure">Especifica si establece una conexi√≥n SSL</param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.LDAPHelper.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="domainName"></param>
            <param name="connStringName"></param>
            <param name="pSecure"></param>
            <param name="chekControllers"></param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.LDAPHelper.User_Logon(System.String,System.String,Fwk.Exceptions.TechnicalException@)">
            <summary>
            Esta funcion utiliza chequea el loging de un usuario contra un dominio
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="logError"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.LDAPHelper.GetImpersonate_SearchRoot_DE">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.LDAPHelper.User_Get(System.String,System.String,Fwk.Security.ActiveDirectory.LoginResult@)">
            <summary>
            Busca un usuario con autenticacion 
            Returna como parametro el resultado de loging
            </summary>
            <param name="userName">nombre de loging de usuario</param>
            <param name="password">password</param>
            <param name="loginResult">resultado de loging</param>
            <returns>DirectoryEntry</returns>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.LDAPHelper.User_Exists(System.String)">
            <summary>
            Devuelve true o false seg√∫n el usuario especificado exista en LDAP
            </summary>
            <param name="pUserName">Nombre de usuario</param>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.LDAPHelper.GetDomainControllersByDomainId(System.String,System.Int32)">
            <summary>
            Obtiene la lista de controladores de dominio para un DomainID especificado
            </summary>
        </member>
        <member name="P:Fwk.Security.ISVC.ValidateUserExist.Params.UserName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.Properties.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.AD_GetingDomainsURL_Error">
            <summary>
              Looks up a localized string similar to There are some problems while trying to get domains urls from database. Check the following connectionstring key &quot;{0}&quot;  in the appconfig file.-.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.AD_Impersonation_Error">
            <summary>
              Looks up a localized string similar to Impersonalization error.- The security Active directory throw  the following error : {0}.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.AD_NotExistDomainsURL">
            <summary>
              Looks up a localized string similar to Domain {0} not exist .
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.ApplicationName_NotExist">
            <summary>
              Looks up a localized string similar to The application named {0} for cnnstringName {1} not exist. Pleasse check the app config file to ensure the correct application name..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.AuthenticateTitleMessage">
            <summary>
              Looks up a localized string similar to Authenticate user.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.AuthorizationRuleNotFoundMsg">
            <summary>
              Looks up a localized string similar to Authorization rule {0} not found in configuration..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.CheckingRolesMessage">
            <summary>
              Looks up a localized string similar to Checking roles for &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.ConnectionStringNotExist">
            <summary>
              Looks up a localized string similar to The connection string {0} not exist. Please check {1} provider security settings .-.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.CreateTokenMessage">
            <summary>
              Looks up a localized string similar to The identity was added to the cache and can be retrieved using the token {0}.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.CreateTokenRequiresIdentityMessage">
            <summary>
              Looks up a localized string similar to Cannot create a token for non-authenticated user. This scenario requires running the &quot;Authenticate user using credentials&quot; scenario first.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.ExpiredTokenErrorMessage">
            <summary>
              Looks up a localized string similar to Failed to retrieve the identity. The supplied token is expired..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.ExpireTokenErrorMessage">
            <summary>
              Looks up a localized string similar to Cannot expire token because it couldn&apos;t be created..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.ExpireTokenMessage">
            <summary>
              Looks up a localized string similar to Token was expired..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.IdentityMessage">
            <summary>
              Looks up a localized string similar to Identity: {0}.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.MembershipSecurityGenericError">
             <summary>
               Looks up a localized string similar to There are some problems while trying to use the Fwk Security Block t, please check the following error messages: 
            
            {0}
            
            This block requires a database configured with the ASP.NET services schema. Please make sure the database has been initialized using the aspnet_regsql.exe script, and the system&apos;s app.config file contains the correct database connection string..
             </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.ProfileNotFoundMessage">
            <summary>
              Looks up a localized string similar to Unable to find a profile for current user. You can create a profile by using the &quot;Write profile information about a user&quot; button..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.ProfileStringMessage">
            <summary>
              Looks up a localized string similar to First Name: {0}
             Last Name: {1}
             Preferred Theme: {2}.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.ProfileUpdatedMessage">
             <summary>
               Looks up a localized string similar to The profile has been saved for &quot;{0}&quot;
            .
             </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.ProviderNameNotFound">
            <summary>
              Looks up a localized string similar to The security {1} provider {0} not found.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.RetrieveIdentityErrorMessage">
            <summary>
              Looks up a localized string similar to Cannot retrieve identity because the token doesn&apos;t exist..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.RetrieveIdentityMessage">
            <summary>
              Looks up a localized string similar to The identity with the following information was retrieved using the token
            Name: {0}
            Authorization Type: {1}.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.RolCreatedMessage">
            <summary>
              Looks up a localized string similar to Role {0} created..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.Role_NotEmpty">
            <summary>
              Looks up a localized string similar to Role {0} is not empty, have users associates..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.Role_WithoutRules">
            <summary>
              Looks up a localized string similar to The {0} not contain rules.-.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.RoleExist">
            <summary>
              Looks up a localized string similar to Role {0} already exists..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.RoleProviderConfigError">
            <summary>
              Looks up a localized string similar to There are some problems while trying to get roles config information, please check the config fale from your application .
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.Rule_Crate_Error">
            <summary>
              Looks up a localized string similar to There are some problems while trying to create rule.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.Rule_ExistError">
            <summary>
              Looks up a localized string similar to Ther rule  {0} already exists..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.Rule_NotExist">
            <summary>
              Looks up a localized string similar to The rule {0} not exist.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.Rule_ProblemGetingAlls_Error">
            <summary>
              Looks up a localized string similar to There are some problems while trying to get all rule information, please check the application name  &quot;{0}&quot; ..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.Rule_ProblemGetingData_Error">
            <summary>
              Looks up a localized string similar to There are some problems while trying to get rule information, please check the following rule name: {0}.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.RuleCreatedMessage">
            <summary>
              Looks up a localized string similar to The rule {0} was successfully created.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.RuleProvider_NotExist">
            <summary>
              Looks up a localized string similar to The rule provider for provider named {0} not exist in config file.-  Check the following rule provider named  &quot;{0}&quot;  in the appconfig file.-.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.RuleResultFalseMessage">
             <summary>
               Looks up a localized string similar to Rule: {0}
            Result: user is not authorized.
             </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.RuleResultTrueMessage">
             <summary>
               Looks up a localized string similar to Rule: {0}
            Result: user is authorized.
             </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.RuleUpdatedMessage">
            <summary>
              Looks up a localized string similar to The rule {0} was successfully updated.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_AddRoleErrorMessage">
            <summary>
              Looks up a localized string similar to Please select a user name and select or enter a role..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_AddRoleMessage">
            <summary>
              Looks up a localized string similar to Role {1} added for user {0}..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_Created_Error_Message">
            <summary>
              Looks up a localized string similar to There are some problems while trying to create user {0}.  Status: {1}.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_CreatedMessage">
            <summary>
              Looks up a localized string similar to User {0} created..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_CreateTitleMessage">
            <summary>
              Looks up a localized string similar to Create a new user.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_DeleteErrorMessage">
            <summary>
              Looks up a localized string similar to Please select a user name..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_DeleteMessage">
            <summary>
              Looks up a localized string similar to User {0} deleted..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_DeleteRoleErrorMessage">
            <summary>
              Looks up a localized string similar to Please select a user name and a role..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_DeleteRoleMessage">
            <summary>
              Looks up a localized string similar to Role {1} deleted for user {0}..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_Existe">
            <summary>
              Looks up a localized string similar to User {0} already exists..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_IdentityRoleErrorMessage">
            <summary>
              Looks up a localized string similar to Please enter a user name and select a role and a rule..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_IdentityRoleMessage">
             <summary>
               Looks up a localized string similar to Username: {0}
            Role: {1}.
             </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_InvalidCredentialsMessage">
            <summary>
              Looks up a localized string similar to Failed to authenticate user {0}. Either the username does not exist in database or the provided password is not correct. Or user is not aproved.-.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_NoApproved">
            <summary>
              Looks up a localized string similar to El usuario {0} no es un usuario aprobado. Pongase en contacto con su administrador de seguridad..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_NotExist">
            <summary>
              Looks up a localized string similar to The user {0} not exist.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_NullIdentityMessage">
            <summary>
              Looks up a localized string similar to You should authenticate a user first..
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_ProfileMessage">
             <summary>
               Looks up a localized string similar to The following profile has been read for &quot;{0}&quot;
              {1}
            .
             </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.User_RoleMessage">
            <summary>
              Looks up a localized string similar to  Member of role {0}: {1}.
            </summary>
        </member>
        <member name="P:Fwk.Security.Properties.Resource.ValidCredentialsMessage">
            <summary>
              Looks up a localized string similar to Successfully authenticated user {0}.
            </summary>
        </member>
        <member name="T:Fwk.Security.FwkMembershipScripts">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkMembershipScripts.User_u">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkMembershipScripts.RuleInCategory_i">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkMembershipScripts.Rule_i">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkMembershipScripts.Rule_u">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkMembershipScripts.RulesInCategory_d">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkMembershipScripts.Category_d">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkMembershipScripts.ApplicationId_s">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.FwkMembershipScripts.Category_i">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.SVC.CreateRulesCategoryService">
            <summary>
            Servicio de creacion de nueva categoria
            </summary>
        </member>
        <member name="T:Fwk.Security.Impersonation">
            <summary>
            Perform windows context Impersonation
            </summary>
        </member>
        <member name="M:Fwk.Security.Impersonation.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor de la clase Impersonate
            Por defecto impersonaliza para realizar cambio de contrase√±a
            </summary>       
            <param name="userName">Dominio del usuario a impersonalizar</param>
            <param name="password">password</param>
            <param name="domain">Dominio ej Pelsoft</param>
        </member>
        <member name="M:Fwk.Security.Impersonation.Impersonate">
            <summary>
            Lleva a cabo la impersonalizacion
            </summary>
        </member>
        <member name="M:Fwk.Security.Impersonation.UnImpersonate">
            <summary>
            Termina la sesion y retorna a la anterior
            </summary>
        </member>
        <member name="T:Fwk.Security.ActiveDirectory.SafeTokenHandle">
            <summary>
            Proporciona una clase base para implementaciones de identificadores Win32 seguros en las que el valor 0 √≥ -1 indica un identificador no v√°lido.
            </summary>
        </member>
        <member name="M:Fwk.Security.ActiveDirectory.SafeTokenHandle.ReleaseHandle">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fwk.Security.SVC.UpdateUserService">
            <summary>
            Este servicio permite: 
            1 - Actualizar informacion del usuario en las memberships
            2 - Cambiar la clave del usuario
            </summary>
        </member>
        <member name="M:Fwk.Security.StaticsValues.Find_DomainUrlInfo(System.String)">
            <summary>
            Intenta buscar un objeto <see cref="T:Fwk.Security.ActiveDirectory.DomainUrlInfo"/>
            Si no lo encuenta lanza una TechnicalException con ErrorId = 4001 
            </summary>
            <param name="domainName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.StaticsValues.Find_ADHelper(System.String)">
            <summary>
            Busca un objeto <see cref="T:Fwk.Security.ActiveDirectory.ADHelper"/> si no lo encuentra intenta crearlo e insertarlo al diccionario.-
            La creacion del diccionario se hace para no instanciar cientos de veses la clase ADHelper. ya que esta tarea requiere ,mas uso de CPU que el costo de mantener en memoria 
            un diccionario con porcos ADHelper. 
            En el mundo reali no existiran gran cantidad de clases ADHelper, pero si muchas quisa cientos de ejecuciones del metodos de autenticacio, q son los que 
            crearian instancias de ADHelper.-
            </summary>
            <param name="domainName">Nombre del dominio</param>
            <returns></returns>
        </member>
        <member name="F:Fwk.Security.ISVC.GetUserInfoByParams.Param._UserName">
            <summary>
            No utilizado para la llamada al servicio solo se pone
            por que se debe utilizar si o si una clase en el request.
            </summary>
        </member>
        <member name="T:Fwk.Security.FwkAuthorizationRuleProvider">
            <summary>
            Represents an authorization provider that evaluates
            boolean expressions to determine whether 
            <see cref="T:System.Security.Principal.IPrincipal"/> objects
            are authorized.
            </summary>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRuleProvider.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Metodo requerido por exigencia de CustomAuthorizationProviderData todavia esta en desarrollo no se utiliza
            </summary>
            <param name="configurationItems"></param>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRuleProvider.#ctor(Fwk.Security.FwkAuthorizationRuleList)">
            <summary>
            Initialize an instance of the <see cref="T:Microsoft.Practices.EnterpriseLibrary.Security.AuthorizationRuleProvider"/> class.
            </summary>
            <param name="authorizationRules">The collection of rules.</param>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRuleProvider.#ctor(System.String)">
            <summary>
            Esta sobrecarga obtiene las reglas atravez de la base de datos. 
            Para obtener el origen de datos utiliza la configuracion del membership provider configurado
            </summary>
            <param name="proividerName">Nombre del membership provider</param>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRuleProvider.Authorize(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            Evaluates the specified authority against the specified context.
            </summary>
            <param name="principal">Must be an <see cref="T:System.Security.Principal.IPrincipal"/> object.</param>
            <param name="ruleName">The name of the rule to evaluate.</param>
            <returns><c>true</c> if the expression evaluates to true,
            otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Fwk.Security.FwkAuthorizationRuleProvider.GetAuthorizationRules">
            <summary>
            Obtiele la lista de reglas relacionadas al proveedor
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fwk.Security.ActiveDirectory.DomainUrlInfo">
            <summary>
            Reprecenta la configuracion de un dominino de active directory.- Esta ta entidad  tiene el esquema de una tabpl de sql server. Esta tabla tiene la informacion de los dominios de la 
            empresa 
            El script de la tabla se encuentra en el archivo DomainsUrlScript.txt
            </summary>    
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.DomainUrlInfo.DomainName">
            <summary>
            Nombre de dominio
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.DomainUrlInfo.LDAPPath">
            <summary>
            Url del dominio
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.DomainUrlInfo.Usr">
            <summary>
            Usuario de impersonalizacion
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.DomainUrlInfo.Pwd">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.DomainUrlInfo.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.DomainUrlInfo.SiteName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.ActiveDirectory.DomainUrlInfo.DomainDN">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.SVC.UpdateRulesService">
            <summary>
            Actualiza una coleccion de reglas
            </summary>
        </member>
        <member name="T:Fwk.Security.BC.UserBC">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.BC.UserBC.Create(Fwk.Security.Common.User)">
            <summary>
            Crea un nuevo usuario.
            </summary>
            <param name="pUser">UsuarioBE a crear</param>
            <returns>UserId del nuevo usuario.</returns>
        </member>
        <member name="M:Fwk.Security.BC.UserBC.Update(Fwk.Security.Common.User,System.String)">
            <summary>
            Actualiza los datos del usuario.
            </summary>
            <param name="pUser">Usuario que se desea actualizar.</param>
            <param name="userName">Nombre no modificado del usuario.- El nuevo nombre de usuario en caso de modifucacion 
            va en el parametro pUser </param>
            <param name="pCustomUserTable">Nombre de la tabla customizada</param>
        </member>
        <member name="M:Fwk.Security.BC.UserBC.ChangePassword(System.String,System.String,System.String)">
            <summary>
            Cambia la password.-
            Si pOldPassword es = null se resetea y luego se asigna pNewPassword
            </summary>
            <param name="pUserName">Nombre de usuario</param>
            <param name="pOldPassword">Password anterior.- Si es en String.Empty se resetea</param>
            <param name="pNewPassword">Nueva password</param>
        </member>
        <member name="M:Fwk.Security.BC.UserBC.ResetPassword(System.String,System.String)">
            <summary>
            Resetea clave de usuario estableciendo una nueva-
            </summary>
            <param name="userName">Nombre de usuario a resetear clave</param>
            <param name="password">Nueva clave</param>
        </member>
        <member name="M:Fwk.Security.BC.UserBC.Validate(Fwk.Security.Common.User,System.Boolean)">
            <summary>
            Valida si el usuario existe. y si no le falta el nombre
            </summary>
            <param name="pUser">UsersBE a validar.</param>
            <param name="pIsNewUser">Si es nuevo se verifica de otra forma</param>
        </member>
        <member name="M:Fwk.Security.BC.UserBC.GetUserByParams(System.String,Fwk.Security.Common.User@,Fwk.Security.Common.RolList@)">
            <summary>
            Obtiene la informacion de un usuario y su Custom de un usuario, junto a sus roles
            </summary>
            <param name="pUserName"></param>
            <param name="pRolList"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.BC.UserBC.Exist(System.String)">
            <summary>
            
            </summary>
            <param name="pUserName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.BC.UserBC.AuthenticateUser(System.String,System.String,Fwk.Security.Common.User@)">
            <summary>
            Obtiene el usauario de las Membership
              Si es NULL lanza Ex dentro de la llamada anterior
              
            Valida si esta aprovado o no el Usuario
            Valida usr y pass contra las Membership
              Si No es Valido lanza ex
              
            Si todo va OK lanza true y rellena  out pUser
              
            </summary>
            <param name="pUserName"></param>
            <param name="pPassword"></param>
            <param name="pUser"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.BC.UserBC.AuthenticateUser_AD(System.String,System.String,System.String)">
            <summary>
            Este metodo es para se usado cuano la autenticacion contra LDAP
            </summary>
            <param name="pUserName"></param>
            <param name="pPassword"></param>
            <param name="pDomain"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.BC.UserBC.MapListDomainToListString(System.Collections.Generic.List{Fwk.Security.ActiveDirectory.DomainUrlInfo})">
            <summary>
            
            </summary>
            <param name="pDomainUrlInfoList"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.BC.UserBC.GetUser(System.String)">
            <summary>
            
            </summary>
            <param name="pUserName"></param>
            <returns></returns>
        </member>
        <member name="M:Fwk.Security.BC.UserBC.GetAllUser">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fwk.Security.SVC.ValidateUserExistService">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fwk.Security.Common.FwkIdentity">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fwk.Security.Common.FwkIdentity.#ctor(System.Boolean,System.String,System.DirectoryServices.DirectoryEntry)">
            <summary>
            
            </summary>
            <param name="pIsLogin"></param>
            <param name="pAuthenticationType"></param>
            <param name="pDirectoryEntry"></param>
        </member>
        <member name="M:Fwk.Security.Common.FwkIdentity.RefreshADGroups">
            <summary>
            Vuelve a cargar los grupos del cual es muiembro desde el dominio
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.FwkIdentity.ActiveDirectoryGroups">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.FwkIdentity.Domain">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.FwkIdentity.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.FwkIdentity.DistinguishedName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.FwkIdentity.UserPrincipalName">
            <summary>
            Nombre usuario como moviedo@actionline.com
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.FwkIdentity.Mail">
            <summary>
            Correo electionico
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.FwkIdentity.IsAuthenticated">
            <summary>
            Determina cuando el usuario esta autenticado o no.-
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.FwkIdentity.AuthenticationType">
            <summary>
            Tipo de autentificacion usado para determinar al usuario.-
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.FwkIdentity.FirstName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fwk.Security.Common.FwkIdentity.LastName">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
