//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5446.
// 
#pragma warning disable 1591

namespace Fwk.CheckLogging.fwksec {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ActiveDirectorySoap", Namespace="http://tempuri.org/")]
    public partial class ActiveDirectory : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AutenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback User_ExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback Retrive_User_ByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Retrive_User_GroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Retrive_Users_By_GroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback Retrive_GroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Retrive_DomainsUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback User_Reset_PasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback User_SetActivationOperationCompleted;
        
        private System.Threading.SendOrPostCallback User_UnlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback User_LockOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ActiveDirectory() {
            this.Url = global::Fwk.CheckLogging.Properties.Settings.Default.Fwk_CheckLogging_fwksec_ActiveDirectory;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AutenticateCompletedEventHandler AutenticateCompleted;
        
        /// <remarks/>
        public event User_ExistCompletedEventHandler User_ExistCompleted;
        
        /// <remarks/>
        public event Retrive_User_ByNameCompletedEventHandler Retrive_User_ByNameCompleted;
        
        /// <remarks/>
        public event Retrive_User_GroupsCompletedEventHandler Retrive_User_GroupsCompleted;
        
        /// <remarks/>
        public event Retrive_Users_By_GroupCompletedEventHandler Retrive_Users_By_GroupCompleted;
        
        /// <remarks/>
        public event Retrive_GroupsCompletedEventHandler Retrive_GroupsCompleted;
        
        /// <remarks/>
        public event Retrive_DomainsUrlCompletedEventHandler Retrive_DomainsUrlCompleted;
        
        /// <remarks/>
        public event User_Reset_PasswordCompletedEventHandler User_Reset_PasswordCompleted;
        
        /// <remarks/>
        public event User_SetActivationCompletedEventHandler User_SetActivationCompleted;
        
        /// <remarks/>
        public event User_UnlockCompletedEventHandler User_UnlockCompleted;
        
        /// <remarks/>
        public event User_LockCompletedEventHandler User_LockCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Autenticate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LoogonUserResult Autenticate(string userName, string password, string domain) {
            object[] results = this.Invoke("Autenticate", new object[] {
                        userName,
                        password,
                        domain});
            return ((LoogonUserResult)(results[0]));
        }
        
        /// <remarks/>
        public void AutenticateAsync(string userName, string password, string domain) {
            this.AutenticateAsync(userName, password, domain, null);
        }
        
        /// <remarks/>
        public void AutenticateAsync(string userName, string password, string domain, object userState) {
            if ((this.AutenticateOperationCompleted == null)) {
                this.AutenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutenticateOperationCompleted);
            }
            this.InvokeAsync("Autenticate", new object[] {
                        userName,
                        password,
                        domain}, this.AutenticateOperationCompleted, userState);
        }
        
        private void OnAutenticateOperationCompleted(object arg) {
            if ((this.AutenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutenticateCompleted(this, new AutenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/User_Exist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool User_Exist(string userName, string domain) {
            object[] results = this.Invoke("User_Exist", new object[] {
                        userName,
                        domain});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void User_ExistAsync(string userName, string domain) {
            this.User_ExistAsync(userName, domain, null);
        }
        
        /// <remarks/>
        public void User_ExistAsync(string userName, string domain, object userState) {
            if ((this.User_ExistOperationCompleted == null)) {
                this.User_ExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUser_ExistOperationCompleted);
            }
            this.InvokeAsync("User_Exist", new object[] {
                        userName,
                        domain}, this.User_ExistOperationCompleted, userState);
        }
        
        private void OnUser_ExistOperationCompleted(object arg) {
            if ((this.User_ExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.User_ExistCompleted(this, new User_ExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Retrive_User_ByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser Retrive_User_ByName(string userName, string domain) {
            object[] results = this.Invoke("Retrive_User_ByName", new object[] {
                        userName,
                        domain});
            return ((ActiveDirectoryUser)(results[0]));
        }
        
        /// <remarks/>
        public void Retrive_User_ByNameAsync(string userName, string domain) {
            this.Retrive_User_ByNameAsync(userName, domain, null);
        }
        
        /// <remarks/>
        public void Retrive_User_ByNameAsync(string userName, string domain, object userState) {
            if ((this.Retrive_User_ByNameOperationCompleted == null)) {
                this.Retrive_User_ByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrive_User_ByNameOperationCompleted);
            }
            this.InvokeAsync("Retrive_User_ByName", new object[] {
                        userName,
                        domain}, this.Retrive_User_ByNameOperationCompleted, userState);
        }
        
        private void OnRetrive_User_ByNameOperationCompleted(object arg) {
            if ((this.Retrive_User_ByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Retrive_User_ByNameCompleted(this, new Retrive_User_ByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Retrive_User_Groups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryGroup[] Retrive_User_Groups(string userName, string domain) {
            object[] results = this.Invoke("Retrive_User_Groups", new object[] {
                        userName,
                        domain});
            return ((ActiveDirectoryGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void Retrive_User_GroupsAsync(string userName, string domain) {
            this.Retrive_User_GroupsAsync(userName, domain, null);
        }
        
        /// <remarks/>
        public void Retrive_User_GroupsAsync(string userName, string domain, object userState) {
            if ((this.Retrive_User_GroupsOperationCompleted == null)) {
                this.Retrive_User_GroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrive_User_GroupsOperationCompleted);
            }
            this.InvokeAsync("Retrive_User_Groups", new object[] {
                        userName,
                        domain}, this.Retrive_User_GroupsOperationCompleted, userState);
        }
        
        private void OnRetrive_User_GroupsOperationCompleted(object arg) {
            if ((this.Retrive_User_GroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Retrive_User_GroupsCompleted(this, new Retrive_User_GroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Retrive_Users_By_Group", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryUser[] Retrive_Users_By_Group(string groupName, string domain) {
            object[] results = this.Invoke("Retrive_Users_By_Group", new object[] {
                        groupName,
                        domain});
            return ((ActiveDirectoryUser[])(results[0]));
        }
        
        /// <remarks/>
        public void Retrive_Users_By_GroupAsync(string groupName, string domain) {
            this.Retrive_Users_By_GroupAsync(groupName, domain, null);
        }
        
        /// <remarks/>
        public void Retrive_Users_By_GroupAsync(string groupName, string domain, object userState) {
            if ((this.Retrive_Users_By_GroupOperationCompleted == null)) {
                this.Retrive_Users_By_GroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrive_Users_By_GroupOperationCompleted);
            }
            this.InvokeAsync("Retrive_Users_By_Group", new object[] {
                        groupName,
                        domain}, this.Retrive_Users_By_GroupOperationCompleted, userState);
        }
        
        private void OnRetrive_Users_By_GroupOperationCompleted(object arg) {
            if ((this.Retrive_Users_By_GroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Retrive_Users_By_GroupCompleted(this, new Retrive_Users_By_GroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Retrive_Groups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActiveDirectoryGroup[] Retrive_Groups(string domain) {
            object[] results = this.Invoke("Retrive_Groups", new object[] {
                        domain});
            return ((ActiveDirectoryGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void Retrive_GroupsAsync(string domain) {
            this.Retrive_GroupsAsync(domain, null);
        }
        
        /// <remarks/>
        public void Retrive_GroupsAsync(string domain, object userState) {
            if ((this.Retrive_GroupsOperationCompleted == null)) {
                this.Retrive_GroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrive_GroupsOperationCompleted);
            }
            this.InvokeAsync("Retrive_Groups", new object[] {
                        domain}, this.Retrive_GroupsOperationCompleted, userState);
        }
        
        private void OnRetrive_GroupsOperationCompleted(object arg) {
            if ((this.Retrive_GroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Retrive_GroupsCompleted(this, new Retrive_GroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Retrive_DomainsUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DomainsUrl[] Retrive_DomainsUrl() {
            object[] results = this.Invoke("Retrive_DomainsUrl", new object[0]);
            return ((DomainsUrl[])(results[0]));
        }
        
        /// <remarks/>
        public void Retrive_DomainsUrlAsync() {
            this.Retrive_DomainsUrlAsync(null);
        }
        
        /// <remarks/>
        public void Retrive_DomainsUrlAsync(object userState) {
            if ((this.Retrive_DomainsUrlOperationCompleted == null)) {
                this.Retrive_DomainsUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrive_DomainsUrlOperationCompleted);
            }
            this.InvokeAsync("Retrive_DomainsUrl", new object[0], this.Retrive_DomainsUrlOperationCompleted, userState);
        }
        
        private void OnRetrive_DomainsUrlOperationCompleted(object arg) {
            if ((this.Retrive_DomainsUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Retrive_DomainsUrlCompleted(this, new Retrive_DomainsUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/User_Reset_Password", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void User_Reset_Password(string userName, string newPassword, string domain) {
            this.Invoke("User_Reset_Password", new object[] {
                        userName,
                        newPassword,
                        domain});
        }
        
        /// <remarks/>
        public void User_Reset_PasswordAsync(string userName, string newPassword, string domain) {
            this.User_Reset_PasswordAsync(userName, newPassword, domain, null);
        }
        
        /// <remarks/>
        public void User_Reset_PasswordAsync(string userName, string newPassword, string domain, object userState) {
            if ((this.User_Reset_PasswordOperationCompleted == null)) {
                this.User_Reset_PasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUser_Reset_PasswordOperationCompleted);
            }
            this.InvokeAsync("User_Reset_Password", new object[] {
                        userName,
                        newPassword,
                        domain}, this.User_Reset_PasswordOperationCompleted, userState);
        }
        
        private void OnUser_Reset_PasswordOperationCompleted(object arg) {
            if ((this.User_Reset_PasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.User_Reset_PasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/User_SetActivation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void User_SetActivation(string userName, bool disabled, string domain) {
            this.Invoke("User_SetActivation", new object[] {
                        userName,
                        disabled,
                        domain});
        }
        
        /// <remarks/>
        public void User_SetActivationAsync(string userName, bool disabled, string domain) {
            this.User_SetActivationAsync(userName, disabled, domain, null);
        }
        
        /// <remarks/>
        public void User_SetActivationAsync(string userName, bool disabled, string domain, object userState) {
            if ((this.User_SetActivationOperationCompleted == null)) {
                this.User_SetActivationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUser_SetActivationOperationCompleted);
            }
            this.InvokeAsync("User_SetActivation", new object[] {
                        userName,
                        disabled,
                        domain}, this.User_SetActivationOperationCompleted, userState);
        }
        
        private void OnUser_SetActivationOperationCompleted(object arg) {
            if ((this.User_SetActivationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.User_SetActivationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/User_Unlock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void User_Unlock(string userName, string domain) {
            this.Invoke("User_Unlock", new object[] {
                        userName,
                        domain});
        }
        
        /// <remarks/>
        public void User_UnlockAsync(string userName, string domain) {
            this.User_UnlockAsync(userName, domain, null);
        }
        
        /// <remarks/>
        public void User_UnlockAsync(string userName, string domain, object userState) {
            if ((this.User_UnlockOperationCompleted == null)) {
                this.User_UnlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUser_UnlockOperationCompleted);
            }
            this.InvokeAsync("User_Unlock", new object[] {
                        userName,
                        domain}, this.User_UnlockOperationCompleted, userState);
        }
        
        private void OnUser_UnlockOperationCompleted(object arg) {
            if ((this.User_UnlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.User_UnlockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/User_Lock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void User_Lock(string userName, string domain) {
            this.Invoke("User_Lock", new object[] {
                        userName,
                        domain});
        }
        
        /// <remarks/>
        public void User_LockAsync(string userName, string domain) {
            this.User_LockAsync(userName, domain, null);
        }
        
        /// <remarks/>
        public void User_LockAsync(string userName, string domain, object userState) {
            if ((this.User_LockOperationCompleted == null)) {
                this.User_LockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUser_LockOperationCompleted);
            }
            this.InvokeAsync("User_Lock", new object[] {
                        userName,
                        domain}, this.User_LockOperationCompleted, userState);
        }
        
        private void OnUser_LockOperationCompleted(object arg) {
            if ((this.User_LockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.User_LockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LoogonUserResult {
        
        private string errorMessageField;
        
        private string logResultField;
        
        private bool autenticatedField;
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string LogResult {
            get {
                return this.logResultField;
            }
            set {
                this.logResultField = value;
            }
        }
        
        /// <remarks/>
        public bool Autenticated {
            get {
                return this.autenticatedField;
            }
            set {
                this.autenticatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DomainsUrl {
        
        private string domainNameField;
        
        private string lDAPPathField;
        
        private string usrField;
        
        private string pwdField;
        
        private int idField;
        
        private string siteNameField;
        
        private string domainDNField;
        
        /// <remarks/>
        public string DomainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
            }
        }
        
        /// <remarks/>
        public string LDAPPath {
            get {
                return this.lDAPPathField;
            }
            set {
                this.lDAPPathField = value;
            }
        }
        
        /// <remarks/>
        public string Usr {
            get {
                return this.usrField;
            }
            set {
                this.usrField = value;
            }
        }
        
        /// <remarks/>
        public string Pwd {
            get {
                return this.pwdField;
            }
            set {
                this.pwdField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string SiteName {
            get {
                return this.siteNameField;
            }
            set {
                this.siteNameField = value;
            }
        }
        
        /// <remarks/>
        public string DomainDN {
            get {
                return this.domainDNField;
            }
            set {
                this.domainDNField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ActiveDirectoryGroup {
        
        private string domainField;
        
        private string nameField;
        
        private string firstNameField;
        
        private string descriptionField;
        
        private string distinguishedNameField;
        
        private string categoryField;
        
        private string cnField;
        
        private string[] ouField;
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DistinguishedName {
            get {
                return this.distinguishedNameField;
            }
            set {
                this.distinguishedNameField = value;
            }
        }
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string CN {
            get {
                return this.cnField;
            }
            set {
                this.cnField = value;
            }
        }
        
        /// <remarks/>
        public string[] OU {
            get {
                return this.ouField;
            }
            set {
                this.ouField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ActiveDirectoryUser {
        
        private string userAccountControlField;
        
        private string departmentField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string loginNameField;
        
        private string loginNameWithDomainField;
        
        private string streetAddressField;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryField;
        
        private string homePhoneField;
        
        private string extensionField;
        
        private string mobileField;
        
        private string faxField;
        
        private string emailAddressField;
        
        private string titleField;
        
        private string companyField;
        
        /// <remarks/>
        public string UserAccountControl {
            get {
                return this.userAccountControlField;
            }
            set {
                this.userAccountControlField = value;
            }
        }
        
        /// <remarks/>
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string LoginName {
            get {
                return this.loginNameField;
            }
            set {
                this.loginNameField = value;
            }
        }
        
        /// <remarks/>
        public string LoginNameWithDomain {
            get {
                return this.loginNameWithDomainField;
            }
            set {
                this.loginNameWithDomainField = value;
            }
        }
        
        /// <remarks/>
        public string StreetAddress {
            get {
                return this.streetAddressField;
            }
            set {
                this.streetAddressField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string HomePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void AutenticateCompletedEventHandler(object sender, AutenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LoogonUserResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoogonUserResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void User_ExistCompletedEventHandler(object sender, User_ExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class User_ExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal User_ExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void Retrive_User_ByNameCompletedEventHandler(object sender, Retrive_User_ByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retrive_User_ByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Retrive_User_ByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void Retrive_User_GroupsCompletedEventHandler(object sender, Retrive_User_GroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retrive_User_GroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Retrive_User_GroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void Retrive_Users_By_GroupCompletedEventHandler(object sender, Retrive_Users_By_GroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retrive_Users_By_GroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Retrive_Users_By_GroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void Retrive_GroupsCompletedEventHandler(object sender, Retrive_GroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retrive_GroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Retrive_GroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActiveDirectoryGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActiveDirectoryGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void Retrive_DomainsUrlCompletedEventHandler(object sender, Retrive_DomainsUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retrive_DomainsUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Retrive_DomainsUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DomainsUrl[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DomainsUrl[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void User_Reset_PasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void User_SetActivationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void User_UnlockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void User_LockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591