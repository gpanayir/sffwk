//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CentralizedSecurity.W32.Test.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoogonUserResult", Namespace="http://schemas.datacontract.org/2004/07/CentralizedSecurity.wcf.Contracts")]
    [System.SerializableAttribute()]
    public partial class LoogonUserResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutenticatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Autenticated {
            get {
                return this.AutenticatedField;
            }
            set {
                if ((this.AutenticatedField.Equals(value) != true)) {
                    this.AutenticatedField = value;
                    this.RaisePropertyChanged("Autenticated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogResult {
            get {
                return this.LogResultField;
            }
            set {
                if ((object.ReferenceEquals(this.LogResultField, value) != true)) {
                    this.LogResultField = value;
                    this.RaisePropertyChanged("LogResult");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICoreSecurity")]
    public interface ICoreSecurity {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoreSecurity/Autenticate", ReplyAction="http://tempuri.org/ICoreSecurity/AutenticateResponse")]
        CentralizedSecurity.W32.Test.ServiceReference1.LoogonUserResult Autenticate(string userName, string password, string domain);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoreSecurity/Autenticate", ReplyAction="http://tempuri.org/ICoreSecurity/AutenticateResponse")]
        System.IAsyncResult BeginAutenticate(string userName, string password, string domain, System.AsyncCallback callback, object asyncState);
        
        CentralizedSecurity.W32.Test.ServiceReference1.LoogonUserResult EndAutenticate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoreSecurity/GetDomainNames", ReplyAction="http://tempuri.org/ICoreSecurity/GetDomainNamesResponse")]
        string GetDomainNames();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoreSecurity/GetDomainNames", ReplyAction="http://tempuri.org/ICoreSecurity/GetDomainNamesResponse")]
        System.IAsyncResult BeginGetDomainNames(System.AsyncCallback callback, object asyncState);
        
        string EndGetDomainNames(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoreSecurity/Test", ReplyAction="http://tempuri.org/ICoreSecurity/TestResponse")]
        string Test();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICoreSecurity/Test", ReplyAction="http://tempuri.org/ICoreSecurity/TestResponse")]
        System.IAsyncResult BeginTest(System.AsyncCallback callback, object asyncState);
        
        string EndTest(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICoreSecurityChannel : CentralizedSecurity.W32.Test.ServiceReference1.ICoreSecurity, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AutenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AutenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CentralizedSecurity.W32.Test.ServiceReference1.LoogonUserResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CentralizedSecurity.W32.Test.ServiceReference1.LoogonUserResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDomainNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDomainNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoreSecurityClient : System.ServiceModel.ClientBase<CentralizedSecurity.W32.Test.ServiceReference1.ICoreSecurity>, CentralizedSecurity.W32.Test.ServiceReference1.ICoreSecurity {
        
        private BeginOperationDelegate onBeginAutenticateDelegate;
        
        private EndOperationDelegate onEndAutenticateDelegate;
        
        private System.Threading.SendOrPostCallback onAutenticateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDomainNamesDelegate;
        
        private EndOperationDelegate onEndGetDomainNamesDelegate;
        
        private System.Threading.SendOrPostCallback onGetDomainNamesCompletedDelegate;
        
        private BeginOperationDelegate onBeginTestDelegate;
        
        private EndOperationDelegate onEndTestDelegate;
        
        private System.Threading.SendOrPostCallback onTestCompletedDelegate;
        
        public CoreSecurityClient() {
        }
        
        public CoreSecurityClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CoreSecurityClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoreSecurityClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoreSecurityClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<AutenticateCompletedEventArgs> AutenticateCompleted;
        
        public event System.EventHandler<GetDomainNamesCompletedEventArgs> GetDomainNamesCompleted;
        
        public event System.EventHandler<TestCompletedEventArgs> TestCompleted;
        
        public CentralizedSecurity.W32.Test.ServiceReference1.LoogonUserResult Autenticate(string userName, string password, string domain) {
            return base.Channel.Autenticate(userName, password, domain);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAutenticate(string userName, string password, string domain, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAutenticate(userName, password, domain, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public CentralizedSecurity.W32.Test.ServiceReference1.LoogonUserResult EndAutenticate(System.IAsyncResult result) {
            return base.Channel.EndAutenticate(result);
        }
        
        private System.IAsyncResult OnBeginAutenticate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string domain = ((string)(inValues[2]));
            return this.BeginAutenticate(userName, password, domain, callback, asyncState);
        }
        
        private object[] OnEndAutenticate(System.IAsyncResult result) {
            CentralizedSecurity.W32.Test.ServiceReference1.LoogonUserResult retVal = this.EndAutenticate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAutenticateCompleted(object state) {
            if ((this.AutenticateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AutenticateCompleted(this, new AutenticateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AutenticateAsync(string userName, string password, string domain) {
            this.AutenticateAsync(userName, password, domain, null);
        }
        
        public void AutenticateAsync(string userName, string password, string domain, object userState) {
            if ((this.onBeginAutenticateDelegate == null)) {
                this.onBeginAutenticateDelegate = new BeginOperationDelegate(this.OnBeginAutenticate);
            }
            if ((this.onEndAutenticateDelegate == null)) {
                this.onEndAutenticateDelegate = new EndOperationDelegate(this.OnEndAutenticate);
            }
            if ((this.onAutenticateCompletedDelegate == null)) {
                this.onAutenticateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAutenticateCompleted);
            }
            base.InvokeAsync(this.onBeginAutenticateDelegate, new object[] {
                        userName,
                        password,
                        domain}, this.onEndAutenticateDelegate, this.onAutenticateCompletedDelegate, userState);
        }
        
        public string GetDomainNames() {
            return base.Channel.GetDomainNames();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDomainNames(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDomainNames(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetDomainNames(System.IAsyncResult result) {
            return base.Channel.EndGetDomainNames(result);
        }
        
        private System.IAsyncResult OnBeginGetDomainNames(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDomainNames(callback, asyncState);
        }
        
        private object[] OnEndGetDomainNames(System.IAsyncResult result) {
            string retVal = this.EndGetDomainNames(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDomainNamesCompleted(object state) {
            if ((this.GetDomainNamesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDomainNamesCompleted(this, new GetDomainNamesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDomainNamesAsync() {
            this.GetDomainNamesAsync(null);
        }
        
        public void GetDomainNamesAsync(object userState) {
            if ((this.onBeginGetDomainNamesDelegate == null)) {
                this.onBeginGetDomainNamesDelegate = new BeginOperationDelegate(this.OnBeginGetDomainNames);
            }
            if ((this.onEndGetDomainNamesDelegate == null)) {
                this.onEndGetDomainNamesDelegate = new EndOperationDelegate(this.OnEndGetDomainNames);
            }
            if ((this.onGetDomainNamesCompletedDelegate == null)) {
                this.onGetDomainNamesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDomainNamesCompleted);
            }
            base.InvokeAsync(this.onBeginGetDomainNamesDelegate, null, this.onEndGetDomainNamesDelegate, this.onGetDomainNamesCompletedDelegate, userState);
        }
        
        public string Test() {
            return base.Channel.Test();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTest(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTest(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndTest(System.IAsyncResult result) {
            return base.Channel.EndTest(result);
        }
        
        private System.IAsyncResult OnBeginTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginTest(callback, asyncState);
        }
        
        private object[] OnEndTest(System.IAsyncResult result) {
            string retVal = this.EndTest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTestCompleted(object state) {
            if ((this.TestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TestCompleted(this, new TestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TestAsync() {
            this.TestAsync(null);
        }
        
        public void TestAsync(object userState) {
            if ((this.onBeginTestDelegate == null)) {
                this.onBeginTestDelegate = new BeginOperationDelegate(this.OnBeginTest);
            }
            if ((this.onEndTestDelegate == null)) {
                this.onEndTestDelegate = new EndOperationDelegate(this.OnEndTest);
            }
            if ((this.onTestCompletedDelegate == null)) {
                this.onTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTestCompleted);
            }
            base.InvokeAsync(this.onBeginTestDelegate, null, this.onEndTestDelegate, this.onTestCompletedDelegate, userState);
        }
    }
}
