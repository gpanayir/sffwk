#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FwkSqlTrace
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Gastos")]
	public partial class TraceDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTrace(Trace instance);
    partial void UpdateTrace(Trace instance);
    partial void DeleteTrace(Trace instance);
    #endregion
		
		public TraceDataContext() : 
				base(global::FwkSqlTrace.Properties.Settings.Default.GastosConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TraceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TraceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TraceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TraceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Trace> Traces
		{
			get
			{
				return this.GetTable<Trace>();
			}
		}
	}
	
	[Table(Name="dbo.trace")]
	public partial class Trace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<int> _EventClass;
		
		private string _TextData;
		
		private string _ApplicationName;
		
		private string _NTUserName;
		
		private string _LoginName;
		
		private System.Nullable<int> _CPU;
		
		private System.Nullable<long> _Reads;
		
		private System.Nullable<long> _Writes;
		
		private System.Nullable<long> _Duration;
		
		private System.Nullable<int> _ClientProcessID;
		
		private System.Nullable<int> _SPID;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnEventClassChanging(System.Nullable<int> value);
    partial void OnEventClassChanged();
    partial void OnTextDataChanging(string value);
    partial void OnTextDataChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnNTUserNameChanging(string value);
    partial void OnNTUserNameChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnCPUChanging(System.Nullable<int> value);
    partial void OnCPUChanged();
    partial void OnReadsChanging(System.Nullable<long> value);
    partial void OnReadsChanged();
    partial void OnWritesChanging(System.Nullable<long> value);
    partial void OnWritesChanged();
    partial void OnDurationChanging(System.Nullable<long> value);
    partial void OnDurationChanged();
    partial void OnClientProcessIDChanging(System.Nullable<int> value);
    partial void OnClientProcessIDChanged();
    partial void OnSPIDChanging(System.Nullable<int> value);
    partial void OnSPIDChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    #endregion
		
		public Trace()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_EventClass", DbType="Int")]
		public System.Nullable<int> EventClass
		{
			get
			{
				return this._EventClass;
			}
			set
			{
				if ((this._EventClass != value))
				{
					this.OnEventClassChanging(value);
					this.SendPropertyChanging();
					this._EventClass = value;
					this.SendPropertyChanged("EventClass");
					this.OnEventClassChanged();
				}
			}
		}
		
		[Column(Storage="_TextData", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TextData
		{
			get
			{
				return this._TextData;
			}
			set
			{
				if ((this._TextData != value))
				{
					this.OnTextDataChanging(value);
					this.SendPropertyChanging();
					this._TextData = value;
					this.SendPropertyChanged("TextData");
					this.OnTextDataChanged();
				}
			}
		}
		
		[Column(Storage="_ApplicationName", DbType="NVarChar(128)")]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[Column(Storage="_NTUserName", DbType="NVarChar(128)")]
		public string NTUserName
		{
			get
			{
				return this._NTUserName;
			}
			set
			{
				if ((this._NTUserName != value))
				{
					this.OnNTUserNameChanging(value);
					this.SendPropertyChanging();
					this._NTUserName = value;
					this.SendPropertyChanged("NTUserName");
					this.OnNTUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_LoginName", DbType="NVarChar(128)")]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[Column(Storage="_CPU", DbType="Int")]
		public System.Nullable<int> CPU
		{
			get
			{
				return this._CPU;
			}
			set
			{
				if ((this._CPU != value))
				{
					this.OnCPUChanging(value);
					this.SendPropertyChanging();
					this._CPU = value;
					this.SendPropertyChanged("CPU");
					this.OnCPUChanged();
				}
			}
		}
		
		[Column(Storage="_Reads", DbType="BigInt")]
		public System.Nullable<long> Reads
		{
			get
			{
				return this._Reads;
			}
			set
			{
				if ((this._Reads != value))
				{
					this.OnReadsChanging(value);
					this.SendPropertyChanging();
					this._Reads = value;
					this.SendPropertyChanged("Reads");
					this.OnReadsChanged();
				}
			}
		}
		
		[Column(Storage="_Writes", DbType="BigInt")]
		public System.Nullable<long> Writes
		{
			get
			{
				return this._Writes;
			}
			set
			{
				if ((this._Writes != value))
				{
					this.OnWritesChanging(value);
					this.SendPropertyChanging();
					this._Writes = value;
					this.SendPropertyChanged("Writes");
					this.OnWritesChanged();
				}
			}
		}
		
		[Column(Storage="_Duration", DbType="BigInt")]
		public System.Nullable<long> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[Column(Storage="_ClientProcessID", DbType="Int")]
		public System.Nullable<int> ClientProcessID
		{
			get
			{
				return this._ClientProcessID;
			}
			set
			{
				if ((this._ClientProcessID != value))
				{
					this.OnClientProcessIDChanging(value);
					this.SendPropertyChanging();
					this._ClientProcessID = value;
					this.SendPropertyChanged("ClientProcessID");
					this.OnClientProcessIDChanged();
				}
			}
		}
		
		[Column(Storage="_SPID", DbType="Int")]
		public System.Nullable<int> SPID
		{
			get
			{
				return this._SPID;
			}
			set
			{
				if ((this._SPID != value))
				{
					this.OnSPIDChanging(value);
					this.SendPropertyChanging();
					this._SPID = value;
					this.SendPropertyChanged("SPID");
					this.OnSPIDChanged();
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
