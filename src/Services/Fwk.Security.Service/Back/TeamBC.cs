//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Prominente Code Generator.
//     Runtime Version:1.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//</auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using Microsoft.Practices.EnterpriseLibrary.Data;
using Fwk.Bases;
using Fwk.Exceptions;
using Fwk.Security.BE;
using Fwk.Security.DAC;



namespace Fwk.Security.BC
{
    /// <summary>
    /// Data access component para Team.
    /// </summary>
    /// <Date>2009-07-27T17:11:18</Date>
    /// <Author>AAguirre</Author>
    public class TeamBC : Fwk.Bases.BaseBC
    {
        public TeamBC(string company) : base(company) { }
        /// <summary>
        /// Insert
        /// </summary>
        ///<param name="pTeamBE">TeamBE</param>
        /// <returns>void</returns>
        /// <Date>2009-07-27T17:11:18</Date>
        /// <Author>AAguirre</Author>
        public  void Insert(TeamBEList pTeamBEList)
        {
            // Se recorren los teams
            foreach (TeamBE item in pTeamBEList)
            {
                TeamDAC.Insert(item,CompanyId);
            }

        }

        /// <summary>
        /// Update
        /// </summary>
        ///<param name="pTeamBE">TeamBE</param>
        /// <returns>void</returns>
        /// <Date>2009-07-27T17:11:18</Date>
        /// <Author>AAguirre</Author>
        public  void Update(TeamBE pTeamBE)
        {
            TeamDAC.Update(pTeamBE,CompanyId);
        }

        /// <summary>
        /// GetAll
        /// </summary>

        /// <returns>DataSet</returns>
        /// <Date>2009-07-27T17:11:18</Date>
        /// <Author>AAguirre</Author>
        public  DataSet GetAll()
        {
            return TeamDAC.GetAll(CompanyId);
        }

        /// <summary>
        /// GetByParam
        /// </summary>
        ///<param name="pTeamBE">TeamBE</param>
        /// <returns>DataSet</returns>
        /// <Date>2009-07-27T17:11:18</Date>
        /// <Author>AAguirre</Author>
        public  TeamBEList GetByParam(TeamBE pTeamBE)
        {
            TeamBE wTeamBE = new TeamBE();
            DataSet wDS = new DataSet();
            String wXml = String.Empty;


            wTeamBE = TeamBE.GetTeamBEFromXml(pTeamBE.GetXml());
            wDS = TeamDAC.GetByParam(wTeamBE,CompanyId);


            //wDS.Tables[0].Columns.Add("Estado");
            //foreach (DataRow wRow in wDS.Tables[0].Rows)
            //{
            //    wRow["Estado"] = 0;
            //}
            wXml = wDS.GetXml();
            wXml = wXml.Replace("NewDataSet", "TeamBEList");
            wXml = wXml.Replace("Table", "TeamBE");

            return TeamBEList.GetTeamBEListFromXml(wXml);
        }

        /// <summary>
        /// Elimina de sus equipos los usuarios recibidos por parametro y los insert en el log.
        /// </summary>
        /// <param name="pUsersIdList">Lista de usuarios a eliminar</param>
        /// <param name="pUserInfo">Información del usuario logueado</param>
        public  void Delete(List<Int32> pUsersIdList, UserInfo pUserInfo)
        {
            foreach (Int32 wUserId in pUsersIdList)
            {
                InsertTeamLog(wUserId, pUserInfo);
            }            

            pUsersIdList.ForEach(Delete);
        }

        /// <summary>
        /// SobreCarga. Elimina de su equipo el usuario recibido por parametro.
        /// </summary>
        /// <param name="pUserId"></param>
         void Delete(Int32 pUserId)
        {
            TeamDAC.Delete(pUserId,CompanyId);
        }

        /// <summary>
        /// Obtiene la información de formación del equipo al que pertenecia el usuario 
        /// eliminado o reasignado y registra la auditoría correspondientes el mismo.
        /// </summary>
        /// <param name="pUserId">Identificador de usuario eliminado o reasignado.</param>
        /// <param name="pUserInfo">Informacion del usuario logueado.</param>
         void InsertTeamLog(Int32 pUserId, UserInfo pUserInfo)
        {
            //El sistema busca por cada usuario eliminado o reasignado los datos de su equipo.
            TeamLogBE wTeamLogBE = TeamDAC.GetTeamInfo(pUserId,CompanyId);
            //El sistema registra los datos de la auditoría correspondientes a la formación 
            //anterior del equipo al que pertenece el usuario eliminado o reasignado.
            if (wTeamLogBE != null)
            {
                wTeamLogBE.ModifiedDate = DateTime.Now;
                wTeamLogBE.ModifiedByUserId = pUserInfo.UserId;
                wTeamLogBE.ModifiedByUserName = pUserInfo.Name;
                TeamDAC.InsertLog(wTeamLogBE,CompanyId);
            }
        }
    }
}