//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Prominente Code Generator.
//     Runtime Version:1.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using Microsoft.Practices.EnterpriseLibrary.Data;
using Fwk.Bases;
using Fwk.Exceptions;
using Fwk.Security.BE;

namespace Fwk.Security.DAC
{
    /// <summary>
    /// DAC para Team
    /// </summary>
    /// <Date>2009-07-27T17:11:18</Date>
    /// <Author>AAguirre</Author>
    public class TeamDAC : Fwk.Bases.BaseDAC
    {
        /// <summary>
        /// Insert
        /// </summary>
        ///<param name="pTeamBE">TeamBE</param>
        /// <returns>void</returns>
        /// <Date>2009-07-27T17:11:18</Date>
        /// <Author>AAguirre</Author>
        public static void Insert(TeamBE pTeamBE,string pCompanyId)
        {
            Database wDataBase = null;
            DbCommand wCmd = null;

            
            GetCnnstring(pCompanyId);
            try
            {
                wDataBase = DatabaseFactory.CreateDatabase(pCompanyId);
                wCmd = wDataBase.GetStoredProcCommand("Security.Team_i");

                /// TeamId
                wDataBase.AddOutParameter(wCmd, "TeamId", System.Data.DbType.Int32, 4);
                /// SuperiorId
                wDataBase.AddInParameter(wCmd, "SuperiorId", System.Data.DbType.Int32, pTeamBE.SuperiorId);
                /// UserId
                wDataBase.AddInParameter(wCmd, "UserId", System.Data.DbType.Int32, pTeamBE.UserId);
                /// StartDate
                wDataBase.AddInParameter(wCmd, "StartDate", System.Data.DbType.DateTime, pTeamBE.StartDate);
                /// EndDate
                wDataBase.AddInParameter(wCmd, "EndDate", System.Data.DbType.DateTime, pTeamBE.EndDate);
                /// TeamName
                wDataBase.AddInParameter(wCmd, "TeamName", System.Data.DbType.String, pTeamBE.TeamName);

                /// ActiveFlag
                wDataBase.AddInParameter(wCmd, "ActiveFlag", System.Data.DbType.Boolean, pTeamBE.ActiveFlag);
                ///TeamLevel
                wDataBase.AddInParameter(wCmd, "TeamLevel", System.Data.DbType.Int32, pTeamBE.TeamLevel);

                wDataBase.ExecuteNonQuery(wCmd);
                pTeamBE.TeamId = (System.Int32)wDataBase.GetParameterValue(wCmd, "TeamId");
            }
            catch (Exception ex)
            {
                throw Fwk.Exceptions.ExceptionHelper.ProcessException(ex);
            }


        }

        /// <summary>
        /// Update
        /// </summary>
        ///<param name="pTeamBE">TeamBE</param>
        /// <returns>void</returns>
        /// <Date>2009-07-27T17:11:18</Date>
        /// <Author>AAguirre</Author>
        public static void Update(TeamBE pTeamBE,string pCompanyId)
        {
            Database wDataBase = null;
            DbCommand wCmd = null;

            try
            {
                wDataBase = DatabaseFactory.CreateDatabase(pCompanyId);
                wCmd = wDataBase.GetStoredProcCommand("dbo.Team_u");

                /// TeamId
                wDataBase.AddInParameter(wCmd, "TeamId", System.Data.DbType.Int32, pTeamBE.TeamId);
                /// SuperiorId
                wDataBase.AddInParameter(wCmd, "SuperiorId", System.Data.DbType.Int32, pTeamBE.SuperiorId);
                /// UserId
                wDataBase.AddInParameter(wCmd, "UserId", System.Data.DbType.Int32, pTeamBE.UserId);
                /// StartDate
                wDataBase.AddInParameter(wCmd, "StartDate", System.Data.DbType.DateTime, pTeamBE.StartDate);
                /// EndDate
                wDataBase.AddInParameter(wCmd, "EndDate", System.Data.DbType.DateTime, pTeamBE.EndDate);
                /// TeamName
                wDataBase.AddInParameter(wCmd, "TeamName", System.Data.DbType.String, pTeamBE.TeamName);
                /// ActiveFlag
                wDataBase.AddInParameter(wCmd, "ActiveFlag", System.Data.DbType.Boolean, pTeamBE.ActiveFlag);

                wDataBase.ExecuteNonQuery(wCmd);

            }
            catch (Exception ex)
            {
                throw Fwk.Exceptions.ExceptionHelper.ProcessException(ex);
            }

        }

        /// <summary>
        /// GetAll
        /// </summary>		
        /// <returns>DataSet</returns>
        /// <Date>2009-07-27T17:11:18</Date>
        /// <Author>AAguirre</Author>
        public static DataSet GetAll(string pCompanyId)
        {
            Database wDataBase = null;
            DbCommand wCmd = null;

            try
            {
                wDataBase = DatabaseFactory.CreateDatabase(pCompanyId);
                wCmd = wDataBase.GetStoredProcCommand("dbo.Team_s");


                return wDataBase.ExecuteDataSet(wCmd);
            }
            catch (Exception ex)
            {
                throw Fwk.Exceptions.ExceptionHelper.ProcessException(ex);
            }

        }

        /// <summary>
        /// GetByParam
        /// </summary>
        ///<param name="pTeamBE">TeamBE</param>
        /// <returns>DataSet</returns>
        /// <Date>2009-07-27T17:11:18</Date>
        /// <Author>AAguirre</Author>
        public static DataSet GetByParam(TeamBE pTeamBE, string pCompanyId)
        {
            Database wDataBase = null;
            DbCommand wCmd = null;

            try
            {
                wDataBase = DatabaseFactory.CreateDatabase(pCompanyId);
                //TODO: renombrar el Stored
                wCmd = wDataBase.GetStoredProcCommand("Security.Team_g2");

                /// StartDate
                wDataBase.AddInParameter(wCmd, "StartDate", System.Data.DbType.DateTime, pTeamBE.StartDate);
                /// EndDate
                wDataBase.AddInParameter(wCmd, "EndDate", System.Data.DbType.DateTime, pTeamBE.EndDate);

                /// ActiveFlag
                wDataBase.AddInParameter(wCmd, "ActiveFlag", System.Data.DbType.Boolean, pTeamBE.ActiveFlag);
                ///FirstName
                wDataBase.AddInParameter(wCmd, "FirstName", System.Data.DbType.String, pTeamBE.FirstName);
                ///LastName
                wDataBase.AddInParameter(wCmd, "LastName", System.Data.DbType.String, pTeamBE.LastName);
                ///UserName
                wDataBase.AddInParameter(wCmd, "UserName", System.Data.DbType.String, pTeamBE.UserName);


                return wDataBase.ExecuteDataSet(wCmd);
            }
            catch (Exception ex)
            {
                throw Fwk.Exceptions.ExceptionHelper.ProcessException(ex);
            }

        }

        /// <summary>
        /// Delete
        /// </summary>
        /// <param name="pUserId"></param>
        /// <Date>2009-08-21T10:15:32</Date>
        /// <Author>jiguastini</Author>
        public static void Delete(Int32 pUserId,string pCompanyId)
        {
            Database wDataBase = null;
            DbCommand wCmd = null;

            try
            {
                wDataBase = DatabaseFactory.CreateDatabase(pCompanyId);
                wCmd = wDataBase.GetStoredProcCommand("Security.Team_d");

                wDataBase.AddInParameter(wCmd, "UserId", System.Data.DbType.Int32, pUserId);

                wDataBase.ExecuteNonQuery(wCmd);
            }
            catch (Exception ex)
            {
                throw Fwk.Exceptions.ExceptionHelper.ProcessException(ex);
            }
        }

        /// <summary>
        /// Procedimiento de insercion de logs de equipos.
        /// </summary>
        ///<param name="pTeamLogBE">TeamLogBE</param>
        /// <returns>void</returns>
        /// <Date>2010-02-19T17:46:03</Date>
        /// <Author>abrondani</Author>
        public static void InsertLog(TeamLogBE pTeamLogBE, string pCompanyId)
        {
            Database wDataBase = null;
            DbCommand wCmd = null;

            try
            {
                wDataBase = DatabaseFactory.CreateDatabase(pCompanyId);
                wCmd = wDataBase.GetStoredProcCommand("Security.TeamLog_i");

                /// TeamLogId
                wDataBase.AddOutParameter(wCmd, "TeamLogId", System.Data.DbType.Int32, 4);
                /// SuperiorId
                wDataBase.AddInParameter(wCmd, "SuperiorId", System.Data.DbType.Int32, pTeamLogBE.SuperiorId);
                /// SuperiorName
                wDataBase.AddInParameter(wCmd, "SuperiorName", System.Data.DbType.String, pTeamLogBE.SuperiorName);
                /// SuperiorFirstName
                wDataBase.AddInParameter(wCmd, "SuperiorFirstName", System.Data.DbType.String, pTeamLogBE.SuperiorFirstName);
                /// SuperiorLastName
                wDataBase.AddInParameter(wCmd, "SuperiorLastName", System.Data.DbType.String, pTeamLogBE.SuperiorLastName);
                /// UserId
                wDataBase.AddInParameter(wCmd, "UserId", System.Data.DbType.Int32, pTeamLogBE.UserId);
                /// UserName
                wDataBase.AddInParameter(wCmd, "UserName", System.Data.DbType.String, pTeamLogBE.UserName);
                /// UserFirstName
                wDataBase.AddInParameter(wCmd, "UserFirstName", System.Data.DbType.String, pTeamLogBE.UserFirstName);
                /// UserLastName
                wDataBase.AddInParameter(wCmd, "UserLastName", System.Data.DbType.String, pTeamLogBE.UserLastName);
                /// StartDate
                wDataBase.AddInParameter(wCmd, "StartDate", System.Data.DbType.DateTime, pTeamLogBE.StartDate);
                /// TeamLevel
                wDataBase.AddInParameter(wCmd, "TeamLevel", System.Data.DbType.Int32, pTeamLogBE.TeamLevel);
                /// ModifiedDate
                wDataBase.AddInParameter(wCmd, "ModifiedDate", System.Data.DbType.DateTime, pTeamLogBE.ModifiedDate);
                /// ModifiedByUserId
                wDataBase.AddInParameter(wCmd, "ModifiedByUserId", System.Data.DbType.Int32, pTeamLogBE.ModifiedByUserId);
                /// ModifiedByUserName
                wDataBase.AddInParameter(wCmd, "ModifiedByUserName", System.Data.DbType.String, pTeamLogBE.ModifiedByUserName);

                wDataBase.ExecuteNonQuery(wCmd);

                pTeamLogBE.TeamLogId = (System.Int32)wDataBase.GetParameterValue(wCmd, "TeamLogId");
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        /// <summary>
        /// Obtiene la información de equipo del usuario recibido por parametro.
        /// </summary>
        /// <param name="pUserId">Identificador de usuario.</param>
        /// <returns></returns>
        public static TeamLogBE GetTeamInfo(Int32 pUserId, string pCompanyId)
        {
            Database wDatabase = null;
            DbCommand wDbCommand = null;
            TeamLogBE wTeamLogBE = null;

            try
            {
                wDatabase = DatabaseFactory.CreateDatabase(pCompanyId);
                wDbCommand = wDatabase.GetStoredProcCommand("Security.TeamInfo_g_ByUser");

                wDatabase.AddInParameter(wDbCommand, "UserId", DbType.Int32, pUserId);

                using (SqlDataReader wDataReader = (SqlDataReader)wDatabase.ExecuteReader(wDbCommand))
                {
                    if (wDataReader.HasRows)
                    {
                        wDataReader.Read();
                        wTeamLogBE = new TeamLogBE();

                        wTeamLogBE.UserName = wDataReader.GetString(wDataReader.GetOrdinal("Name"));
                        wTeamLogBE.UserLastName = wDataReader.GetString(wDataReader.GetOrdinal("LastName"));
                        wTeamLogBE.UserFirstName = wDataReader.GetString(wDataReader.GetOrdinal("FirstName"));
                        wTeamLogBE.UserId = wDataReader.GetInt32(wDataReader.GetOrdinal("UserId"));
                        wTeamLogBE.SuperiorId = wDataReader.GetInt32(wDataReader.GetOrdinal("SuperiorId"));

                        if (wTeamLogBE.SuperiorId > 0)
                        {
                            wTeamLogBE.SuperiorName = wDataReader.GetString(wDataReader.GetOrdinal("SuperiorName"));

                            if (!wDataReader.IsDBNull(wDataReader.GetOrdinal("SuperiorLastName")))
                            {
                                wTeamLogBE.SuperiorLastName = wDataReader.GetString(wDataReader.GetOrdinal("SuperiorLastName"));
                            }
                            if (!wDataReader.IsDBNull(wDataReader.GetOrdinal("SuperiorFirstName")))
                            {
                                wTeamLogBE.SuperiorFirstName = wDataReader.GetString(wDataReader.GetOrdinal("SuperiorFirstName"));
                            }                            
                        }

                        if (!wDataReader.IsDBNull(wDataReader.GetOrdinal("TeamLevel")))
                        {
                            wTeamLogBE.TeamLevel = wDataReader.GetInt32(wDataReader.GetOrdinal("TeamLevel"));
                        }
                        if (!wDataReader.IsDBNull(wDataReader.GetOrdinal("StartDate")))
                        {
                            wTeamLogBE.StartDate = wDataReader.GetDateTime(wDataReader.GetOrdinal("StartDate"));
                        }
                    }

                    wDataReader.Close();
                }

                return wTeamLogBE;
            }
            catch (Exception ex)
            {
                throw Fwk.Exceptions.ExceptionHelper.ProcessException(ex);
            }
        }
    }
}