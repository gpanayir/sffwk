using System;
using System.IO;
using System.Xml;
using System.Text;
using System.Collections.Generic;
using Fwk.Xml;
using Fwk.Exceptions;

namespace Fwk.Logging.Targets
{
    /// <summary>
    /// Destino de tipo archivo .Xml.
    /// </summary>
    /// <date>20006/09/02</date>
    /// <author>moviedo</author>
    public class XmlTarget : Target
    {
        #region <constructor>
        /// <summary>
        /// Constructor de XmlTarget.
        /// </summary>
        public XmlTarget()
        {
            this.Type = TargetType.Xml;
        }
        #endregion

        #region <public overrides>
        /// <summary>
        /// Implementaci√≥n de la escritura del log del evento
        /// en archivo .Xml.
        /// </summary>
        /// <param name="pEvent">Evento a loguear.</param>
        public override void Write(Event pEvent)
        {
            XmlDocument wDocument = null;
            wDocument = OpenXmlDocumentFromFile();

            wDocument.DocumentElement.AppendChild(wDocument.ImportNode(pEvent.ToXml(), true));
            wDocument.Save(this.FileName);
        }
        #endregion

        #region <private methods>
        /// <summary>
        /// Retorna un XmlDocument asociado al archivo especificado
        /// en la propiedad FileName, si es que este existe. En caso
        /// contrario, retorna un 'nuevo' XmlDocument.
        /// </summary>
        /// <returns>XmlDocument.</returns>
        private XmlDocument OpenXmlDocumentFromFile()
        {
            XmlDocument wDocument = new XmlDocument();
            if (this.FileName.Trim().Length == 0)
            {
                TechnicalException te = new TechnicalException("Debe especificar un nombre de archivo para guardar el log.");
                te.Assembly = "Fwk.Logging.Targets";
                te.Class = "XmlTarget";
                te.ErrorId = "9000";
                te.Namespace = "Fwk.Logging";
                te.UserName = Environment.UserName;
                te.Machine = Environment.MachineName;
                throw te;
            }

            FileInfo wFileInfo = new FileInfo(this.FileName);
            if (!wFileInfo.Exists)
            {
                if (!wFileInfo.Directory.Exists)
                {
                    Directory.CreateDirectory(wFileInfo.DirectoryName);
                }
                Element.ElementCreateAndAdd(wDocument, "Logs");
                return wDocument;
            }
            wDocument.Load(this.FileName);
            return wDocument;
        }
        #endregion
    }
}
